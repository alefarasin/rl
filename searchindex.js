Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.libs.brax.BraxEnv", "reference/generated/torchrl.envs.libs.brax.BraxWrapper", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper", "reference/generated/torchrl.envs.libs.gym.GymEnv", "reference/generated/torchrl.envs.libs.gym.GymWrapper", "reference/generated/torchrl.envs.libs.gym.MOGymEnv", "reference/generated/torchrl.envs.libs.gym.MOGymWrapper", "reference/generated/torchrl.envs.libs.gym.gym_backend", "reference/generated/torchrl.envs.libs.gym.set_gym_backend", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper", "reference/generated/torchrl.envs.libs.openml.OpenMLEnv", "reference/generated/torchrl.envs.libs.vmas.VmasEnv", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxEnv.rst", "reference/generated/torchrl.envs.libs.brax.BraxWrapper.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlEnv.rst", "reference/generated/torchrl.envs.libs.dm_control.DMControlWrapper.rst", "reference/generated/torchrl.envs.libs.gym.GymEnv.rst", "reference/generated/torchrl.envs.libs.gym.GymWrapper.rst", "reference/generated/torchrl.envs.libs.gym.MOGymEnv.rst", "reference/generated/torchrl.envs.libs.gym.MOGymWrapper.rst", "reference/generated/torchrl.envs.libs.gym.gym_backend.rst", "reference/generated/torchrl.envs.libs.gym.set_gym_backend.rst", "reference/generated/torchrl.envs.libs.habitat.HabitatEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiEnv.rst", "reference/generated/torchrl.envs.libs.jumanji.JumanjiWrapper.rst", "reference/generated/torchrl.envs.libs.openml.OpenMLEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasEnv.rst", "reference/generated/torchrl.envs.libs.vmas.VmasWrapper.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "create_infinite_iterator", "D4RLExperienceReplay", "OpenMLExperienceReplay", "get_dataloader", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "RandomSampler", "RoundRobinWriter", "Sampler", "SamplerWithoutReplacement", "Storage", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "EnvBase", "EnvCreator", "EnvMetaData", "GymLikeEnv", "ModelBasedEnvBase", "MultiThreadedEnv", "ParallelEnv", "SerialEnv", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "GymEnv", "GymWrapper", "MOGymEnv", "MOGymWrapper", "gym_backend", "set_gym_backend", "HabitatEnv", "JumanjiEnv", "JumanjiWrapper", "OpenMLEnv", "VmasEnv", "VmasWrapper", "DreamerEnv", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "Compose", "DiscreteActionProjection", "DoubleToFloat", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "CEMPlanner", "ConvNet", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "IndependentNormal", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyWrapper", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 41, 42, 44, 46, 47, 50, 51, 52, 54, 55, 56, 59, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 76, 87, 92, 94, 96, 99, 105, 106, 109, 110, 111, 113, 121, 123, 124, 125, 127, 130, 132, 141, 142, 143, 144, 145, 152, 153, 154, 155, 158, 159, 163, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 196, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 227, 228, 229, 230, 231, 246, 249, 258, 259, 263, 264, 267, 276, 277, 278, 279, 282, 283, 284, 287, 288, 292, 293, 295, 296, 298, 299], "open": [0, 5, 7, 11, 288, 293, 298], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299], "reinforc": [0, 3, 9, 92, 142, 143, 144, 145, 148, 183, 186, 200, 201, 206, 210, 211, 216, 217, 218, 281, 288, 291, 294, 297, 298], "learn": [0, 3, 7, 8, 9, 18, 32, 52, 92, 142, 143, 144, 145, 148, 156, 160, 183, 186, 200, 201, 206, 210, 211, 215, 216, 217, 218, 281, 283, 284, 287, 288, 290, 291, 292, 294, 296, 297, 298, 299], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 16, 17, 70, 120, 160, 177, 187, 195, 200, 213, 214, 254, 282, 283, 284, 285, 287, 288, 289, 293, 295, 296, 299], "librari": [0, 2, 5, 6, 7, 8, 9, 10, 18, 19, 20, 37, 43, 51, 71, 135, 281, 282, 283, 286, 287, 288, 289, 293, 294, 299], "pytorch": [0, 1, 2, 3, 123, 159, 160, 263, 282, 285, 287, 289, 290, 293, 294, 295, 298, 299], "It": [0, 2, 3, 4, 7, 32, 37, 40, 41, 43, 45, 51, 66, 69, 70, 71, 72, 73, 84, 104, 106, 110, 120, 125, 132, 142, 144, 149, 158, 165, 167, 168, 174, 175, 183, 186, 189, 191, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 225, 226, 227, 259, 272, 282, 283, 284, 287, 288, 290, 293, 294, 295, 296, 298, 299], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 30, 31, 32, 33, 35, 38, 41, 42, 45, 49, 51, 52, 53, 58, 66, 69, 70, 71, 72, 73, 93, 94, 100, 105, 106, 109, 110, 113, 116, 121, 125, 127, 129, 130, 141, 148, 152, 153, 154, 155, 157, 158, 175, 177, 181, 183, 184, 186, 187, 188, 189, 194, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225, 226, 227, 228, 229, 230, 231, 246, 250, 254, 260, 267, 272, 275, 282, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "python": [0, 3, 5, 6, 7, 10, 21, 83, 157, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299], "first": [0, 1, 3, 4, 5, 7, 8, 18, 20, 21, 26, 28, 51, 54, 55, 64, 69, 92, 93, 100, 106, 109, 110, 123, 125, 127, 152, 154, 158, 159, 163, 177, 182, 183, 187, 188, 190, 191, 202, 208, 212, 213, 214, 245, 262, 283, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "low": [0, 96, 183, 194, 287, 288, 294, 298], "high": [0, 9, 41, 96, 183, 194, 227, 232, 240, 287, 288, 296, 298], "level": [0, 3, 4, 22, 26, 28, 92, 212, 287, 288, 298], "abstract": [0, 3, 8, 24, 25, 26, 27, 28, 29, 30, 44, 46, 47, 65, 66, 107, 155, 231, 255, 264, 285, 289, 294, 298], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 51, 52, 53, 54, 55, 56, 62, 64, 66, 67, 69, 70, 71, 72, 73, 87, 95, 96, 97, 99, 100, 104, 109, 116, 121, 123, 124, 125, 126, 127, 129, 130, 136, 140, 145, 146, 152, 153, 155, 157, 160, 164, 165, 168, 182, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 222, 225, 226, 227, 228, 229, 230, 231, 260, 275, 279, 283, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "intend": [0, 7, 13, 14, 16, 17, 18, 19, 20, 21, 45, 96, 175, 213, 283, 298], "effici": [0, 1, 2, 4, 8, 160, 283, 287, 288, 289, 290, 292, 293, 295, 296, 298], "modular": [0, 193, 296, 298], "document": [0, 5, 7, 18, 19, 21, 32, 66, 69, 71, 72, 73, 125, 288, 298], "properli": [0, 66, 289, 293, 294, 298], "test": [0, 3, 5, 127, 132, 152, 153, 259, 275, 289, 290, 298], "The": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 62, 66, 69, 71, 72, 73, 92, 95, 98, 106, 109, 113, 115, 117, 120, 121, 124, 125, 127, 129, 139, 140, 142, 143, 144, 145, 152, 153, 155, 156, 157, 160, 161, 166, 167, 168, 177, 178, 183, 186, 187, 189, 190, 191, 193, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 226, 227, 228, 229, 230, 231, 233, 248, 251, 252, 253, 254, 258, 275, 277, 278, 283, 284, 285, 288, 289, 290, 293, 294, 295, 296, 298, 299], "code": [0, 3, 5, 7, 8, 109, 127, 152, 193, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299], "aim": [0, 3, 7, 28, 29, 66, 109, 127, 129, 154, 266, 282, 283, 284, 287, 288, 298], "support": [0, 1, 3, 18, 20, 26, 51, 52, 53, 54, 55, 62, 64, 71, 87, 106, 124, 135, 148, 175, 182, 183, 190, 193, 206, 227, 228, 229, 230, 251, 283, 285, 289, 290, 293, 294, 296, 298], "research": [0, 7, 9, 298], "most": [0, 3, 7, 8, 32, 66, 96, 287, 289, 294, 298, 299], "written": [0, 3, 34, 36, 39, 45, 51, 54, 66, 69, 71, 72, 73, 92, 104, 116, 119, 122, 139, 177, 186, 187, 190, 191, 195, 200, 202, 212, 214, 216, 226, 245, 246, 283, 284, 285, 287, 290, 292, 294, 298], "highli": [0, 2, 298, 299], "wai": [0, 3, 4, 109, 111, 129, 214, 227, 228, 229, 230, 283, 287, 288, 289, 292, 293, 294, 295, 296, 298, 299], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 51, 57, 61, 66, 67, 69, 71, 72, 73, 83, 92, 95, 96, 105, 106, 109, 110, 113, 116, 120, 121, 124, 125, 127, 129, 130, 140, 151, 152, 155, 156, 158, 160, 161, 173, 175, 177, 181, 182, 183, 187, 188, 189, 190, 191, 192, 193, 194, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 226, 227, 228, 229, 230, 231, 259, 272, 277, 278, 279, 282, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "easili": [0, 3, 7, 272, 284, 287, 288, 289, 293, 298, 299], "swap": [0, 3, 289, 295, 298], "compon": [0, 2, 3, 54, 55, 56, 62, 64, 148, 166, 182, 183, 189, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 258, 263, 287, 288, 289, 290, 292, 293, 294, 295, 298], "transform": [0, 1, 2, 4, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 40, 41, 42, 43, 51, 52, 66, 67, 69, 71, 72, 73, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 142, 148, 149, 165, 166, 174, 185, 194, 197, 199, 246, 260, 272, 279, 281, 288, 290, 291, 295, 297], "them": [0, 2, 3, 7, 9, 21, 32, 35, 37, 38, 41, 42, 51, 52, 66, 67, 69, 71, 72, 73, 125, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 158, 161, 162, 163, 167, 168, 170, 174, 175, 181, 183, 184, 186, 189, 194, 197, 212, 246, 287, 288, 290, 292, 293, 294, 295, 296, 298, 299], "write": [0, 3, 8, 23, 32, 37, 45, 69, 108, 177, 190, 191, 193, 195, 201, 203, 204, 205, 211, 215, 217, 219, 226, 231, 246, 283, 285, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298], "new": [0, 3, 4, 8, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 57, 61, 66, 69, 71, 72, 73, 116, 124, 130, 139, 152, 186, 190, 191, 196, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 287, 289, 290, 293, 294, 298, 299], "ones": [0, 15, 26, 32, 35, 41, 42, 66, 69, 71, 72, 73, 93, 95, 97, 106, 109, 113, 120, 121, 124, 125, 127, 129, 157, 175, 190, 200, 201, 203, 211, 213, 214, 215, 217, 219, 233, 287, 289, 293, 294, 296, 298, 299], "littl": [0, 3, 43, 289, 290, 296, 298, 299], "effort": [0, 3, 294, 296, 298], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 54, 55, 56, 61, 62, 64, 66, 69, 70, 71, 72, 73, 83, 84, 92, 93, 95, 96, 99, 101, 103, 104, 106, 109, 110, 111, 113, 116, 117, 121, 122, 124, 125, 127, 128, 129, 130, 132, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 225, 227, 228, 229, 230, 231, 245, 254, 256, 259, 260, 263, 265, 266, 267, 272, 275, 279, 282, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "repo": [0, 6, 51, 127, 282, 293, 298], "attempt": [0, 181, 184, 186, 204, 211, 225, 298], "align": [0, 298], "exist": [0, 3, 4, 11, 18, 21, 32, 45, 66, 69, 71, 72, 73, 93, 125, 267, 279, 293, 298, 299], "ecosystem": [0, 298], "ha": [0, 3, 4, 5, 7, 8, 10, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 44, 46, 47, 66, 67, 69, 71, 72, 73, 92, 121, 125, 152, 181, 183, 184, 186, 191, 212, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "dataset": [0, 34, 35, 36, 37, 38, 40, 41, 42, 45, 51, 52, 53, 87, 130, 281, 287, 288, 295, 296, 298, 299], "pillar": [0, 298], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 87, 88, 89, 90, 92, 93, 96, 97, 101, 105, 106, 109, 110, 120, 124, 125, 127, 130, 132, 140, 152, 153, 155, 156, 181, 184, 186, 207, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 254, 256, 259, 266, 267, 268, 269, 272, 275, 276, 277, 278, 279, 281, 282, 283, 291, 295, 296, 297], "model": [0, 1, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 66, 69, 70, 71, 72, 73, 109, 121, 127, 129, 131, 141, 152, 154, 155, 156, 158, 165, 174, 178, 179, 180, 185, 190, 196, 200, 201, 202, 204, 207, 208, 209, 211, 212, 213, 214, 215, 217, 225, 263, 268, 269, 270, 271, 272, 281, 282, 285, 289, 291, 293, 294, 296, 297, 299], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 87, 92, 104, 106, 113, 119, 132, 136, 140, 148, 152, 153, 156, 158, 166, 175, 177, 182, 184, 186, 187, 188, 190, 193, 194, 195, 200, 201, 203, 204, 205, 211, 214, 215, 216, 217, 219, 225, 227, 228, 229, 230, 231, 254, 260, 263, 265, 268, 275, 277, 278, 279, 281, 283, 284, 285, 290, 294, 295, 296, 299], "util": [0, 3, 17, 23, 32, 40, 66, 69, 71, 72, 73, 109, 129, 132, 133, 134, 135, 136, 137, 138, 139, 141, 197, 198, 199, 213, 275, 281, 286, 287, 289, 293, 294, 298, 299], "e": [0, 1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 33, 54, 55, 64, 66, 67, 69, 71, 72, 73, 93, 95, 100, 106, 109, 116, 121, 124, 125, 127, 129, 132, 151, 152, 156, 158, 161, 166, 172, 173, 183, 187, 189, 190, 191, 213, 226, 227, 228, 229, 230, 254, 266, 278, 283, 287, 288, 289, 293, 294, 295, 298, 299], "g": [0, 1, 3, 7, 8, 10, 11, 32, 33, 66, 67, 69, 71, 72, 73, 93, 95, 100, 106, 109, 116, 121, 124, 125, 127, 129, 132, 151, 152, 156, 158, 172, 173, 187, 190, 191, 213, 226, 236, 237, 238, 239, 241, 242, 243, 244, 278, 283, 287, 288, 289, 293, 294, 295, 298, 299], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 92, 113, 119, 186, 260, 263, 265, 268, 269, 275, 277, 278, 281, 285, 296, 299], "contain": [0, 3, 7, 12, 13, 14, 16, 17, 19, 20, 26, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 51, 52, 57, 59, 62, 63, 65, 66, 69, 70, 71, 72, 73, 95, 97, 109, 121, 124, 125, 127, 129, 130, 139, 140, 141, 154, 156, 158, 177, 182, 183, 187, 189, 190, 195, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 226, 227, 228, 229, 230, 231, 233, 250, 254, 266, 272, 275, 276, 277, 278, 279, 283, 284, 285, 287, 288, 289, 290, 293, 294, 295, 296, 298, 299], "etc": [0, 3, 7, 8, 11, 32, 46, 47, 66, 69, 71, 72, 73, 104, 125, 154, 158, 287, 288, 289, 296, 298, 299], "have": [0, 1, 3, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 21, 26, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 51, 61, 62, 66, 69, 71, 72, 73, 92, 104, 105, 106, 120, 121, 124, 125, 130, 132, 141, 153, 154, 158, 175, 192, 193, 200, 202, 212, 214, 222, 225, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 254, 263, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "few": [0, 2, 8, 254, 289, 290, 293, 296, 298, 299], "depend": [0, 1, 2, 3, 4, 7, 8, 34, 36, 195, 214, 283, 287, 289, 290, 293, 294, 298, 299], "possibl": [0, 3, 4, 27, 29, 32, 33, 34, 36, 39, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 141, 190, 213, 259, 263, 283, 287, 289, 290, 293, 294, 296, 298, 299], "standard": [0, 3, 106, 115, 130, 140, 149, 156, 159, 160, 181, 219, 227, 228, 229, 230, 287, 288, 293, 296, 298], "numpi": [0, 11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 123, 263, 294, 296, 298, 299], "common": [0, 3, 4, 21, 69, 72, 73, 178, 179, 180, 185, 200, 201, 202, 205, 211, 212, 214, 215, 216, 217, 219, 275, 282, 283, 285, 287, 289, 292, 293, 295, 298, 299], "openai": [0, 7, 78, 79, 289, 294, 298, 299], "gym": [0, 3, 4, 8, 11, 13, 14, 16, 17, 21, 22, 66, 67, 69, 71, 72, 73, 78, 79, 80, 81, 82, 83, 92, 103, 104, 106, 111, 113, 121, 130, 152, 272, 275, 282, 287, 288, 289, 290, 294, 295, 296, 298], "onli": [0, 1, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 44, 46, 47, 51, 54, 55, 64, 66, 69, 71, 72, 73, 92, 93, 95, 96, 100, 106, 109, 110, 113, 120, 121, 124, 125, 127, 129, 130, 152, 153, 158, 177, 182, 187, 188, 190, 191, 192, 193, 200, 202, 203, 205, 211, 212, 213, 214, 215, 216, 217, 218, 219, 227, 228, 229, 230, 231, 267, 285, 287, 288, 289, 290, 292, 293, 294, 296, 298, 299], "option": [0, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 57, 58, 61, 64, 66, 67, 69, 70, 71, 72, 73, 76, 87, 91, 92, 93, 94, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 171, 172, 173, 175, 177, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 251, 254, 256, 257, 258, 259, 260, 261, 263, 267, 268, 269, 270, 271, 272, 274, 275, 277, 278, 279, 283, 290, 293, 294, 296, 298], "On": [0, 3, 7, 18, 19, 20, 21, 283, 288, 293], "end": [0, 13, 14, 32, 35, 38, 41, 42, 51, 52, 61, 66, 69, 71, 72, 73, 120, 125, 141, 155, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "come": [0, 1, 3, 8, 72, 73, 177, 178, 179, 180, 187, 195, 287, 288, 289, 290, 293, 296, 298, 299], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 51, 52, 54, 55, 61, 62, 64, 66, 68, 69, 70, 71, 72, 73, 83, 93, 95, 103, 104, 109, 119, 120, 121, 124, 125, 127, 129, 132, 137, 138, 152, 155, 158, 181, 190, 213, 214, 231, 254, 259, 260, 269, 279, 282, 283, 284, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "re": [0, 3, 8, 32, 61, 66, 69, 71, 72, 73, 152, 157, 187, 191, 285, 287, 289, 290, 292, 294, 298, 299], "usabl": [0, 285, 290, 298], "function": [0, 3, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 54, 55, 56, 62, 64, 66, 67, 69, 71, 72, 73, 83, 97, 125, 130, 132, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 153, 154, 157, 158, 161, 162, 163, 164, 167, 168, 170, 173, 175, 178, 179, 180, 181, 183, 184, 186, 187, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 272, 275, 281, 283, 287, 290, 292, 294, 296, 299], "cost": [0, 2, 27, 287, 288, 293, 294, 296], "return": [0, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 59, 63, 65, 66, 67, 69, 70, 71, 72, 73, 76, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 106, 109, 110, 111, 112, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 133, 134, 135, 139, 140, 142, 143, 144, 145, 146, 148, 151, 152, 153, 154, 155, 156, 157, 158, 161, 164, 165, 167, 168, 171, 172, 173, 174, 177, 178, 179, 180, 187, 189, 190, 191, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 222, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 263, 266, 268, 272, 275, 276, 277, 278, 279, 281, 283, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "process": [0, 1, 2, 3, 4, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 43, 45, 66, 67, 69, 71, 72, 73, 130, 158, 183, 186, 189, 285, 287, 288, 290, 293, 294, 295, 296, 298, 299], "good": [0, 1, 4, 9, 287, 289, 290, 293, 298, 299], "runtim": [0, 3, 32, 66, 69, 71, 72, 73, 294], "perform": [0, 3, 4, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 66, 69, 71, 72, 73, 105, 125, 140, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 155, 156, 158, 161, 162, 163, 167, 168, 170, 175, 181, 183, 184, 186, 189, 194, 197, 208, 214, 259, 263, 284, 287, 288, 289, 290, 292, 293, 294, 299], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 32, 35, 38, 40, 41, 42, 51, 52, 66, 69, 71, 72, 73, 130, 178, 179, 180, 186, 213, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 283, 284, 287, 288, 289, 290, 293, 294, 295, 296, 298, 299], "read": [0, 7, 17, 23, 37, 40, 54, 55, 56, 62, 64, 66, 69, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 108, 110, 111, 113, 116, 117, 119, 120, 121, 122, 124, 127, 128, 130, 164, 177, 178, 179, 180, 182, 187, 190, 191, 193, 195, 196, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 227, 228, 229, 230, 231, 246, 259, 263, 272, 283, 287, 288, 289, 290, 292, 293, 294, 295, 299], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 51, 52, 66, 69, 71, 72, 73, 123, 127, 131, 148, 154, 159, 161, 177, 181, 182, 183, 184, 190, 195, 200, 206, 213, 214, 227, 232, 240, 258, 282, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 299], "about": [0, 3, 5, 7, 9, 18, 19, 20, 43, 284, 287, 288, 289, 293, 294, 298, 299], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 285, 287, 292, 295, 299], "beyond": 0, "api": [0, 3, 5, 109, 129, 284, 285, 293, 294, 298, 299], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 48, 66, 67, 69, 70, 71, 72, 73, 92, 93, 99, 104, 110, 132, 152, 177, 182, 183, 187, 188, 189, 190, 191, 283, 284, 288, 289, 290, 292, 293, 294, 295, 296, 299], "paper": [0, 109, 127, 129, 165, 174, 210, 272, 287, 289, 293], "ppo": [0, 4, 8, 187, 191, 202, 212, 214, 281, 283, 287, 288, 291, 297], "pendulum": [0, 3, 13, 14, 16, 17, 21, 22, 66, 67, 69, 71, 72, 73, 78, 79, 92, 95, 103, 104, 106, 111, 113, 121, 125, 130, 152, 275, 283, 288, 289, 291, 297, 298, 299], "your": [0, 2, 3, 7, 8, 10, 18, 32, 66, 69, 71, 72, 73, 130, 279, 282, 283, 284, 288, 289, 290, 291, 293, 296, 297, 298], "introduct": [0, 284, 291, 293, 297, 299], "multi": [0, 7, 9, 28, 29, 32, 66, 69, 71, 72, 73, 152, 153, 154, 158, 225, 227, 228, 229, 230, 281, 287, 288, 289, 290, 291, 294, 297, 298], "agent": [0, 9, 28, 29, 120, 157, 158, 160, 165, 174, 225, 281, 291, 294, 297], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 40, 51, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 152, 155, 156, 190, 213, 245, 267, 268, 269, 272, 275, 277, 278, 279, 281, 283, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 57, 58, 64, 66, 67, 69, 70, 71, 72, 73, 76, 83, 87, 92, 93, 94, 95, 96, 103, 104, 106, 109, 110, 111, 113, 120, 121, 123, 124, 125, 127, 129, 130, 132, 137, 138, 139, 140, 141, 142, 143, 148, 149, 151, 152, 154, 155, 156, 158, 160, 161, 165, 166, 172, 173, 174, 175, 177, 182, 183, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 240, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 273, 275, 279, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 297, 299], "pretrain": [0, 291, 297], "recurr": [0, 152, 168, 288, 291, 296, 297], "dqn": [0, 148, 182, 183, 200, 201, 203, 204, 205, 206, 207, 210, 211, 213, 214, 215, 216, 217, 218, 219, 225, 270, 281, 283, 291, 297], "train": [0, 1, 3, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 34, 36, 40, 45, 53, 66, 69, 71, 72, 73, 101, 109, 120, 125, 127, 129, 132, 142, 144, 152, 181, 184, 186, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 227, 263, 265, 275, 281, 285, 288, 291, 295, 296, 297, 299], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 66, 69, 70, 71, 72, 73, 96, 104, 120, 137, 138, 148, 152, 158, 160, 166, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 194, 200, 201, 202, 203, 205, 211, 212, 214, 215, 216, 217, 219, 259, 265, 268, 269, 275, 277, 278, 283, 284, 285, 288, 291, 295, 296, 297, 298, 299], "replai": [0, 8, 13, 14, 16, 35, 38, 41, 42, 51, 52, 57, 58, 59, 60, 62, 63, 92, 96, 110, 113, 121, 201, 203, 204, 205, 211, 215, 217, 219, 260, 263, 273, 275, 281, 285, 291, 294, 295, 297], "buffer": [0, 1, 3, 4, 8, 13, 14, 16, 32, 35, 38, 41, 42, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 66, 69, 70, 71, 72, 73, 92, 95, 96, 109, 110, 113, 121, 124, 125, 127, 129, 190, 193, 201, 203, 204, 205, 211, 213, 215, 217, 219, 260, 263, 273, 275, 281, 285, 291, 294, 295, 297, 299], "task": [0, 3, 9, 28, 29, 40, 45, 72, 73, 76, 109, 127, 129, 211, 287, 288, 289, 290, 291, 293, 294, 297, 298, 299], "specif": [0, 2, 5, 8, 41, 42, 69, 263, 281, 284, 285, 289, 290, 291, 293, 296, 297], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 54, 55, 56, 62, 64, 66, 69, 71, 72, 73, 97, 106, 109, 124, 125, 127, 130, 156, 165, 174, 177, 178, 187, 190, 191, 192, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 267, 268, 269, 274, 275, 279, 281, 283, 285, 288, 289, 290, 291, 293, 294, 296, 297, 299], "ddpg": [0, 142, 143, 144, 145, 203, 210, 218, 281, 283, 288, 291, 297], "loss": [0, 3, 8, 36, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 225, 226, 227, 258, 263, 270, 271, 272, 275, 284, 285, 291, 294, 296, 297, 298], "trainer": [0, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 287, 291, 297], "A": [0, 1, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 84, 96, 101, 104, 109, 110, 111, 121, 124, 125, 127, 128, 130, 131, 132, 139, 140, 141, 148, 152, 154, 156, 157, 158, 160, 161, 175, 181, 182, 183, 184, 187, 188, 191, 193, 194, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 225, 227, 228, 229, 230, 231, 233, 247, 248, 251, 256, 263, 265, 272, 275, 284, 287, 289, 291, 293, 294, 297, 299], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 51, 53, 54, 55, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 92, 93, 95, 96, 97, 103, 104, 106, 109, 111, 113, 120, 121, 123, 124, 125, 127, 129, 130, 136, 139, 140, 141, 148, 152, 153, 154, 156, 158, 161, 164, 165, 166, 174, 175, 177, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 193, 194, 195, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 220, 221, 225, 227, 228, 229, 230, 233, 254, 255, 256, 257, 258, 260, 261, 262, 265, 272, 275, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299], "packag": [0, 6, 7, 10, 83, 281, 282, 299], "singl": [0, 3, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 51, 52, 66, 69, 71, 72, 73, 92, 93, 109, 129, 141, 152, 153, 154, 158, 189, 193, 202, 204, 205, 206, 212, 214, 215, 219, 227, 228, 229, 230, 236, 237, 238, 239, 241, 242, 243, 244, 272, 279, 281, 287, 288, 289, 290, 292, 293, 294, 295, 296], "node": [0, 2, 18, 19, 20, 21, 22, 272, 281], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 104, 106, 140, 146, 147, 148, 149, 151, 156, 157, 161, 164, 167, 168, 171, 172, 173, 181, 182, 183, 187, 191, 192, 200, 201, 202, 205, 206, 211, 212, 214, 215, 216, 217, 219, 281, 285, 288, 289, 293, 294, 298, 299], "helper": [0, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 287, 288, 290, 294], "compos": [0, 3, 32, 35, 38, 41, 42, 51, 52, 58, 59, 60, 63, 66, 69, 71, 72, 73, 92, 124, 125, 130, 185, 208, 272, 281, 287, 288, 289, 290, 292, 293, 296, 298, 299], "tensorspec": [0, 3, 15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 47, 48, 49, 66, 69, 70, 71, 72, 73, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 106, 111, 112, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 168, 177, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 201, 204, 215, 217, 219, 225, 281, 294], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 61, 62, 64, 66, 67, 69, 70, 71, 72, 73, 83, 92, 93, 96, 98, 103, 104, 106, 109, 110, 111, 113, 117, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 136, 139, 140, 142, 143, 144, 145, 148, 151, 152, 154, 155, 156, 158, 159, 161, 165, 166, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 215, 216, 217, 219, 221, 225, 226, 227, 228, 229, 230, 245, 246, 254, 260, 263, 266, 267, 272, 273, 275, 276, 279, 281, 282, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "human": [0, 281, 294], "feedback": [0, 281, 298], "rlhf": [0, 34, 40, 45, 53, 104, 281, 283], "envbas": [0, 3, 13, 14, 16, 17, 18, 19, 20, 21, 67, 69, 71, 72, 73, 105, 111, 124, 125, 130, 132, 140, 155, 156, 259, 267, 268, 269, 272, 275, 277, 278, 279, 281, 290], "gymlikeenv": [0, 281], "envmetadata": [0, 281], "vector": [0, 1, 8, 24, 27, 33, 96, 142, 144, 154, 227, 230, 240, 241, 242, 243, 244, 281, 287, 288, 290, 292, 293, 294, 295, 299], "record": [0, 32, 66, 69, 71, 72, 73, 104, 214, 245, 246, 247, 248, 249, 250, 251, 252, 253, 275, 281, 288, 289], "domain": [0, 2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 66, 96, 121, 136, 177, 182, 183, 187, 188, 189, 190, 191, 192, 193, 281, 289, 290, 293, 294, 298, 299], "modul": [0, 2, 3, 4, 8, 11, 32, 40, 66, 69, 70, 71, 72, 73, 83, 95, 96, 104, 109, 110, 120, 121, 124, 125, 127, 129, 130, 131, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 225, 227, 228, 229, 230, 231, 263, 270, 271, 275, 281, 284, 285, 288, 289, 292, 293, 294, 295, 296], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 54, 55, 57, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 92, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 113, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 136, 139, 140, 147, 148, 152, 153, 155, 156, 165, 166, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 226, 227, 228, 229, 230, 231, 245, 254, 258, 259, 260, 262, 263, 272, 281, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 299], "actor": [0, 4, 15, 21, 104, 140, 142, 144, 148, 149, 156, 166, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 272, 281, 284, 288, 289, 290, 293, 295, 298], "explor": [0, 1, 131, 160, 177, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 200, 259, 268, 269, 275, 281, 289, 290, 293, 294], "valu": [0, 1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 51, 53, 66, 69, 71, 72, 73, 83, 91, 92, 93, 96, 105, 106, 109, 110, 113, 114, 116, 121, 122, 124, 125, 129, 130, 136, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 164, 165, 166, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 254, 256, 257, 258, 259, 260, 263, 272, 275, 281, 285, 288, 292, 293, 294, 296, 298, 299], "gener": [0, 1, 3, 7, 8, 9, 16, 35, 38, 40, 60, 61, 66, 67, 70, 95, 104, 106, 111, 116, 117, 124, 146, 157, 164, 177, 187, 191, 195, 196, 215, 221, 227, 232, 240, 249, 263, 281, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299], "hook": [0, 32, 66, 69, 71, 72, 73, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 158, 161, 162, 163, 166, 167, 168, 170, 175, 181, 183, 184, 186, 189, 194, 197, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 281], "planner": [0, 140, 156, 281], "sac": [0, 205, 215, 217, 281], "redq": [0, 215, 271, 272, 281], "iql": [0, 211, 281, 293], "cql": [0, 201, 281], "td3": [0, 219, 281], "a2c": [0, 200, 281], "dreamer": [0, 90, 149, 207, 208, 209, 281, 283], "checkpoint": [0, 281, 295], "builder": [0, 281, 288, 299], "logger": [0, 246, 248, 249, 250, 251, 252, 253, 257, 263, 275, 279, 281, 288], "_util": [0, 3, 11, 281], "implement_for": [0, 3, 281], "contribut": 0, "thing": [0, 3, 7, 8, 282, 289, 290, 293, 296, 299], "consid": [0, 1, 3, 8, 20, 32, 34, 36, 39, 54, 55, 64, 66, 69, 71, 72, 73, 96, 130, 146, 171, 213, 282, 287, 294, 296], "when": [0, 1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 51, 52, 54, 55, 56, 58, 61, 62, 64, 66, 67, 69, 71, 72, 73, 87, 92, 95, 96, 104, 105, 106, 109, 110, 116, 120, 121, 124, 125, 127, 129, 130, 137, 138, 140, 154, 155, 156, 157, 159, 166, 172, 187, 190, 191, 193, 197, 202, 204, 206, 212, 213, 214, 220, 225, 226, 227, 228, 229, 230, 245, 246, 260, 279, 282, 283, 285, 287, 288, 289, 290, 293, 294, 295, 296, 299], "debug": [0, 6, 8, 40, 282, 299], "work": [0, 3, 4, 8, 11, 32, 34, 36, 38, 39, 66, 69, 71, 72, 73, 93, 104, 109, 127, 130, 141, 154, 183, 189, 194, 202, 212, 214, 263, 282, 283, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "habitat": [0, 3, 84, 282, 295], "lab": [0, 3, 76, 77, 282], "mujoco": [0, 6, 8, 282, 289, 290], "error": [0, 1, 3, 7, 10, 11, 29, 32, 66, 69, 71, 72, 73, 110, 132, 282, 287, 289, 293, 299], "solut": [0, 3, 6, 7, 9, 21, 282, 283, 285, 298], "resourc": [0, 1, 21, 282, 287, 289, 293], "version": [0, 1, 3, 6, 11, 32, 34, 36, 40, 66, 69, 71, 72, 73, 180, 213, 217, 227, 230, 282, 283, 287, 289, 290, 293, 294, 295, 299], "issu": [0, 4, 5, 8, 110, 177, 182, 183, 187, 188, 189, 190, 191, 282, 298], "index": [0, 3, 7, 8, 10, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 54, 55, 57, 59, 63, 64, 65, 66, 69, 71, 72, 73, 92, 96, 139, 157, 292, 293, 296, 298], "search": [0, 288], "page": [0, 7], "somewhat": [1, 284, 299], "equival": [1, 17, 24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 51, 53, 66, 69, 71, 72, 73, 125, 214, 260, 298, 299], "dataload": [1, 53, 61, 288, 289, 296], "except": [1, 3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 66, 69, 71, 72, 73, 99, 113, 152, 164, 181, 184, 186, 283, 288, 296, 298, 299], "1": [1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 45, 46, 47, 51, 66, 67, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 91, 92, 93, 95, 96, 97, 101, 104, 105, 106, 109, 110, 111, 113, 120, 121, 122, 123, 124, 125, 127, 129, 130, 136, 139, 140, 141, 142, 143, 145, 148, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 164, 165, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 193, 194, 195, 197, 200, 201, 202, 203, 204, 205, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 225, 226, 227, 228, 229, 230, 233, 235, 236, 237, 241, 242, 244, 254, 259, 260, 261, 272, 275, 279, 282, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "thei": [1, 2, 3, 4, 8, 9, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 66, 69, 71, 72, 73, 97, 99, 104, 109, 124, 125, 129, 152, 153, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 260, 263, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "collect": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 35, 38, 41, 42, 51, 52, 92, 106, 109, 129, 132, 186, 201, 203, 205, 215, 217, 219, 254, 260, 263, 265, 266, 267, 275, 285, 287, 290, 293, 294, 295, 296, 298, 299], "over": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 42, 43, 45, 50, 66, 69, 71, 72, 73, 96, 106, 122, 139, 175, 193, 206, 208, 213, 233, 266, 285, 287, 288, 289, 293, 294, 299], "non": [1, 8, 21, 32, 34, 35, 36, 38, 39, 41, 42, 66, 69, 71, 72, 73, 91, 95, 100, 109, 121, 124, 125, 126, 127, 129, 139, 152, 190, 191, 200, 201, 203, 204, 205, 206, 207, 208, 211, 213, 214, 215, 216, 217, 219, 225, 227, 228, 229, 230, 283, 287, 290, 293, 294, 296, 299], "static": [1, 11, 40, 45, 130, 211, 294, 296], "2": [1, 3, 8, 9, 10, 11, 13, 14, 16, 21, 22, 26, 28, 30, 31, 32, 35, 37, 38, 41, 42, 43, 45, 66, 67, 69, 71, 72, 73, 87, 88, 89, 93, 95, 96, 104, 106, 109, 113, 121, 124, 125, 127, 129, 130, 136, 141, 142, 143, 144, 148, 150, 152, 153, 154, 157, 158, 161, 175, 182, 183, 184, 186, 190, 194, 195, 200, 201, 202, 203, 205, 211, 212, 213, 214, 215, 216, 217, 219, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 254, 283, 284, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "like": [1, 2, 3, 4, 7, 21, 26, 28, 32, 35, 38, 41, 42, 45, 66, 69, 71, 72, 73, 84, 120, 123, 132, 158, 185, 215, 284, 287, 289, 290, 293, 294, 295, 296, 299], "being": [1, 3, 7, 8, 17, 18, 20, 21, 32, 53, 66, 69, 71, 72, 73, 96, 97, 111, 125, 137, 138, 152, 186, 202, 212, 213, 214, 246, 260, 265, 277, 278, 279, 283, 287, 288, 289, 290, 293, 294, 296], "s": [1, 2, 3, 6, 7, 8, 32, 35, 38, 41, 42, 51, 52, 66, 69, 71, 72, 73, 92, 95, 109, 121, 123, 124, 125, 127, 129, 130, 132, 141, 152, 158, 160, 165, 174, 178, 180, 181, 183, 187, 190, 191, 194, 201, 211, 213, 217, 227, 228, 229, 230, 231, 272, 283, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "accept": [1, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 53, 66, 69, 70, 71, 72, 73, 92, 95, 100, 109, 116, 121, 124, 125, 126, 127, 129, 175, 190, 191, 192, 213, 285, 289, 299], "two": [1, 3, 4, 8, 10, 32, 61, 66, 69, 71, 72, 73, 106, 109, 129, 145, 152, 169, 191, 212, 222, 259, 263, 272, 284, 287, 288, 289, 290, 292, 293, 294, 296, 298, 299], "main": [1, 2, 3, 5, 20, 22, 67, 191, 263, 283, 284, 287, 288, 292, 299], "argument": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 53, 61, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 139, 141, 152, 154, 158, 159, 175, 177, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 200, 201, 202, 203, 204, 205, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 225, 227, 228, 229, 230, 231, 245, 256, 266, 272, 275, 276, 279, 287, 288, 289, 290, 293, 294, 296, 299], "list": [1, 6, 7, 8, 9, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 49, 51, 52, 56, 61, 62, 66, 69, 70, 71, 72, 73, 97, 104, 106, 109, 116, 125, 127, 129, 130, 147, 152, 154, 157, 162, 166, 183, 188, 189, 191, 193, 194, 195, 213, 224, 227, 230, 245, 259, 260, 277, 278, 283, 287, 289, 292, 294, 295, 296, 298, 299], "constructor": [1, 16, 18, 19, 20, 21, 38, 45, 124, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225, 227, 228, 229, 230, 231, 272, 276, 279, 283, 287, 288, 289, 293, 296], "iter": [1, 13, 14, 16, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 50, 51, 52, 53, 66, 69, 71, 72, 73, 98, 106, 117, 141, 154, 158, 170, 177, 182, 187, 188, 190, 192, 193, 195, 213, 224, 259, 262, 263, 272, 284, 285, 287, 289, 290, 293, 294], "execut": [1, 3, 6, 7, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 41, 42, 51, 52, 66, 67, 69, 70, 71, 72, 73, 121, 152, 192, 193, 267, 279, 283, 285, 288, 289, 290, 293, 296, 297, 299], "step": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 66, 67, 69, 70, 71, 72, 73, 75, 86, 100, 103, 105, 106, 119, 120, 121, 122, 125, 139, 140, 149, 152, 153, 155, 156, 181, 184, 186, 187, 191, 200, 207, 214, 226, 227, 228, 229, 230, 233, 234, 235, 245, 254, 259, 263, 285, 287, 288, 290, 292, 294, 295, 296, 298], "queri": [1, 3, 13, 14, 16, 17, 32, 34, 36, 39, 66, 69, 71, 72, 73, 109, 124, 127, 130, 193, 287, 294, 298], "defin": [1, 2, 11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 51, 66, 69, 71, 72, 73, 110, 120, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 158, 161, 162, 163, 167, 168, 170, 175, 181, 183, 184, 186, 189, 194, 197, 204, 213, 227, 228, 229, 230, 231, 245, 276, 287, 288, 290, 294, 296, 299], "number": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 32, 33, 34, 35, 36, 38, 39, 41, 42, 45, 51, 52, 53, 54, 55, 56, 57, 64, 66, 69, 70, 71, 72, 73, 87, 92, 96, 101, 105, 106, 115, 119, 122, 130, 140, 141, 146, 147, 149, 150, 151, 152, 154, 156, 158, 161, 162, 163, 165, 167, 168, 171, 172, 173, 174, 177, 181, 184, 186, 187, 190, 191, 195, 199, 201, 205, 207, 211, 212, 215, 217, 219, 254, 256, 259, 263, 265, 266, 267, 277, 278, 279, 283, 287, 288, 289, 290, 293, 294, 295, 299], "befor": [1, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 52, 61, 66, 69, 71, 72, 73, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 106, 111, 112, 114, 115, 117, 119, 120, 121, 122, 123, 124, 126, 127, 152, 154, 159, 160, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 228, 229, 230, 260, 287, 289, 290, 293, 294, 296, 299], "deliv": [1, 16, 18, 19, 20, 287, 288, 298], "stack": [1, 3, 7, 8, 18, 20, 21, 28, 29, 66, 69, 71, 72, 73, 130, 152, 192, 193, 245, 254, 283, 288, 292, 294, 298], "user": [1, 2, 3, 5, 8, 21, 32, 51, 66, 69, 71, 72, 73, 120, 125, 153, 214, 276, 284, 285, 287, 288, 294, 298, 299], "reset": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 51, 52, 66, 67, 69, 70, 71, 72, 73, 75, 86, 87, 92, 95, 98, 100, 103, 105, 109, 116, 117, 119, 120, 121, 122, 124, 127, 128, 130, 132, 152, 176, 186, 245, 272, 287, 288, 289, 290, 292, 293, 298], "whenev": [1, 3, 32, 35, 38, 41, 42, 83, 103, 125, 213, 227, 228, 229, 230, 265, 283], "reach": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 22, 40, 61, 66, 69, 71, 72, 73, 181, 184, 186, 287, 289, 293, 298, 299], "done": [1, 3, 4, 7, 8, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 51, 66, 67, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 106, 111, 113, 115, 117, 119, 121, 124, 125, 130, 139, 140, 152, 156, 200, 201, 203, 204, 205, 211, 214, 215, 216, 217, 219, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 272, 284, 287, 289, 290, 292, 293, 294, 295, 296, 298, 299], "state": [1, 3, 4, 13, 14, 16, 17, 32, 40, 51, 66, 69, 70, 71, 72, 73, 75, 86, 92, 93, 95, 98, 103, 106, 111, 117, 119, 120, 124, 125, 128, 130, 139, 140, 149, 152, 153, 154, 156, 162, 165, 167, 168, 174, 178, 190, 196, 200, 202, 212, 213, 214, 215, 216, 225, 226, 227, 228, 229, 230, 231, 233, 279, 283, 284, 287, 288, 289, 290, 293, 294, 299], "after": [1, 3, 8, 13, 14, 18, 20, 21, 26, 32, 40, 66, 69, 71, 72, 73, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 105, 106, 111, 112, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 139, 152, 159, 181, 182, 184, 188, 208, 288, 289, 290, 293, 294, 295, 296, 299], "predefin": [1, 288, 289, 296], "becaus": [1, 3, 4, 7, 40, 66, 69, 71, 72, 73, 104, 124, 145, 153, 158, 177, 182, 183, 187, 188, 189, 190, 191, 287, 288, 290, 292, 293, 294, 296, 299], "potenti": [1, 294, 296], "comput": [1, 3, 4, 8, 13, 16, 21, 27, 32, 40, 66, 69, 71, 72, 73, 106, 125, 128, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 158, 161, 162, 163, 167, 168, 170, 172, 173, 175, 178, 181, 183, 184, 186, 187, 189, 191, 194, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 267, 284, 287, 289, 290, 292, 293, 295, 296], "heavi": [1, 8, 296], "crucial": [1, 181, 184, 186, 211, 213, 287, 288, 289, 290, 293, 294, 299], "configur": [1, 8, 13, 14, 16, 17, 21, 22, 40, 104, 213, 214, 272, 283, 287, 288, 289, 293, 294], "hyperparamet": [1, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225, 287, 294, 296], "appropri": [1, 3, 4, 7, 13, 14, 16, 17, 59, 63, 65, 121, 276, 279, 287, 296], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 61, 62, 64, 66, 67, 69, 70, 71, 72, 73, 76, 77, 82, 83, 87, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 275, 276, 277, 278, 279, 283, 284, 287, 290, 293, 294, 295, 298], "take": [1, 3, 8, 23, 40, 66, 69, 71, 72, 73, 119, 120, 122, 124, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 158, 161, 162, 163, 167, 168, 170, 175, 181, 183, 184, 185, 186, 189, 194, 197, 199, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 254, 265, 283, 285, 287, 288, 289, 293, 294, 296, 299], "consider": [1, 3, 8, 288, 293, 296], "whether": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 51, 52, 66, 69, 70, 71, 72, 73, 120, 125, 141, 152, 154, 195, 201, 202, 203, 204, 205, 206, 212, 213, 214, 215, 217, 219, 225, 227, 230, 287, 288, 289, 293, 294, 299], "should": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 62, 66, 69, 70, 71, 72, 73, 92, 95, 100, 104, 106, 110, 111, 113, 116, 117, 119, 120, 124, 125, 130, 132, 139, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 158, 161, 162, 163, 167, 168, 170, 175, 181, 183, 184, 186, 187, 189, 190, 191, 194, 197, 205, 210, 212, 213, 214, 215, 218, 226, 227, 228, 229, 230, 231, 246, 258, 259, 260, 263, 275, 277, 278, 279, 283, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "occur": [1, 8, 14, 28, 29, 93, 106, 110, 177, 182, 183, 187, 188, 189, 190, 191, 208, 296, 299], "serial": [1, 3, 32, 66, 69, 71, 72, 73, 130], "optim": [1, 2, 8, 32, 66, 69, 71, 72, 73, 125, 140, 156, 159, 160, 201, 213, 214, 217, 258, 263, 275, 284, 285, 289, 290, 293, 294], "parallel": [1, 3, 8, 17, 132, 200, 276, 277, 278, 279, 288, 289, 293], "syncdatacollector": [1, 13, 14, 17, 18, 19, 20, 21, 92, 113, 275, 278, 281, 289, 290, 293, 296], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 83, 84, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 277, 278, 279, 283, 284, 285, 287, 288, 289, 290, 293, 296, 299], "worker": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 45, 67, 71, 72, 73, 130, 277, 278, 279, 287, 289, 298, 299], "multisyncdatacollector": [1, 18, 19, 20, 21, 278, 281, 289, 298], "split": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 45, 51, 53, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 283, 285, 289, 296, 298], "workload": 1, "across": [1, 3, 8, 18, 19, 20, 21, 35, 38, 41, 42, 130, 186, 265, 283, 287, 293, 294], "aggreg": [1, 141, 142, 143, 193], "result": [1, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 41, 42, 51, 52, 61, 66, 67, 69, 71, 72, 73, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 106, 111, 112, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 132, 139, 152, 154, 166, 183, 189, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225, 227, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 265, 283, 288, 290, 294, 295, 298, 299], "final": [1, 3, 4, 21, 34, 36, 39, 40, 152, 181, 184, 185, 186, 192, 227, 259, 283, 287, 288, 289, 293, 294, 299], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 277, 281, 287, 288, 289, 298], "sever": [1, 8, 30, 32, 45, 66, 69, 71, 72, 73, 93, 125, 214, 287, 289, 296, 299], "batch": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 52, 53, 58, 61, 66, 69, 70, 71, 72, 73, 87, 92, 100, 106, 110, 113, 121, 125, 126, 130, 146, 147, 152, 153, 157, 158, 159, 164, 165, 171, 175, 186, 190, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 254, 257, 260, 261, 262, 263, 265, 277, 278, 279, 285, 288, 289, 290, 292, 293, 295, 298, 299], "gather": [1, 3, 18, 20, 21, 45, 53, 110, 226, 267, 282, 287, 288, 289, 290, 293, 294, 296, 299], "continu": [1, 9, 25, 46, 66, 136, 142, 143, 144, 145, 186, 193, 200, 201, 205, 211, 214, 215, 216, 217, 218, 219, 227, 232, 240, 283, 287, 289, 290, 293, 294, 296, 298, 299], "concomitantli": 1, "network": [1, 4, 8, 32, 66, 69, 71, 72, 73, 141, 142, 143, 144, 145, 147, 149, 150, 154, 158, 160, 162, 163, 165, 167, 168, 169, 174, 178, 179, 180, 190, 194, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 225, 227, 228, 229, 230, 231, 274, 275, 283, 284, 285, 292, 294, 299], "impli": [1, 299], "weight": [1, 4, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 40, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 152, 160, 190, 200, 201, 202, 205, 208, 213, 265, 274, 283, 285, 287, 288, 289, 290, 292, 294, 296, 298], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 20, 21, 28, 29, 32, 51, 66, 69, 71, 72, 73, 104, 106, 117, 125, 126, 130, 132, 154, 284, 285, 287, 288, 289, 290, 293, 294, 295, 296, 298, 299], "slightli": [1, 283, 284, 290, 294, 295, 296, 299], "lag": [1, 13, 14, 16, 17, 287, 288, 289], "therefor": [1, 3, 7, 66, 113, 120, 214, 225, 299], "although": [1, 8, 66, 69, 71, 72, 73, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 158, 161, 162, 163, 167, 168, 170, 175, 181, 183, 184, 186, 189, 194, 197, 285, 287, 288, 296], "fastest": 1, "price": 1, "suitabl": [1, 2], "where": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 51, 52, 53, 54, 55, 64, 66, 69, 70, 71, 72, 73, 87, 92, 104, 109, 116, 119, 122, 124, 126, 129, 139, 157, 181, 184, 186, 187, 190, 191, 199, 200, 201, 202, 205, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 226, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 284, 285, 287, 288, 289, 292, 293, 294, 296, 299], "asynchron": [1, 9, 14, 21, 32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 200, 213, 277, 288, 289], "off": [1, 2, 4, 151, 173, 182, 217, 259, 268, 283, 285, 287, 288, 289, 293, 295, 299], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 20, 21, 32, 51, 66, 69, 71, 72, 73, 100, 106, 120, 148, 152, 158, 159, 178, 180, 183, 188, 200, 206, 211, 213, 214, 259, 283, 285, 287, 288, 289, 290, 293, 294, 295, 296, 299], "remot": [1, 18, 19, 20, 21, 72, 73, 299], "rollout": [1, 3, 13, 14, 16, 21, 23, 40, 66, 69, 70, 71, 72, 73, 88, 89, 92, 104, 111, 132, 140, 152, 156, 186, 200, 267, 283, 287, 289, 290, 295, 296, 298], "necessari": [1, 4, 6, 8, 13, 14, 16, 17, 117, 215, 227, 228, 229, 230, 231, 284, 287, 289], "synchronis": [1, 67, 293], "either": [1, 5, 22, 32, 40, 53, 66, 69, 71, 72, 73, 120, 196, 219, 250, 285, 287, 288, 290, 295, 296, 298, 299], "update_policy_weights_": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 287, 293, 298], "update_at_each_batch": [1, 13, 14, 17, 287], "true": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 61, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 87, 88, 89, 92, 93, 95, 96, 100, 103, 104, 105, 106, 109, 110, 111, 115, 119, 121, 123, 124, 125, 126, 127, 129, 130, 132, 136, 139, 140, 141, 142, 143, 144, 145, 150, 152, 154, 156, 157, 158, 159, 160, 172, 173, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 200, 201, 202, 203, 205, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 222, 227, 228, 229, 230, 233, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 256, 257, 259, 260, 263, 279, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "second": [1, 8, 152, 183, 202, 212, 214, 217, 262, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 54, 55, 64, 66, 68, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 95, 104, 108, 109, 111, 113, 121, 123, 124, 125, 127, 129, 136, 139, 140, 141, 142, 143, 144, 145, 148, 150, 152, 153, 154, 156, 158, 159, 160, 165, 166, 174, 177, 178, 179, 180, 182, 183, 186, 187, 188, 189, 190, 193, 195, 200, 201, 203, 204, 205, 211, 213, 214, 215, 216, 217, 219, 225, 260, 265, 272, 273, 283, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298], "oper": [1, 3, 4, 7, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 45, 46, 47, 66, 69, 71, 72, 73, 100, 104, 124, 147, 148, 161, 178, 179, 180, 182, 183, 185, 190, 196, 200, 202, 203, 204, 206, 212, 213, 214, 216, 225, 226, 227, 228, 229, 230, 263, 272, 281, 285, 287, 288, 289, 290, 292, 293, 294, 299], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 43, 44, 45, 51, 66, 67, 69, 70, 71, 72, 73, 77, 92, 106, 121, 124, 130, 136, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 155, 158, 161, 162, 163, 167, 168, 170, 175, 181, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 197, 204, 213, 225, 227, 228, 229, 230, 246, 250, 259, 267, 268, 269, 272, 275, 277, 278, 283, 284, 285, 287, 289, 290, 294, 296, 299], "cpu": [1, 3, 8, 10, 13, 14, 16, 18, 19, 20, 21, 24, 26, 28, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 53, 54, 55, 64, 66, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 95, 109, 111, 113, 121, 124, 125, 127, 129, 136, 139, 140, 152, 156, 159, 160, 165, 166, 174, 177, 178, 179, 180, 182, 183, 187, 188, 189, 190, 193, 195, 200, 201, 203, 204, 205, 211, 213, 214, 215, 216, 217, 219, 225, 260, 272, 283, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "slower": 1, "than": [1, 4, 8, 13, 14, 16, 17, 51, 111, 145, 152, 154, 161, 175, 177, 181, 182, 184, 190, 195, 213, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 282, 284, 287, 288, 289, 293, 294, 296, 298, 299], "one": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 33, 35, 37, 38, 40, 41, 42, 51, 52, 57, 59, 62, 63, 65, 66, 67, 69, 71, 72, 73, 87, 92, 96, 105, 106, 109, 118, 125, 126, 129, 130, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 158, 161, 162, 163, 164, 166, 167, 168, 170, 175, 177, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 215, 216, 217, 218, 219, 225, 227, 228, 229, 230, 234, 235, 256, 258, 259, 263, 267, 272, 279, 282, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 299], "cuda": [1, 3, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 66, 69, 71, 72, 73, 95, 104, 108, 109, 121, 124, 125, 127, 129, 190, 213, 255, 287, 288, 289, 290, 293, 295, 299], "multipl": [1, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 27, 43, 72, 73, 93, 96, 116, 124, 130, 152, 153, 159, 160, 177, 182, 187, 188, 190, 191, 194, 202, 205, 212, 214, 215, 219, 233, 272, 279, 283, 285, 287, 288, 289, 293, 294, 296, 298], "infer": [1, 72, 73, 92, 120, 130, 152, 159, 287, 289, 296], "run": [1, 3, 4, 5, 6, 7, 8, 10, 13, 14, 17, 21, 32, 66, 69, 70, 71, 72, 73, 76, 77, 105, 106, 125, 130, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 158, 161, 162, 163, 167, 168, 170, 175, 181, 183, 184, 186, 189, 192, 193, 194, 197, 213, 259, 277, 278, 279, 282, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298], "dispatch": [1, 18, 19, 20, 21, 175], "avail": [1, 3, 4, 6, 21, 61, 104, 148, 166, 187, 191, 213, 277, 278, 283, 287, 288, 289, 290, 293, 294, 296, 299], "speed": [1, 2, 4, 8, 27, 284, 287, 288, 289, 290, 293, 294, 296], "up": [1, 2, 3, 8, 9, 27, 40, 51, 214, 282, 283, 284, 287, 288, 289, 290, 293, 294, 296, 299], "avoid": [1, 32, 66, 69, 71, 72, 73, 83, 125, 130, 177, 190, 195, 202, 212, 214, 266, 289, 293], "oom": 1, "choic": [1, 2, 51, 161, 283, 284, 287, 288, 293], "size": [1, 2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 58, 61, 62, 64, 66, 68, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 93, 100, 109, 111, 113, 118, 121, 123, 125, 126, 129, 130, 136, 139, 140, 141, 146, 148, 152, 153, 154, 156, 157, 158, 161, 164, 165, 166, 167, 168, 171, 174, 175, 177, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 193, 195, 200, 201, 203, 204, 205, 211, 213, 214, 215, 216, 217, 219, 225, 226, 227, 228, 229, 230, 231, 246, 254, 260, 272, 283, 288, 289, 290, 292, 293, 294, 295, 298, 299], "pass": [1, 3, 4, 13, 14, 16, 18, 19, 20, 21, 22, 26, 32, 35, 38, 40, 41, 42, 45, 66, 67, 68, 69, 71, 72, 73, 97, 111, 124, 126, 130, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 158, 159, 161, 162, 163, 165, 167, 168, 170, 174, 175, 177, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 202, 212, 213, 214, 227, 228, 229, 230, 231, 260, 277, 278, 279, 283, 287, 288, 289, 290, 292, 293, 294, 296, 299], "ie": [1, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 45, 46, 47, 57, 87, 92, 100, 126, 130, 152, 200, 202, 203, 205, 211, 212, 213, 214, 215, 216, 217, 219, 227, 228, 229, 230, 283, 284, 288, 289, 293, 296], "store": [1, 3, 8, 13, 14, 16, 17, 20, 26, 32, 34, 36, 37, 39, 41, 42, 43, 45, 53, 54, 55, 56, 57, 64, 66, 69, 71, 72, 73, 130, 140, 153, 156, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225, 272, 281, 285, 287, 289, 290, 293, 295, 296, 299], "while": [1, 3, 7, 8, 32, 66, 69, 71, 72, 73, 113, 125, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 158, 161, 162, 163, 167, 168, 170, 175, 181, 183, 184, 186, 189, 194, 197, 211, 212, 213, 214, 283, 287, 289, 290, 293, 294, 295, 296, 298], "wait": [1, 20, 21, 22, 290, 294], "also": [1, 2, 3, 8, 9, 11, 32, 34, 36, 39, 41, 53, 54, 55, 64, 66, 69, 71, 72, 73, 83, 92, 96, 106, 111, 113, 116, 117, 121, 125, 168, 192, 193, 194, 200, 201, 203, 204, 205, 211, 213, 214, 217, 227, 234, 235, 283, 285, 287, 288, 289, 290, 292, 293, 294, 296, 299], "impact": [1, 288, 290, 293], "memori": [1, 2, 3, 8, 21, 27, 32, 34, 36, 39, 45, 54, 66, 67, 69, 71, 72, 73, 92, 95, 109, 121, 124, 125, 127, 129, 130, 190, 213, 279, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "manag": [1, 8, 223, 224, 227, 228, 229, 230, 259], "kei": [1, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 66, 69, 71, 72, 73, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 108, 109, 110, 111, 113, 116, 117, 119, 120, 121, 122, 124, 125, 127, 128, 129, 130, 139, 140, 147, 152, 155, 156, 166, 177, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 226, 227, 228, 229, 230, 231, 246, 257, 258, 259, 261, 262, 263, 267, 272, 284, 285, 287, 289, 290, 292, 293, 294, 296, 298, 299], "control": [1, 3, 5, 8, 16, 76, 77, 96, 139, 142, 143, 144, 145, 152, 155, 156, 168, 175, 186, 190, 191, 192, 200, 202, 212, 214, 218, 227, 232, 240, 283, 285, 287, 288, 289, 293, 294, 296], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 41, 42, 44, 45, 46, 47, 51, 53, 61, 66, 69, 71, 72, 73, 92, 93, 101, 104, 105, 106, 109, 110, 119, 121, 122, 124, 125, 127, 132, 151, 152, 157, 173, 178, 179, 180, 187, 190, 191, 193, 200, 201, 202, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 222, 225, 227, 228, 229, 230, 254, 258, 272, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 299], "storing_devic": [1, 13, 14, 16, 17, 18, 19, 20, 21, 287, 288, 293, 298], "dure": [1, 3, 13, 14, 16, 17, 18, 19, 20, 40, 45, 51, 52, 66, 69, 71, 72, 73, 92, 101, 120, 125, 152, 259, 263, 284, 287, 288, 289, 290, 293, 294, 296, 299], "heurist": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 186, 287, 299], "usual": [1, 3, 4, 6, 7, 8, 51, 66, 69, 71, 72, 73, 160, 214, 227, 228, 229, 230, 231, 245, 272, 282, 283, 285, 287, 288, 289, 290, 293, 296, 299], "same": [1, 3, 4, 11, 13, 14, 16, 18, 19, 20, 21, 28, 29, 32, 34, 36, 39, 43, 45, 51, 61, 66, 67, 69, 71, 72, 73, 92, 96, 101, 105, 106, 124, 125, 130, 141, 152, 154, 157, 158, 186, 194, 287, 288, 289, 292, 293, 295, 296, 299], "storag": [1, 2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 51, 52, 54, 55, 56, 61, 64, 66, 68, 69, 71, 72, 73, 92, 97, 113, 281, 285, 288, 289, 290, 293, 295], "default": [1, 2, 3, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 57, 64, 66, 69, 71, 72, 73, 76, 87, 92, 93, 96, 100, 104, 105, 106, 109, 110, 113, 115, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 132, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 177, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 194, 195, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 225, 226, 227, 228, 229, 230, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 272, 275, 279, 285, 287, 288, 289, 290, 295, 296, 298, 299], "behaviour": [1, 3, 21, 69, 93, 106, 110, 120, 139, 151, 152, 173, 259, 283, 288, 290, 294, 296], "besid": 1, "those": [1, 5, 7, 26, 28, 72, 73, 106, 121, 152, 187, 191, 192, 193, 265, 277, 278, 283, 287, 288, 293, 294, 299], "choos": [1, 152, 214, 283, 284, 287, 288, 289, 293, 296], "follow": [1, 2, 3, 6, 7, 8, 32, 34, 36, 37, 39, 40, 51, 52, 66, 69, 70, 71, 72, 73, 87, 104, 109, 127, 141, 152, 154, 183, 188, 189, 199, 200, 201, 202, 203, 205, 211, 212, 213, 214, 215, 216, 217, 219, 263, 272, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 296, 298, 299], "max_frames_per_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 266, 287, 289, 298], "frame": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 32, 69, 92, 101, 181, 184, 186, 245, 246, 256, 259, 263, 266, 267, 287, 288, 289, 290, 293, 296, 298, 299], "call": [1, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 51, 52, 54, 55, 56, 58, 61, 62, 64, 66, 69, 71, 72, 73, 87, 92, 95, 96, 97, 100, 103, 104, 106, 108, 109, 116, 119, 121, 124, 125, 127, 129, 130, 132, 137, 138, 140, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 156, 158, 159, 161, 162, 163, 167, 168, 170, 175, 181, 183, 184, 186, 189, 190, 191, 193, 194, 197, 202, 212, 213, 214, 226, 227, 228, 229, 230, 245, 259, 285, 288, 289, 290, 293, 294, 296, 299], "frames_per_batch": [1, 13, 14, 16, 17, 18, 19, 20, 21, 92, 113, 266, 287, 288, 289, 290, 293, 296, 298], "each": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 23, 30, 31, 32, 40, 41, 66, 67, 69, 71, 72, 73, 109, 116, 119, 120, 121, 122, 129, 130, 148, 152, 158, 162, 165, 166, 174, 181, 182, 183, 189, 193, 233, 236, 237, 238, 239, 241, 242, 243, 244, 259, 260, 277, 278, 283, 287, 288, 289, 290, 293, 294, 295, 296, 298, 299], "init_random_fram": [1, 13, 14, 16, 17, 18, 19, 20, 21, 266, 287, 288], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 46, 47, 58, 66, 69, 70, 71, 72, 73, 96, 105, 106, 121, 132, 152, 187, 190, 191, 201, 215, 259, 267, 283, 287, 288, 289, 290, 294, 295, 296, 298, 299], "rand_step": [1, 3, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 85, 103, 121, 130, 294, 298, 299], "reset_at_each_it": [1, 13, 14, 16, 17, 18, 19, 20, 21, 287], "split_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 51, 287, 288, 289], "trajectori": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 32, 41, 51, 57, 66, 69, 71, 72, 73, 110, 124, 140, 152, 156, 186, 214, 227, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 254, 281, 284, 287, 288, 289, 290, 294, 296, 298, 299], "pad": [1, 23, 37, 43, 51, 92, 141, 142, 143, 152, 153, 157, 260], "along": [1, 23, 28, 29, 34, 36, 39, 40, 45, 51, 55, 64, 92, 93, 106, 110, 116, 123, 152, 154, 157, 160, 182, 187, 190, 191, 213, 283, 287, 288, 290, 293, 294, 296], "mask": [1, 4, 23, 110, 157, 260, 288, 290, 299], "point": [1, 3, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 52, 57, 59, 63, 65, 66, 69, 71, 72, 73, 92, 95, 109, 121, 123, 124, 125, 127, 129, 155, 190, 199, 206, 213, 263, 282, 288, 289, 292, 293, 294, 296, 299], "boolean": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 69, 110, 157, 181, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 285, 290], "repres": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 41, 66, 69, 71, 72, 73, 101, 110, 130, 148, 157, 166, 182, 183, 188, 189, 191, 222, 227, 260, 287, 289, 290, 293], "valid": [1, 3, 23, 34, 36, 37, 45, 53, 110, 125, 141, 154, 157, 181, 184, 186, 212, 227, 228, 229, 230, 260, 285, 299], "exploration_typ": [1, 13, 14, 16, 18, 19, 20, 21, 259, 281, 287, 288], "strategi": [1, 16, 283, 285, 287, 288, 293, 296], "reset_when_don": [1, 13, 14, 16, 18, 19, 20, 21], "These": [1, 2, 7, 32, 40, 66, 69, 71, 72, 73, 109, 129, 283, 284, 287, 289, 293, 294, 296, 299], "tool": [1, 2, 3, 5, 290, 294, 296, 299], "backend": [1, 3, 7, 11, 18, 19, 21, 22, 82, 83, 285, 287, 289, 290, 294], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 281], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 281], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 54, 55, 57, 61, 64, 66, 67, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 93, 95, 96, 97, 104, 106, 109, 111, 113, 115, 120, 121, 123, 124, 125, 127, 129, 130, 136, 139, 140, 141, 146, 148, 149, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 164, 165, 166, 171, 172, 173, 174, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 198, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225, 227, 228, 229, 230, 231, 233, 254, 261, 262, 272, 275, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "multiprocess": [1, 18, 19, 20, 67, 68, 130, 288, 289, 294, 299], "synchron": [1, 13, 19, 21, 71, 277, 278, 288, 289], "mode": [1, 6, 13, 14, 16, 18, 19, 20, 21, 32, 66, 69, 71, 72, 73, 120, 125, 130, 133, 137, 138, 146, 151, 152, 164, 171, 172, 173, 187, 191, 213, 259, 287, 288, 290, 293, 298, 299], "find": [1, 4, 6, 7, 18, 19, 20, 35, 37, 43, 181, 184, 186, 257, 261, 287, 288, 293], "dedic": [1, 3, 18, 19, 20, 21, 178, 179, 180, 283, 287, 292, 293], "folder": [1, 288], "sub": [1, 2, 3, 13, 14, 18, 19, 20, 21, 66, 69, 71, 72, 73, 110, 192, 193, 254, 263, 283, 287, 288, 289, 292, 298, 299], "all": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 44, 46, 47, 49, 66, 67, 69, 70, 71, 72, 73, 92, 95, 99, 104, 106, 109, 116, 121, 122, 124, 125, 127, 129, 130, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 158, 161, 162, 163, 167, 168, 170, 175, 181, 183, 184, 186, 189, 190, 191, 193, 194, 197, 208, 213, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 258, 263, 266, 277, 278, 279, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 299], "variou": [1, 3, 13, 14, 16, 17, 152, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 277, 278, 287, 288, 289, 293, 299], "machin": [1, 7, 18, 19, 20, 32, 52, 293], "One": [1, 2, 4, 8, 31, 33, 45, 92, 113, 127, 164, 181, 184, 190, 194, 218, 222, 250, 287, 288, 296, 299], "wonder": 1, "why": [1, 3, 294, 299], "parallelenv": [1, 2, 3, 13, 14, 16, 17, 20, 71, 73, 276, 281, 287, 288, 289, 292, 298, 299], "instead": [1, 4, 7, 8, 11, 27, 32, 66, 69, 71, 72, 73, 100, 121, 125, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 158, 161, 162, 163, 167, 168, 170, 175, 181, 183, 184, 186, 189, 194, 197, 200, 201, 202, 204, 205, 206, 211, 212, 214, 215, 216, 217, 225, 227, 231, 279, 283, 294, 296, 299], "In": [1, 3, 4, 5, 7, 8, 10, 11, 17, 21, 22, 32, 51, 66, 69, 71, 72, 73, 95, 109, 117, 120, 121, 123, 124, 125, 127, 129, 151, 154, 168, 172, 173, 190, 193, 199, 200, 201, 203, 204, 205, 211, 213, 214, 215, 216, 217, 219, 265, 277, 278, 279, 283, 284, 287, 288, 289, 290, 292, 293, 294, 295, 296, 299], "lower": [1, 2, 17, 21, 25, 130, 167, 168, 194, 289, 294], "io": [1, 71], "footprint": [1, 2, 296], "need": [1, 2, 3, 4, 7, 8, 10, 18, 19, 20, 21, 32, 34, 36, 62, 66, 69, 71, 72, 73, 92, 100, 109, 111, 125, 129, 130, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 158, 159, 161, 162, 163, 167, 168, 170, 175, 181, 183, 184, 186, 188, 189, 190, 194, 197, 199, 205, 215, 216, 217, 219, 226, 231, 246, 263, 279, 283, 284, 287, 288, 289, 290, 293, 294, 296, 298, 299], "commun": [1, 2, 3, 282, 289, 299], "yet": [1, 213, 295], "spec": [1, 2, 3, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 48, 49, 51, 66, 68, 69, 70, 71, 72, 73, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 106, 109, 111, 112, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 132, 136, 148, 166, 168, 177, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 200, 201, 203, 204, 205, 211, 214, 215, 216, 217, 219, 225, 272, 283, 287, 288, 289, 290, 292, 293, 298], "plai": [1, 3, 92, 288, 289, 296, 299], "role": [1, 3, 288, 299], "opposit": 1, "direct": [1, 32, 66, 69, 71, 72, 73, 213, 288], "sinc": [1, 3, 4, 5, 7, 32, 35, 38, 41, 42, 66, 69, 71, 72, 73, 139, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 158, 161, 162, 163, 167, 168, 170, 175, 181, 182, 183, 184, 186, 188, 189, 194, 197, 287, 288, 289, 290, 294, 295, 296, 298, 299], "faster": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 71, 227, 228, 229, 230, 290, 293], "share": [1, 2, 3, 6, 8, 34, 36, 39, 54, 55, 56, 62, 64, 67, 72, 73, 130, 152, 158, 178, 179, 180, 200, 202, 203, 205, 211, 212, 214, 215, 216, 217, 219, 279, 283, 289, 290, 292, 293, 298, 299], "among": [1, 3, 293], "achiev": [1, 3, 4, 32, 66, 69, 71, 72, 73, 120, 260, 285, 287, 288, 289, 290, 293, 294, 299], "via": [1, 3, 4, 7, 8, 35, 38, 41, 42, 51, 52, 66, 69, 71, 72, 73, 109, 124, 129, 213, 284, 285, 287, 288, 289, 290, 296, 299], "prohibit": [1, 3], "slow": [1, 3, 4], "compar": [1, 3, 66, 259, 284, 287, 289, 293, 296, 299], "gpu": [1, 7, 8, 32, 66, 69, 71, 72, 73, 213, 287, 289, 290, 293, 299], "nativ": [1, 7, 9, 66, 69, 71, 72, 73, 92, 290, 296], "driver": [1, 7], "practic": [1, 3, 4, 5, 8, 151, 172, 173, 199, 282, 287, 288, 289, 290, 293, 295, 299], "mean": [1, 2, 3, 4, 7, 13, 14, 16, 18, 19, 20, 21, 41, 57, 106, 130, 140, 146, 149, 152, 153, 156, 171, 181, 187, 191, 213, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 283, 284, 287, 288, 289, 293, 294, 296, 298, 299], "keyword": [1, 3, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 53, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 152, 177, 181, 182, 184, 186, 187, 188, 190, 191, 194, 200, 201, 202, 203, 204, 205, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 225, 227, 228, 229, 230, 231, 276, 287, 288, 289, 293, 296, 299], "build": [1, 3, 7, 23, 26, 32, 66, 69, 71, 72, 73, 130, 140, 152, 156, 185, 187, 191, 263, 270, 271, 273, 274, 283, 285, 289, 290, 293, 294, 295, 298, 299], "central": [2, 287, 288, 293, 296], "part": [2, 4, 8, 32, 40, 66, 69, 71, 72, 73, 106, 113, 116, 152, 195, 213, 254, 279, 287, 289, 290, 294, 299], "algorithm": [2, 3, 8, 9, 13, 14, 70, 101, 200, 214, 215, 216, 217, 254, 268, 281, 284, 285, 287, 288, 289, 290, 293, 295, 296, 298], "implement": [2, 3, 9, 11, 16, 32, 62, 66, 69, 71, 72, 73, 95, 104, 111, 124, 130, 151, 171, 172, 173, 200, 201, 211, 213, 214, 217, 272, 283, 285, 287, 288, 289, 290, 294, 298], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 26, 32, 34, 36, 39, 40, 42, 51, 61, 66, 67, 69, 71, 72, 73, 92, 104, 109, 111, 121, 127, 130, 140, 152, 153, 158, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225, 282, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "give": [2, 7, 41, 70, 92, 282, 284, 287, 288, 293, 294, 295, 298], "abil": [2, 213, 294, 296], "veri": [2, 3, 288, 294, 296, 298, 299], "influenti": 2, "sampl": [2, 4, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 51, 52, 53, 54, 55, 57, 58, 61, 64, 66, 69, 70, 71, 72, 73, 87, 92, 110, 113, 133, 134, 137, 138, 140, 146, 151, 156, 157, 164, 167, 172, 173, 177, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 200, 201, 202, 203, 204, 212, 214, 219, 254, 260, 263, 266, 283, 287, 288, 289, 290, 293, 295, 298, 299], "latenc": 2, "especi": [2, 3, 7, 8, 93], "larger": [2, 4, 211], "volum": 2, "lazymemmapstorag": [2, 92, 281, 287, 288, 290, 295, 296], "advis": [2, 299], "due": [2, 3, 5, 295, 296, 299], "serialis": 2, "memmaptensor": [2, 34, 36, 45, 54, 295, 296], "well": [2, 3, 8, 17, 21, 32, 35, 37, 38, 41, 42, 62, 66, 69, 71, 72, 73, 167, 168, 213, 231, 287, 288, 290, 295, 296, 298, 299], "specifi": [2, 11, 13, 14, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 66, 69, 71, 72, 73, 116, 118, 120, 126, 140, 190, 191, 213, 218, 283, 287, 289, 290], "file": [2, 6, 7, 8, 245, 285, 288, 296, 297], "locat": [2, 7, 45, 66, 69, 71, 72, 73, 106, 115, 151, 161, 172, 173, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 287, 288, 289, 293, 296], "improv": [2, 4, 101, 200, 284, 293, 296], "failur": [2, 4], "recoveri": 2, "liststorag": [2, 35, 38, 41, 42, 281, 296], "were": [2, 7, 72, 73, 289, 296], "found": [2, 6, 7, 10, 21, 26, 32, 34, 36, 39, 45, 66, 69, 71, 72, 73, 130, 187, 191, 212, 213, 214, 287, 288, 290], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 18, 19, 20, 35, 43, 52, 57, 71, 92, 109, 127, 142, 143, 144, 145, 148, 149, 150, 156, 157, 160, 162, 163, 165, 167, 168, 174, 183, 186, 200, 201, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 227, 232, 240, 272, 295, 298], "github": [2, 5, 6, 7, 10, 18, 19, 20, 127, 295, 298], "com": [2, 5, 6, 7, 10, 18, 19, 20, 295, 298], "tree": 2, "type": [2, 3, 14, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 66, 69, 70, 71, 72, 73, 95, 104, 109, 111, 121, 124, 125, 127, 129, 130, 134, 138, 141, 154, 157, 158, 160, 165, 174, 181, 182, 184, 187, 190, 191, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 221, 225, 233, 272, 277, 283, 287, 288, 289, 293, 294, 296, 299], "1x": 2, "lazytensorstorag": [2, 41, 42, 113, 281, 289, 293, 296], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 66, 69, 71, 72, 73, 87, 92, 95, 96, 104, 106, 109, 111, 113, 121, 123, 124, 125, 127, 129, 136, 140, 141, 142, 143, 148, 150, 152, 153, 154, 156, 157, 158, 161, 164, 165, 175, 177, 178, 179, 180, 182, 183, 187, 189, 190, 193, 194, 195, 200, 201, 203, 204, 205, 206, 207, 208, 211, 213, 214, 215, 216, 217, 219, 225, 227, 228, 229, 230, 233, 236, 237, 238, 239, 241, 242, 243, 244, 246, 262, 283, 285, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299], "44x": 2, "too": [2, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 44, 46, 47, 151, 172, 173, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 227, 228, 229, 230, 288, 289, 294, 296, 299], "difficult": [2, 4], "element": [2, 13, 14, 16, 18, 19, 20, 21, 30, 31, 33, 35, 38, 41, 42, 51, 52, 54, 55, 56, 57, 64, 87, 92, 110, 141, 177, 181, 182, 190, 191, 195, 254, 287, 289, 296, 299], "pai": [2, 8, 287, 290], "attent": [2, 8, 287, 290], "alwai": [2, 3, 20, 26, 28, 32, 53, 66, 69, 71, 72, 73, 104, 105, 206, 213, 283, 284, 288, 289, 290, 293, 294, 296], "lead": [2, 3, 4, 8, 10, 11, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 51, 61, 121, 151, 165, 172, 173, 287, 290, 293, 294, 296, 298], "dimens": [2, 3, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 51, 54, 55, 64, 66, 69, 71, 72, 73, 92, 93, 100, 106, 110, 118, 123, 126, 130, 141, 152, 154, 157, 159, 160, 165, 169, 170, 171, 172, 175, 182, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 279, 283, 287, 288, 289, 290, 293, 294, 296], "other": [2, 3, 4, 7, 8, 21, 22, 32, 35, 38, 41, 42, 45, 51, 54, 55, 56, 61, 62, 64, 66, 69, 70, 71, 72, 73, 96, 117, 123, 127, 130, 152, 160, 161, 183, 189, 191, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 227, 260, 272, 277, 278, 283, 285, 287, 288, 289, 290, 293, 294, 295, 296, 298, 299], "word": [2, 40, 51, 213, 287, 294, 299], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 45, 53, 66, 67, 69, 71, 72, 73, 92, 109, 116, 124, 125, 127, 130, 136, 139, 141, 142, 143, 144, 145, 150, 152, 154, 155, 158, 191, 204, 206, 215, 225, 246, 260, 267, 268, 269, 275, 277, 278, 283, 287, 288, 289, 290, 293, 294, 295, 296, 298, 299], "1m": [2, 266, 287, 289, 290, 295], "multidimension": [2, 41, 57, 296], "doe": [2, 3, 18, 35, 41, 45, 51, 57, 62, 152, 159, 175, 192, 193, 200, 202, 206, 212, 214, 226, 263, 283, 285, 287, 288, 289, 290, 294, 296, 299], "desir": [2, 3, 32, 66, 69, 71, 72, 73, 95, 106, 109, 110, 121, 124, 125, 127, 129, 137, 138, 141, 154, 158, 177, 182, 183, 187, 188, 189, 190, 191, 213, 283, 287, 293, 294], "diversifi": 2, "make": [2, 3, 4, 7, 32, 34, 36, 39, 40, 51, 52, 62, 66, 69, 71, 72, 73, 79, 81, 86, 106, 109, 110, 113, 127, 132, 158, 159, 182, 191, 213, 214, 227, 228, 229, 230, 260, 269, 279, 283, 284, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "do": [2, 3, 4, 7, 69, 105, 110, 130, 139, 158, 159, 179, 227, 285, 287, 288, 289, 290, 292, 293, 294, 296, 298, 299], "custom": [2, 3, 5, 32, 66, 69, 71, 72, 73, 127, 158, 194, 206, 214, 220, 279, 283, 287, 288, 289, 290, 293], "name": [2, 3, 6, 7, 11, 16, 32, 34, 36, 39, 45, 51, 52, 53, 66, 69, 71, 72, 73, 76, 96, 98, 111, 116, 117, 125, 127, 152, 188, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 231, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 272, 285, 287, 288, 289, 290, 293, 294, 299], "randomcroptensordict": [2, 287], "here": [2, 3, 4, 7, 8, 9, 10, 92, 283, 284, 287, 288, 289, 290, 293, 294, 296, 298, 299], "how": [2, 3, 18, 19, 20, 32, 35, 41, 57, 66, 69, 71, 72, 73, 200, 202, 210, 212, 214, 263, 282, 283, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "wrapper": [2, 3, 11, 15, 17, 34, 36, 39, 40, 41, 42, 70, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 161, 175, 181, 184, 186, 191, 196, 227, 251, 252, 253, 279, 281, 289, 290, 293, 295, 299], "around": [2, 5, 7, 15, 17, 41, 42, 70, 191, 227, 287, 288, 293, 299], "offlin": [2, 8, 13, 14, 16, 17, 18, 19, 20, 21, 92, 132, 201, 211, 285, 295, 296, 298], "present": [2, 3, 32, 34, 35, 36, 38, 39, 41, 42, 51, 52, 57, 61, 66, 69, 71, 72, 73, 98, 116, 117, 139, 142, 143, 144, 145, 150, 160, 186, 190, 191, 192, 193, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 227, 228, 229, 230, 231, 279, 285, 287, 292, 293, 296, 298], "replaybuff": [2, 41, 42, 65, 92, 110, 113, 204, 206, 225, 273, 275, 281, 289, 293, 295, 296, 298], "sampler": [2, 35, 38, 41, 42, 51, 52, 54, 55, 56, 57, 58, 61, 62, 64, 110, 204, 206, 225, 281, 287, 289, 293, 296], "By": [2, 3, 33, 66, 69, 71, 72, 73, 175, 191, 213, 259, 279, 287, 295, 296, 299], "map": [2, 3, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 51, 52, 54, 66, 69, 71, 72, 73, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 106, 111, 112, 114, 115, 117, 119, 120, 121, 122, 123, 124, 126, 127, 130, 136, 148, 161, 177, 178, 179, 180, 182, 187, 188, 190, 191, 193, 194, 195, 196, 225, 259, 281, 283, 284, 287, 288, 289, 290, 295], "tensor": [2, 3, 8, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 57, 59, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 92, 93, 95, 96, 100, 103, 106, 109, 110, 111, 113, 115, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 136, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 164, 165, 166, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 200, 201, 203, 204, 205, 208, 209, 211, 213, 214, 215, 216, 217, 219, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 272, 283, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "allow": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 29, 32, 33, 66, 69, 71, 72, 73, 111, 121, 139, 154, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 220, 222, 225, 283, 285, 287, 289, 290, 293, 294, 296, 299], "promptli": 2, "virtual": [2, 3], "instal": [2, 3, 5, 10, 18, 19, 20, 51, 52, 263, 282, 289, 290, 293, 299], "respons": [2, 3, 8, 263, 299], "d4rl": [2, 51], "clone": [2, 4, 8, 26, 28, 104, 178, 179, 180, 190, 211, 272, 281, 287, 294, 298], "repositori": [2, 7, 52], "latest": [2, 10, 71, 260, 289, 293, 294, 298], "wheel": [2, 289], "publish": 2, "pypi": [2, 298], "openml": [2, 52, 87], "scikit": [2, 52], "panda": [2, 52], "requir": [2, 3, 4, 7, 8, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 154, 175, 190, 192, 193, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 283, 285, 287, 288, 289, 290, 293, 294, 296, 299], "parent": [2, 3, 21, 26, 28, 44, 66, 93, 100, 101, 106, 109, 121, 124, 126, 127, 178, 213, 214, 231, 287, 294, 298, 299], "subclass": [2, 3, 66, 69, 71, 72, 73, 124, 132, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 158, 161, 162, 163, 167, 168, 170, 175, 181, 183, 184, 186, 189, 190, 191, 192, 194, 197, 213, 214, 288, 290, 294, 296], "basic": [2, 70, 283, 289, 299], "properti": [2, 3, 32, 34, 36, 39, 66, 69, 70, 71, 72, 73, 125, 146, 151, 159, 164, 171, 172, 173, 213, 294, 296], "observ": [2, 3, 8, 13, 14, 16, 17, 21, 32, 44, 51, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 86, 87, 88, 89, 92, 93, 94, 95, 97, 98, 100, 102, 103, 104, 106, 107, 111, 112, 113, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 139, 142, 143, 144, 145, 148, 152, 153, 162, 163, 166, 167, 177, 178, 179, 180, 182, 184, 186, 187, 188, 195, 196, 200, 201, 202, 203, 204, 205, 208, 211, 212, 214, 215, 216, 217, 219, 225, 227, 228, 229, 230, 231, 246, 272, 275, 283, 285, 288, 289, 290, 292, 293, 294, 296, 298, 299], "action": [2, 3, 8, 9, 13, 14, 15, 16, 17, 21, 27, 33, 40, 44, 66, 69, 70, 71, 72, 73, 75, 86, 88, 89, 96, 97, 101, 104, 105, 111, 113, 117, 125, 136, 139, 140, 142, 143, 144, 145, 147, 148, 149, 152, 154, 155, 156, 157, 165, 166, 168, 171, 172, 174, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 194, 195, 200, 201, 203, 204, 205, 211, 213, 214, 215, 216, 217, 219, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 272, 275, 279, 283, 284, 285, 287, 288, 289, 292, 293, 295, 296, 298, 299], "shape": [2, 3, 13, 14, 16, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 53, 54, 55, 64, 66, 69, 71, 72, 73, 87, 89, 93, 104, 106, 111, 113, 121, 123, 130, 131, 132, 136, 139, 140, 146, 147, 152, 154, 156, 157, 158, 159, 161, 164, 165, 166, 171, 174, 177, 178, 179, 180, 182, 183, 187, 188, 189, 190, 193, 194, 195, 200, 201, 203, 204, 205, 211, 214, 215, 216, 217, 219, 222, 225, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 254, 260, 263, 275, 283, 287, 288, 289, 290, 292, 293, 295, 296, 298, 299], "dtype": [2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 54, 55, 57, 64, 66, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 95, 96, 97, 104, 106, 109, 111, 113, 121, 123, 124, 125, 127, 129, 132, 136, 139, 140, 148, 152, 156, 159, 160, 165, 166, 174, 177, 178, 179, 180, 182, 183, 186, 187, 188, 189, 190, 193, 195, 200, 201, 203, 204, 205, 211, 213, 214, 215, 216, 217, 219, 225, 227, 228, 229, 230, 233, 272, 283, 289, 290, 292, 293, 294, 295, 296, 298, 299], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 17, 21, 22, 35, 37, 38, 40, 41, 42, 43, 45, 51, 53, 54, 55, 57, 64, 66, 67, 69, 70, 71, 72, 73, 81, 82, 83, 92, 103, 104, 106, 109, 111, 113, 121, 129, 130, 136, 139, 140, 148, 152, 154, 156, 158, 161, 165, 166, 174, 177, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 193, 194, 195, 200, 201, 202, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225, 227, 228, 229, 230, 256, 259, 272, 275, 283, 284, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "match": [2, 3, 6, 8, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 46, 47, 51, 66, 67, 69, 71, 72, 73, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 106, 111, 112, 114, 115, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 141, 146, 152, 154, 158, 171, 177, 187, 188, 190, 191, 194, 195, 201, 205, 212, 215, 217, 260, 265, 283, 287, 289, 292, 293, 294, 296, 298, 299], "input": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 46, 47, 66, 69, 70, 71, 72, 73, 87, 92, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 108, 109, 110, 111, 113, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 139, 141, 142, 143, 144, 145, 147, 152, 153, 154, 158, 159, 160, 166, 167, 168, 169, 170, 175, 177, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 257, 261, 266, 275, 283, 284, 285, 287, 288, 289, 290, 293, 294, 298, 299], "output": [2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 41, 42, 51, 52, 66, 69, 70, 71, 72, 73, 87, 92, 95, 104, 106, 109, 111, 122, 124, 127, 129, 132, 141, 142, 143, 147, 148, 149, 152, 153, 154, 158, 161, 166, 175, 177, 178, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 227, 228, 229, 230, 231, 246, 254, 283, 284, 287, 288, 289, 290, 292, 293, 294, 295, 298, 299], "send": [2, 3, 8, 298], "receiv": [2, 3, 32, 40, 66, 69, 71, 72, 73, 120, 124, 154, 233, 284, 287, 289, 292, 294], "spawn": [2, 3, 4, 18, 22, 71, 293], "check_env_spec": [2, 3, 281, 289, 293, 294], "method": [2, 3, 4, 11, 13, 14, 15, 16, 17, 21, 32, 35, 37, 38, 40, 41, 42, 45, 51, 52, 53, 54, 55, 56, 57, 62, 64, 66, 69, 71, 72, 73, 92, 95, 100, 104, 106, 109, 111, 112, 113, 121, 124, 125, 127, 129, 140, 153, 177, 178, 179, 180, 182, 183, 185, 187, 188, 189, 190, 191, 192, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225, 231, 245, 276, 284, 285, 286, 288, 289, 290, 294, 296, 299], "saniti": [2, 3, 7, 132, 289], "utmost": 2, "given": [2, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 48, 49, 66, 69, 70, 71, 72, 73, 95, 96, 106, 109, 121, 124, 125, 127, 129, 139, 140, 148, 149, 156, 166, 170, 177, 182, 183, 186, 189, 190, 191, 192, 193, 195, 199, 203, 204, 213, 226, 227, 228, 229, 230, 231, 233, 255, 259, 275, 283, 285, 287, 288, 289, 293, 294, 299], "techniqu": [2, 8, 288, 296], "commonli": [2, 299], "emploi": [2, 160], "realm": 2, "languag": [2, 40], "scarc": 2, "address": [2, 296], "subdomain": 2, "within": [2, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 46, 47, 66, 69, 71, 72, 73, 92, 130, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 158, 161, 162, 163, 167, 168, 170, 175, 181, 183, 184, 186, 189, 194, 197, 204, 206, 225, 283, 294, 298], "offer": [2, 3, 7, 283, 288, 294, 299], "facilit": [2, 3, 7, 66, 108, 109, 127, 129, 178, 179, 180, 283, 287, 290, 294], "interact": [2, 4, 5, 7, 8, 13, 14, 16, 18, 19, 20, 21, 120, 187, 191, 287, 289, 293, 294, 299], "extern": [2, 3, 97, 299], "consist": [2, 3, 32, 35, 38, 41, 42, 66, 69, 71, 72, 73, 104, 141, 154, 287, 288, 289, 294, 295, 299], "token": [2, 37, 40, 43, 45], "format": [2, 17, 31, 32, 33, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213, 287, 288, 299], "manner": [2, 69, 109, 127, 283, 287, 288, 289, 292, 294, 296], "handl": [3, 21, 32, 66, 69, 71, 72, 73, 130, 152, 154, 263, 277, 278, 287, 288, 289, 293, 296], "differ": [3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 51, 66, 69, 71, 72, 73, 92, 96, 106, 111, 120, 125, 126, 148, 152, 154, 156, 158, 166, 211, 213, 214, 222, 227, 228, 229, 234, 235, 259, 263, 265, 277, 278, 283, 284, 285, 287, 288, 289, 292, 293, 294, 295, 296, 299], "dm": [3, 287, 299], "base": [3, 4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 41, 42, 45, 60, 63, 65, 70, 71, 113, 121, 127, 128, 178, 185, 200, 201, 203, 204, 205, 207, 211, 214, 215, 216, 217, 219, 263, 272, 283, 284, 285, 287, 288, 290, 293, 294, 296, 299], "goal": [3, 4, 120, 287, 288, 289, 290, 293, 294], "abl": [3, 287, 289, 290, 292, 293, 294, 296, 298], "experi": [3, 35, 38, 41, 42, 51, 52, 57, 132, 248, 249, 250, 251, 252, 253, 282, 288, 289, 293, 296], "even": [3, 4, 8, 14, 18, 20, 21, 54, 55, 56, 62, 64, 66, 67, 287, 289, 293, 294, 299], "simul": [3, 5, 7, 8, 90, 140, 156, 283, 287, 289, 293], "some": [3, 4, 7, 8, 9, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 51, 54, 55, 64, 66, 69, 71, 72, 73, 109, 127, 132, 142, 152, 170, 191, 192, 193, 254, 266, 283, 285, 287, 288, 289, 290, 293, 294, 296, 298, 299], "out": [3, 4, 5, 9, 21, 32, 34, 36, 39, 45, 51, 66, 69, 71, 72, 73, 121, 132, 157, 159, 160, 177, 182, 183, 186, 187, 188, 189, 190, 191, 223, 224, 285, 287, 288, 289, 290, 293, 294, 296, 298, 299], "box": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "under": [3, 4, 21, 32, 40, 51, 66, 69, 71, 72, 73, 177, 182, 183, 187, 188, 189, 190, 191, 213, 227, 228, 229, 230, 231, 284, 287, 288, 294, 299], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 16, 17, 21, 22, 66, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 103, 104, 106, 111, 113, 121, 130, 152, 272, 275, 287, 288, 289, 290, 292, 293, 295, 296, 298, 299], "hope": 3, "imit": 3, "nn": [3, 13, 14, 16, 17, 21, 32, 40, 66, 69, 70, 71, 72, 73, 95, 96, 104, 109, 121, 124, 125, 127, 129, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 154, 156, 158, 161, 165, 166, 174, 177, 178, 179, 180, 182, 184, 186, 187, 188, 190, 191, 192, 193, 195, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225, 227, 228, 229, 230, 272, 275, 283, 284, 287, 288, 289, 290, 292, 293, 294, 295, 298], "typic": [3, 4, 8, 32, 66, 69, 71, 72, 73, 120, 201, 213, 214, 217, 283, 284, 285, 289, 293, 294], "organis": [3, 288, 294], "arbitrari": [3, 33, 72, 73, 283, 287, 288, 294], "nest": [3, 26, 28, 32, 34, 36, 39, 48, 54, 55, 64, 66, 69, 71, 72, 73, 227, 228, 229, 230, 231, 285, 288, 289, 293, 294, 296, 298], "structur": [3, 7, 35, 38, 40, 41, 42, 45, 66, 186, 227, 228, 229, 230, 231, 284, 287, 289, 290, 293, 294, 295, 296], "attribut": [3, 4, 32, 45, 66, 69, 71, 72, 73, 109, 119, 127, 152, 191, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225, 287, 290, 294], "batch_siz": [3, 8, 13, 14, 15, 16, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 51, 52, 53, 54, 55, 58, 64, 66, 68, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 92, 111, 113, 121, 139, 140, 148, 152, 156, 165, 166, 174, 175, 177, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 193, 194, 195, 200, 201, 203, 204, 205, 211, 214, 215, 216, 217, 219, 225, 254, 260, 272, 283, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "togeth": [3, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 40, 66, 69, 71, 72, 73, 92, 110, 152, 174, 178, 179, 180, 196, 283, 288, 289, 290, 293], "expect": [3, 4, 7, 26, 32, 38, 44, 45, 61, 66, 69, 70, 71, 72, 73, 87, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 103, 104, 106, 109, 111, 112, 114, 115, 117, 119, 120, 121, 122, 123, 124, 126, 127, 132, 152, 158, 183, 186, 190, 193, 200, 201, 202, 203, 204, 205, 211, 212, 213, 214, 215, 216, 217, 219, 225, 267, 282, 283, 284, 285, 287, 289, 290, 293, 294, 296, 299], "live": [3, 12, 13, 14, 16, 17, 19, 20, 32, 35, 38, 41, 42, 51, 52, 66, 69, 70, 71, 72, 73, 213], "actual": [3, 4, 7, 17, 66, 69, 71, 72, 73, 120, 266, 284, 287, 289, 293, 294], "just": [3, 4, 158, 254, 283, 285, 287, 288, 289, 290, 293, 294, 296, 298, 299], "retriev": [3, 34, 35, 36, 38, 39, 41, 42, 51, 52, 66, 69, 71, 72, 73, 93, 106, 139, 140, 156, 187, 191, 194, 200, 201, 202, 204, 212, 214, 215, 217, 219, 225, 227, 228, 229, 230, 272, 279, 285, 288, 289, 294, 299], "care": [3, 8, 66, 69, 71, 72, 73, 124, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 158, 161, 162, 163, 167, 168, 170, 175, 181, 183, 184, 186, 189, 194, 197, 287, 289, 293, 294, 296], "see": [3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 52, 53, 66, 69, 71, 72, 73, 95, 109, 121, 123, 124, 125, 127, 129, 131, 141, 151, 154, 158, 159, 165, 173, 174, 178, 180, 190, 191, 213, 260, 287, 288, 289, 290, 293, 294, 296, 299], "below": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 53, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 141, 151, 154, 158, 173, 190, 213, 260, 287, 288, 289, 290, 294], "parametr": [3, 160, 191, 201, 211, 217, 287, 289], "hardwar": 3, "observation_spec": [3, 66, 70, 91, 92, 93, 94, 95, 97, 98, 100, 102, 103, 104, 106, 109, 112, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 140, 152, 156, 267, 275, 287, 289, 292, 293, 294, 299], "compositespec": [3, 28, 49, 66, 68, 69, 70, 71, 72, 73, 96, 104, 111, 119, 120, 121, 124, 136, 140, 156, 177, 181, 184, 187, 193, 194, 281, 287, 289, 293, 294, 299], "pair": [3, 32, 34, 36, 39, 51, 66, 69, 71, 72, 73, 121, 178, 187, 191, 213, 227, 228, 229, 230, 231, 283, 284, 287, 288, 289, 292, 294, 299], "state_spec": [3, 70, 125, 289, 294, 299], "empti": [3, 26, 28, 35, 38, 41, 42, 51, 52, 87, 109, 122, 125, 127, 129, 287, 294], "action_spec": [3, 13, 14, 15, 16, 18, 19, 20, 66, 69, 70, 71, 72, 73, 75, 86, 92, 104, 113, 125, 148, 166, 168, 177, 182, 187, 188, 201, 204, 215, 217, 219, 275, 283, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "reward_spec": [3, 66, 69, 70, 71, 72, 73, 91, 95, 97, 114, 115, 116, 124, 125, 126, 140, 156, 289, 293, 294, 299], "reward": [3, 13, 14, 16, 32, 34, 39, 40, 44, 45, 53, 66, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 91, 95, 97, 104, 111, 113, 114, 115, 116, 117, 120, 124, 125, 126, 128, 129, 130, 136, 139, 140, 156, 196, 200, 201, 203, 204, 205, 208, 211, 213, 214, 215, 216, 217, 219, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 256, 257, 259, 261, 279, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "done_spec": [3, 66, 69, 71, 72, 73, 124, 125, 289, 293, 294, 299], "flag": [3, 8, 35, 38, 41, 42, 51, 52, 186, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 283, 293, 294, 295], "input_spec": [3, 66, 70, 95, 96, 97, 106, 111, 117, 119, 124, 125, 126, 140, 156, 293, 294], "_action_spec": [3, 66, 293], "_state_spec": 3, "lock": [3, 26, 28, 121, 130, 294], "modifi": [3, 7, 8, 26, 28, 32, 45, 66, 69, 71, 72, 73, 95, 100, 104, 109, 121, 124, 125, 127, 129, 186, 190, 213, 266, 272, 287, 288, 289, 293, 294], "directli": [3, 4, 8, 66, 70, 113, 213, 279, 283, 289, 293, 294, 296], "output_spec": [3, 66, 95, 104, 111, 124, 125, 293, 294], "_observation_spec": 3, "_reward_spec": [3, 66, 293], "_done_spec": [3, 66, 293], "importantli": [3, 187, 191], "4": [3, 7, 24, 26, 27, 28, 33, 34, 35, 36, 38, 39, 40, 66, 69, 70, 71, 72, 73, 76, 77, 78, 80, 81, 85, 92, 113, 130, 140, 141, 142, 143, 148, 149, 150, 153, 154, 156, 158, 161, 162, 163, 164, 165, 166, 174, 177, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 193, 195, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225, 245, 283, 287, 288, 289, 290, 293, 294, 295, 296, 297, 298, 299], "action_s": 3, "help": [3, 4, 32, 66, 69, 71, 72, 73, 282, 284, 287, 288, 289, 290, 293], "prealloc": [3, 294], "With": [3, 120, 285, 287, 288, 293, 296, 299], "necessarili": 3, "If": [3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 51, 52, 53, 61, 66, 67, 69, 70, 71, 72, 73, 82, 93, 94, 96, 98, 100, 104, 105, 106, 109, 110, 116, 117, 121, 124, 125, 127, 129, 130, 139, 141, 152, 153, 154, 157, 158, 175, 177, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 219, 225, 226, 227, 228, 229, 230, 231, 241, 242, 243, 244, 258, 260, 263, 265, 267, 272, 275, 279, 282, 287, 288, 289, 290, 292, 293, 294, 296, 298, 299], "instanti": [3, 21, 34, 36, 39, 72, 73, 124, 158, 287, 288, 293, 294, 296, 299], "0s": [3, 121, 290], "stateless": [3, 124, 287, 294, 299], "set_se": [3, 13, 14, 16, 17, 21, 66, 69, 70, 71, 72, 73, 75, 86, 106, 111, 125, 294, 298, 299], "seed": [3, 13, 14, 16, 17, 21, 66, 69, 70, 71, 72, 73, 76, 88, 89, 125, 132, 263], "next": [3, 4, 8, 13, 14, 16, 26, 28, 32, 35, 38, 40, 41, 42, 51, 52, 53, 66, 67, 69, 70, 71, 72, 73, 75, 86, 88, 89, 92, 103, 104, 111, 113, 120, 121, 130, 136, 139, 140, 152, 156, 168, 196, 200, 201, 203, 204, 205, 206, 211, 214, 215, 216, 217, 219, 225, 226, 227, 228, 229, 230, 231, 257, 259, 261, 287, 288, 290, 292, 294, 295, 296, 298, 299], "determinist": [3, 32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 149, 162, 168, 177, 184, 190, 191, 194, 201, 213, 283, 287, 288, 290, 294, 299], "preced": [3, 153, 290], "without": [3, 7, 9, 32, 40, 66, 69, 71, 72, 73, 123, 179, 180, 200, 201, 203, 204, 205, 211, 214, 215, 216, 217, 219, 226, 227, 228, 229, 230, 231, 275, 282, 283, 287, 288, 289, 293, 294, 296, 299], "risk": [3, 110], "overlap": [3, 41], "consecut": [3, 61, 152, 186, 290, 293, 299], "still": [3, 9, 119, 181, 212, 213, 287, 288, 290, 292, 294, 296, 299], "reproduc": [3, 92, 132, 287, 289, 293], "maximum": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 25, 32, 34, 36, 37, 39, 40, 43, 45, 53, 54, 55, 56, 64, 66, 69, 71, 72, 73, 96, 114, 119, 120, 122, 136, 171, 172, 173, 187, 194, 201, 205, 211, 213, 217, 260, 287, 288, 289, 290, 293, 294, 296, 298, 299], "max_step": [3, 13, 66, 69, 70, 71, 72, 73, 88, 89, 119, 293, 298, 299], "n": [3, 6, 7, 24, 27, 32, 33, 40, 66, 69, 71, 72, 73, 92, 96, 100, 126, 156, 186, 191, 200, 205, 213, 226, 260, 283, 285, 288, 289, 290, 293, 296, 299], "tensordictmodul": [3, 13, 14, 16, 17, 20, 21, 40, 70, 104, 152, 156, 165, 166, 174, 175, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 192, 193, 194, 196, 201, 203, 205, 207, 208, 209, 211, 213, 215, 217, 219, 225, 226, 227, 228, 229, 230, 259, 275, 283, 287, 289, 290, 292, 293, 294, 295], "ani": [3, 5, 8, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 51, 52, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 67, 69, 71, 72, 73, 100, 109, 110, 113, 125, 127, 130, 132, 141, 154, 160, 190, 191, 192, 193, 200, 201, 203, 204, 205, 211, 213, 214, 215, 216, 217, 219, 227, 251, 263, 282, 287, 288, 289, 293, 294, 296, 298, 299], "compat": [3, 7, 11, 18, 19, 32, 34, 36, 39, 62, 66, 69, 71, 72, 73, 84, 87, 92, 127, 130, 152, 188, 200, 201, 203, 204, 205, 211, 213, 214, 215, 216, 217, 219, 222, 287, 290, 296, 298], "mark": [3, 16, 66, 69, 71, 72, 73, 152], "trail": [3, 130], "time": [3, 4, 7, 8, 13, 14, 16, 17, 18, 20, 21, 32, 35, 38, 40, 41, 42, 66, 67, 69, 71, 72, 73, 83, 87, 93, 110, 121, 122, 130, 139, 149, 152, 153, 186, 202, 205, 208, 212, 213, 214, 215, 219, 227, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 263, 283, 284, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "treat": 3, "figur": [3, 287, 289, 290, 293, 294, 299], "summar": [3, 294], "brief": [3, 289], "popul": [3, 38, 103, 121, 287, 289, 290, 294, 296], "entri": [3, 13, 14, 16, 18, 19, 20, 21, 23, 26, 28, 32, 34, 36, 37, 39, 45, 49, 51, 52, 66, 69, 71, 72, 73, 92, 94, 100, 103, 106, 109, 111, 113, 119, 121, 129, 130, 139, 157, 188, 189, 201, 217, 227, 228, 229, 230, 283, 287, 289, 290, 293, 294, 295, 296], "deliveri": 3, "step_mdp": [3, 152, 281, 290, 294, 298, 299], "nasium": 3, "recent": [3, 7, 11, 299], "shift": [3, 32, 197, 227, 228, 229, 230, 289], "termin": [3, 7, 32, 40, 51, 192, 287, 288, 289, 294, 298], "trust": [3, 152], "truncat": [3, 13, 14, 16, 18, 19, 20, 21, 37, 43, 45, 66, 69, 71, 72, 73, 119, 173, 233, 287, 289, 299], "refer": [3, 7, 8, 9, 21, 32, 40, 66, 69, 71, 72, 73, 125, 130, 140, 148, 149, 156, 157, 162, 163, 167, 168, 183, 200, 206, 207, 208, 209, 214, 227, 232, 240, 287, 289, 293], "stepcount": [3, 13, 66, 69, 71, 72, 73, 287, 288, 289, 290, 293, 298], "chosen": [3, 120, 121, 165, 166, 174, 189, 272, 283], "someth": [3, 32, 66, 69, 71, 72, 73, 282, 288, 289, 294, 299], "els": [3, 162, 283, 285, 287, 288, 289, 290, 293, 294, 295], "100": [3, 13, 14, 16, 17, 32, 38, 41, 43, 54, 55, 66, 69, 71, 72, 73, 106, 113, 183, 255, 275, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "truncated_kei": [3, 119], "look": [3, 5, 7, 8, 32, 66, 69, 71, 72, 73, 109, 110, 127, 187, 191, 192, 193, 284, 289, 290, 293, 294, 295, 296, 298, 299], "assess": [3, 287], "split_trajectori": [3, 13, 14, 16, 17, 18, 19, 20, 21, 281], "slice": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 51], "adjac": [3, 23, 100], "reli": [3, 200, 284, 287, 289, 294, 299], "traj_id": [3, 13, 14, 16, 23, 113, 290, 296, 298], "junction": 3, "miss": [3, 4, 6, 7, 11, 26, 32, 66, 69, 71, 72, 73, 121, 125, 139, 192, 193, 282, 287, 290], "context": [3, 5, 8, 32, 66, 67, 69, 71, 72, 73, 87, 121, 126, 158, 159, 223, 224, 227, 228, 229, 230, 232, 240, 259, 283, 284, 287, 288, 289, 293, 294, 295, 296], "through": [3, 4, 5, 8, 16, 18, 20, 21, 26, 28, 72, 73, 110, 154, 165, 191, 192, 193, 197, 227, 228, 229, 230, 283, 287, 288, 289, 292, 293, 294, 295, 296, 299], "inittrack": [3, 152, 287, 290], "our": [3, 7, 8, 18, 92, 283, 287, 288, 289, 290, 292, 293, 295, 296, 298], "tutori": [3, 287, 288, 290, 291, 292, 294, 295, 296, 297, 299], "inform": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 66, 67, 69, 71, 72, 73, 141, 154, 158, 284, 285, 287, 288, 289, 290, 293, 294, 296], "design": [3, 13, 14, 32, 33, 66, 69, 71, 72, 73, 92, 110, 125, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 287, 288, 289, 290, 292, 293, 294, 296, 299], "scratch": [3, 8, 288, 294], "better": [3, 8, 9, 152, 284, 289, 294], "featur": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 33, 45, 66, 69, 71, 72, 73, 92, 100, 104, 121, 126, 130, 141, 149, 150, 152, 154, 159, 160, 191, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 279, 283, 287, 288, 289, 290, 294, 296, 299], "intens": [3, 8], "gym3": 3, "envpool": [3, 71], "interfac": [3, 87, 154, 159, 283, 287, 289, 294, 296], "simultan": [3, 20, 72, 73, 294], "often": [3, 8, 210, 263, 287, 288, 294, 296, 299], "competit": [3, 293], "advantag": [3, 8, 150, 200, 202, 212, 214, 216, 227, 228, 229, 230, 231, 232, 234, 236, 238, 240, 241, 243, 284, 285, 287, 288, 289, 290, 293, 294, 299], "scale": [3, 4, 51, 92, 104, 106, 115, 120, 123, 149, 151, 161, 167, 168, 172, 173, 178, 179, 180, 187, 191, 193, 200, 201, 211, 214, 215, 216, 217, 261, 267, 272, 279, 283, 287, 288, 289, 290, 293, 298], "varieti": 3, "its": [3, 4, 5, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 44, 46, 47, 49, 66, 69, 70, 71, 72, 73, 92, 104, 120, 124, 125, 130, 141, 157, 158, 181, 184, 187, 188, 191, 194, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 263, 275, 285, 287, 288, 289, 290, 293, 294, 295, 296, 299], "own": [3, 13, 14, 17, 22, 32, 66, 69, 71, 72, 73, 288, 289, 293, 294], "As": [3, 4, 66, 69, 71, 72, 73, 113, 191, 227, 283, 287, 288, 289, 290, 293, 294, 295, 296, 298, 299], "inherit": [3, 155, 213, 285, 289, 293], "serialenv": [3, 66, 69, 71, 72, 121, 281, 299], "enjoi": 3, "exact": 3, "Of": [3, 7, 282, 294, 299], "cours": [3, 4, 282, 289, 294, 299], "correspond": [3, 4, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 41, 44, 46, 47, 57, 66, 69, 70, 71, 72, 73, 109, 121, 125, 129, 130, 152, 157, 186, 187, 191, 204, 225, 227, 228, 229, 230, 231, 287, 288, 289, 293, 294, 295], "count": [3, 67, 119, 186, 259, 263, 266, 287, 288, 289, 290, 296, 299], "def": [3, 11, 22, 32, 66, 67, 69, 70, 71, 72, 73, 83, 140, 148, 156, 195, 201, 203, 205, 211, 213, 215, 217, 219, 285, 287, 288, 292, 293, 294, 298, 299], "make_env": [3, 89, 130, 268, 269, 287, 288, 299], "gymenv": [3, 5, 13, 14, 16, 17, 21, 22, 66, 67, 69, 71, 72, 73, 84, 92, 95, 103, 104, 106, 111, 113, 121, 125, 130, 152, 272, 275, 281, 283, 287, 288, 289, 290, 295, 296, 298, 299], "v1": [3, 13, 14, 16, 17, 21, 22, 51, 66, 67, 69, 71, 72, 73, 92, 103, 104, 106, 111, 113, 121, 152, 222, 236, 237, 238, 239, 241, 242, 243, 244, 283, 288, 290, 294, 296, 298, 299], "from_pixel": [3, 76, 77, 92, 272, 287, 288, 290, 295, 296, 298, 299], "9": [3, 7, 32, 35, 38, 41, 120, 130, 157, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 220, 225, 284, 287, 288, 289, 293, 294, 295, 296], "81": [3, 288, 294, 295], "0": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 21, 22, 30, 31, 32, 33, 35, 38, 40, 41, 42, 49, 51, 52, 53, 54, 55, 57, 64, 66, 69, 70, 71, 72, 73, 75, 86, 91, 92, 93, 95, 96, 104, 105, 106, 109, 113, 120, 121, 123, 124, 125, 127, 129, 130, 132, 140, 141, 142, 143, 145, 149, 151, 152, 154, 156, 157, 158, 159, 160, 161, 164, 167, 168, 171, 172, 173, 175, 177, 181, 183, 184, 186, 189, 190, 193, 194, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 225, 226, 227, 228, 229, 230, 233, 234, 235, 254, 261, 275, 279, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299], "must": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 53, 54, 55, 56, 62, 64, 66, 67, 69, 71, 72, 73, 101, 104, 106, 121, 125, 126, 130, 141, 148, 152, 154, 157, 158, 166, 177, 182, 183, 187, 188, 189, 190, 191, 194, 195, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 218, 219, 225, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 272, 287, 288, 289, 290, 292, 294, 296, 298], "print": [3, 6, 7, 13, 14, 16, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 53, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 88, 89, 92, 93, 96, 97, 103, 106, 111, 113, 121, 123, 130, 136, 139, 141, 148, 154, 157, 158, 161, 164, 166, 177, 178, 179, 180, 182, 184, 186, 188, 190, 193, 195, 213, 272, 275, 283, 285, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "simpli": [3, 6, 34, 36, 39, 45, 98, 117, 213, 283, 284, 287, 289, 293, 299], "b": [3, 7, 8, 23, 26, 28, 34, 36, 39, 40, 41, 42, 158, 159, 160, 165, 174, 194, 227, 228, 229, 230, 231, 233, 246, 283, 288, 295, 296], "c": [3, 6, 7, 26, 34, 36, 39, 41, 42, 52, 106, 123, 288, 296], "d": [3, 35, 52, 53, 57, 191, 298], "get": [3, 4, 6, 7, 8, 9, 34, 35, 36, 38, 39, 51, 54, 55, 62, 64, 67, 72, 73, 93, 96, 97, 104, 106, 110, 120, 121, 123, 130, 177, 184, 187, 188, 191, 227, 228, 229, 230, 231, 250, 283, 287, 288, 289, 290, 293, 294, 296, 298, 299], "forc": [3, 6, 7, 13, 14, 18, 20, 21, 288, 293, 294], "_reset": [3, 66, 69, 70, 71, 72, 73, 92, 140, 156], "fals": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 61, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 86, 87, 88, 89, 92, 93, 95, 100, 103, 104, 105, 106, 109, 110, 111, 113, 115, 121, 123, 124, 125, 126, 127, 129, 130, 132, 139, 140, 141, 142, 148, 151, 152, 154, 156, 157, 158, 165, 166, 172, 173, 174, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 222, 225, 227, 228, 229, 230, 236, 237, 238, 239, 241, 242, 243, 244, 256, 257, 259, 260, 261, 263, 272, 279, 283, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "field": [3, 13, 14, 16, 17, 26, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 54, 55, 64, 66, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 111, 113, 121, 125, 139, 140, 148, 152, 156, 165, 166, 174, 177, 178, 179, 180, 182, 183, 186, 187, 188, 189, 190, 193, 195, 200, 201, 203, 204, 205, 211, 214, 215, 216, 217, 219, 225, 267, 272, 282, 283, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "bool": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 61, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 86, 87, 88, 89, 92, 93, 96, 100, 104, 105, 106, 109, 111, 113, 115, 121, 123, 125, 126, 127, 129, 130, 132, 139, 140, 141, 142, 143, 151, 152, 154, 156, 158, 159, 160, 172, 173, 177, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 222, 225, 227, 228, 229, 230, 233, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 256, 257, 259, 260, 261, 263, 272, 279, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "pixel": [3, 7, 26, 92, 94, 100, 102, 106, 109, 112, 123, 127, 129, 142, 162, 163, 246, 272, 283, 287, 288, 290, 295, 296, 298, 299], "500": [3, 287, 288, 294, 298, 299], "uint8": [3, 47, 123, 288, 295, 296, 298, 299], "none": [3, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 62, 64, 66, 67, 69, 70, 71, 72, 73, 82, 88, 89, 91, 92, 93, 94, 95, 97, 100, 102, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 127, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 218, 219, 225, 226, 227, 228, 229, 230, 231, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 257, 258, 259, 260, 261, 262, 263, 267, 268, 269, 272, 275, 277, 278, 279, 283, 285, 287, 288, 289, 290, 293, 294, 296, 298, 299], "is_shar": [3, 13, 14, 16, 26, 34, 36, 37, 39, 40, 41, 42, 43, 45, 53, 54, 55, 64, 66, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 111, 113, 121, 130, 139, 140, 148, 152, 156, 165, 166, 174, 177, 178, 179, 180, 182, 183, 186, 187, 188, 189, 190, 193, 195, 200, 201, 203, 204, 205, 211, 214, 215, 216, 217, 219, 225, 272, 283, 289, 290, 292, 293, 294, 295, 296, 298, 299], "note": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 38, 39, 41, 42, 66, 69, 71, 72, 73, 130, 152, 186, 187, 191, 287, 288, 292, 293, 299], "launch": [3, 18, 19, 20, 22], "quit": [3, 283, 287, 288, 289, 293, 299], "mani": [3, 4, 38, 66, 200, 202, 205, 212, 214, 215, 219, 283, 287, 288, 289, 293, 294, 296, 299], "start": [3, 4, 5, 13, 21, 45, 67, 139, 258, 287, 288, 293, 294, 296, 299], "bottleneck": [3, 8], "so": [3, 4, 6, 7, 10, 32, 40, 66, 69, 71, 72, 73, 121, 130, 192, 193, 213, 289, 290, 293, 294, 299], "onc": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 66, 69, 71, 72, 73, 113, 125, 181, 184, 186, 261, 285, 288, 289, 290, 294, 296, 299], "great": [3, 7, 8, 298], "speedup": [3, 8, 299], "precis": [3, 139, 287, 289], "anoth": [3, 8, 34, 36, 39, 66, 69, 71, 72, 73, 121, 124, 154, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 283, 284, 287, 289, 290, 292, 293, 294, 299], "misspecifi": 3, "caus": [3, 7, 8, 66, 69, 71, 72, 73, 110], "breakag": 3, "t": [3, 4, 6, 7, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 46, 47, 57, 61, 66, 67, 69, 71, 72, 73, 92, 109, 113, 122, 129, 130, 139, 182, 186, 190, 218, 227, 228, 229, 230, 231, 233, 263, 265, 279, 282, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "rais": [3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 66, 69, 71, 72, 73, 99, 113, 125, 132, 181, 184, 186, 287, 289, 293, 296], "assert": [3, 6, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 69, 83, 92, 104, 111, 130, 132, 136, 158, 161, 175, 227, 228, 229, 230, 254, 262, 292, 293, 296, 299], "mismatch": [3, 288], "mostli": [3, 17, 284, 296, 299], "purpos": [3, 7, 92, 275, 287, 289, 290, 293, 295, 299], "want": [3, 6, 7, 8, 106, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225, 283, 287, 288, 289, 290, 293, 294, 295, 296, 298, 299], "subprocess": [3, 67], "addit": [3, 4, 32, 51, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 181, 190, 199, 213, 227, 284, 287, 288, 293, 296], "multithread": [3, 35, 38, 41, 42, 51, 52, 53, 71, 296], "multithreadedenv": [3, 281], "underneath": 3, "higher": [3, 4, 194, 287, 288, 289, 296, 299], "restrict": [3, 288, 295, 296, 299], "flexibl": [3, 9, 71, 220, 284, 285, 296, 299], "cover": [3, 282, 289, 294, 298], "popular": [3, 283, 290, 293], "atari": [3, 4, 92, 299], "classic": [3, 70, 288], "benchmark_batched_env": 3, "py": [3, 83, 165, 174, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299], "pipelin": [3, 7, 283, 289], "seamlessli": [3, 294], "modif": [3, 5, 26, 28, 32, 66, 69, 71, 72, 73, 100, 213, 289, 294], "infrastructur": [3, 293], "view": [3, 8, 27, 32, 33, 66, 69, 71, 72, 73, 148, 154, 294, 296, 298, 299], "core": [3, 8, 272, 285, 290, 298], "decis": [3, 290, 293, 296], "act": [3, 4, 158, 201, 203, 211, 215, 217, 219, 290, 293], "world": [3, 5, 70, 196, 208, 293, 294, 299], "paradigm": [3, 17, 293], "decpodp": 3, "markov": 3, "game": [3, 4, 5], "between": [3, 4, 5, 13, 14, 16, 17, 21, 32, 40, 61, 66, 69, 71, 72, 73, 96, 105, 114, 125, 132, 141, 152, 154, 158, 183, 187, 191, 200, 202, 203, 205, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 222, 227, 259, 263, 284, 287, 288, 290, 293, 294, 299], "includ": [3, 4, 7, 9, 21, 32, 54, 55, 56, 62, 64, 66, 69, 70, 71, 72, 73, 120, 125, 130, 213, 266, 283, 285, 287, 288, 289, 290, 293, 294, 296, 299], "per": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 72, 149, 158, 263, 277, 278, 287, 288, 289, 290, 293, 296, 298], "accommod": [3, 13, 14, 16, 17], "thank": [3, 287], "carrier": [3, 289, 290, 296], "particular": [3, 32, 45, 51, 66, 69, 71, 72, 73, 125, 284, 285, 288, 290, 292, 293, 296], "carri": [3, 21, 45, 66, 69, 71, 72, 73, 121, 213, 288, 290, 293, 294, 296], "thu": [3, 212, 293], "group": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 283, 288, 289, 293], "hand": [3, 7, 21, 293, 294], "kept": [3, 13, 14, 16, 17, 61, 72, 73, 96, 124, 132, 139, 151, 172, 173], "case": [3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 32, 35, 41, 57, 66, 69, 71, 72, 73, 121, 123, 125, 132, 152, 154, 158, 187, 190, 191, 193, 194, 199, 200, 201, 203, 204, 205, 211, 214, 215, 216, 217, 219, 227, 228, 229, 230, 254, 265, 277, 278, 279, 283, 285, 287, 288, 289, 290, 293, 294, 296, 299], "let": [3, 6, 7, 32, 43, 66, 69, 71, 72, 73, 92, 152, 158, 182, 259, 284, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "understand": [3, 8, 287, 288, 293], "go": [3, 7, 110, 113, 233, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "vma": [3, 88, 89, 293], "robot": [3, 5, 7, 109, 127, 129, 293], "what": [3, 8, 35, 44, 66, 69, 71, 72, 73, 121, 139, 188, 282, 283, 284, 288, 289, 290, 293, 294, 295, 296, 298, 299], "vmasenv": [3, 281, 293], "balanc": [3, 287, 288, 299], "num_env": [3, 21, 88, 89, 293], "n_agent": [3, 88, 89, 158, 165, 174, 225, 293], "5": [3, 24, 26, 28, 35, 38, 41, 42, 67, 71, 86, 88, 89, 113, 140, 141, 148, 149, 151, 153, 154, 156, 158, 162, 166, 172, 173, 182, 188, 194, 212, 214, 216, 219, 283, 287, 288, 293, 294, 295, 296, 297, 298, 299], "td": [3, 15, 26, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 93, 96, 97, 103, 104, 106, 113, 120, 121, 123, 125, 130, 139, 140, 148, 152, 155, 156, 165, 166, 174, 177, 178, 179, 180, 182, 184, 186, 187, 188, 190, 193, 195, 225, 228, 229, 230, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 254, 262, 272, 283, 284, 287, 290, 293, 294, 298, 299], "info": [3, 35, 38, 41, 42, 51, 52, 66, 69, 71, 72, 73, 88, 89, 127, 131, 293, 296], "ground_rew": 3, "pos_rew": [3, 293], "16": [3, 32, 66, 69, 71, 72, 73, 92, 287, 288, 289, 290, 294, 296], "root": [3, 26, 28, 92, 139, 151, 172, 173, 290, 293, 294, 296, 299], "style": [3, 35, 38, 41, 42, 51, 52], "relat": [3, 4, 10, 35, 100, 200, 201, 203, 204, 205, 211, 214, 215, 216, 217, 219, 288, 294], "vari": [3, 110, 293], "creation": [3, 72, 73, 287, 299], "info_spec": 3, "i": [3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 35, 38, 42, 43, 54, 55, 57, 64, 66, 69, 71, 72, 73, 109, 113, 116, 125, 129, 161, 166, 183, 187, 189, 190, 191, 227, 228, 229, 230, 254, 266, 287, 288, 289, 290, 293, 294, 296, 298, 299], "rang": [3, 4, 8, 11, 27, 35, 38, 40, 54, 55, 67, 113, 123, 130, 212, 219, 284, 285, 287, 289, 290, 293, 294, 296, 298], "append": [3, 8, 35, 38, 41, 42, 51, 52, 67, 113, 121, 152, 182, 188, 287, 288, 289, 290, 293, 294, 295, 296, 298], "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 33, 66, 204, 225, 281, 289, 293, 299], "you": [3, 5, 6, 7, 8, 9, 10, 32, 43, 66, 69, 71, 72, 73, 83, 130, 282, 283, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "simpl": [3, 9, 32, 33, 66, 69, 71, 72, 73, 142, 191, 204, 213, 216, 227, 283, 284, 287, 288, 289, 293, 299], "composit": [3, 26, 28, 66, 69, 71, 72, 73, 289, 294], "prefix": [3, 23, 32, 45, 66, 69, 71, 72, 73, 125, 213, 245, 290, 299], "exactli": [3, 32, 66, 69, 71, 72, 73, 84, 125, 287, 290, 293], "action_kei": [3, 15, 66, 69, 71, 72, 73, 96, 139, 140, 155, 156, 181, 184, 186, 293], "reward_kei": [3, 66, 69, 71, 72, 73, 139, 140, 156, 257, 261, 293], "done_kei": [3, 66, 69, 71, 72, 73, 139, 293], "automat": [3, 5, 66, 69, 71, 72, 73, 106, 177, 187, 283, 287, 289, 293, 294, 296, 298], "right": [3, 6, 7, 40, 153, 288, 289, 293, 294, 299], "sure": [3, 4, 7, 52, 62, 113, 182, 279, 283, 287, 289, 290, 293, 294, 296, 298, 299], "set_kei": [3, 200, 201, 202, 204, 205, 206, 211, 212, 213, 214, 215, 216, 217, 225, 231, 293], "awai": [3, 289, 293], "eas": [3, 293], "access": [3, 7, 8, 32, 35, 52, 66, 69, 71, 72, 73, 109, 127, 213, 279, 282, 287, 293, 294, 296], "leaf": [3, 26, 28, 66, 69, 71, 72, 73, 191, 293], "abov": [3, 7, 32, 66, 69, 71, 72, 73, 151, 172, 173, 199, 284, 285, 287, 289, 293, 294, 299], "would": [3, 32, 40, 66, 69, 71, 72, 73, 152, 154, 285, 288, 289, 290, 294, 296, 299], "full": [3, 183, 254, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "raw": [3, 4, 40, 151, 172, 173, 288, 294], "logic": 3, "torchvis": [3, 109, 129, 298, 299], "transformedenv": [3, 13, 66, 67, 69, 71, 72, 73, 92, 95, 100, 103, 104, 105, 106, 111, 113, 121, 124, 130, 152, 272, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "primit": [3, 4, 200, 201, 203, 204, 205, 211, 214, 215, 216, 217, 219], "built": [3, 5, 7, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 220, 225, 273, 275, 276, 279, 287, 288, 289, 290, 296, 299], "base_env": [3, 96, 97, 104, 121, 287, 288, 289, 295, 298, 299], "totensorimag": [3, 92, 288, 290, 296, 298, 299], "in_kei": [3, 13, 14, 16, 17, 21, 70, 91, 92, 93, 94, 96, 97, 100, 102, 104, 106, 107, 109, 111, 112, 113, 114, 115, 116, 120, 122, 123, 124, 125, 127, 129, 130, 140, 147, 152, 156, 165, 174, 175, 177, 178, 179, 180, 182, 187, 188, 190, 191, 193, 194, 195, 200, 201, 202, 203, 204, 205, 211, 212, 214, 215, 216, 217, 219, 225, 227, 228, 229, 230, 245, 246, 272, 275, 283, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "resiz": [3, 92, 288, 290, 296, 299], "64": [3, 92, 142, 143, 150, 152, 158, 165, 225, 287, 288, 289, 290, 292, 294, 295, 296, 298, 299], "now": [3, 7, 35, 92, 158, 287, 288, 289, 290, 292, 293, 295, 296, 299], "appar": [3, 256], "bring": [3, 289, 299], "signific": [3, 5, 8, 289, 299], "kind": [3, 38, 44, 139, 296], "consult": 3, "interest": [3, 187, 191, 283, 288, 289, 293, 294, 299], "resize_par": 3, "out_kei": [3, 13, 14, 16, 17, 21, 70, 91, 92, 93, 94, 100, 102, 104, 106, 107, 109, 111, 112, 113, 114, 116, 120, 122, 123, 124, 127, 129, 140, 147, 148, 152, 156, 165, 166, 174, 175, 177, 178, 179, 180, 183, 187, 188, 189, 190, 191, 193, 194, 195, 200, 201, 202, 205, 211, 212, 214, 215, 216, 217, 225, 227, 228, 229, 230, 259, 275, 283, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "easi": [3, 5, 52, 181, 184, 186, 283, 284, 287, 288, 289, 293, 295, 296, 299], "graph": [3, 4, 8, 223, 224, 287, 294], "inv": [3, 96, 113, 294], "appli": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 51, 52, 66, 69, 71, 72, 73, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 108, 110, 111, 113, 116, 117, 119, 120, 121, 122, 124, 125, 127, 128, 130, 172, 182, 227, 258, 285, 287, 288, 289, 294, 298, 299], "revers": 3, "order": [3, 16, 32, 33, 35, 38, 41, 42, 51, 52, 61, 66, 69, 71, 72, 73, 125, 177, 182, 190, 192, 193, 195, 200, 201, 203, 205, 211, 214, 215, 216, 217, 219, 288, 293], "chain": [3, 34, 35, 36, 38, 39, 41, 42, 51, 52, 95, 96, 141, 193, 299], "taken": [3, 66, 69, 71, 72, 73, 157, 284, 287, 289, 290, 293, 294], "invers": [3, 4, 35, 38, 41, 42, 51, 52, 92, 106, 113, 198, 211, 294], "in_keys_inv": [3, 97, 106, 107, 111, 113, 124, 287, 292, 294, 299], "append_transform": [3, 35, 38, 41, 42, 51, 52, 109, 121, 127, 287, 290, 294, 298, 299], "doubletofloat": [3, 272, 287, 289, 292], "float32": [3, 13, 14, 16, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 54, 55, 57, 64, 66, 69, 70, 71, 72, 73, 75, 86, 87, 88, 89, 97, 106, 111, 113, 121, 123, 136, 139, 140, 148, 152, 156, 165, 166, 174, 177, 178, 179, 180, 182, 186, 187, 188, 189, 190, 193, 195, 200, 201, 203, 204, 205, 211, 214, 215, 216, 217, 219, 225, 272, 283, 289, 290, 292, 293, 294, 295, 296, 298, 299], "float64": [3, 32, 66, 69, 71, 72, 73, 88, 95, 109, 121, 124, 125, 127, 129, 190, 213, 292, 299], "regist": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 66, 69, 71, 72, 73, 125, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 158, 161, 162, 163, 167, 168, 170, 175, 181, 183, 184, 186, 189, 194, 197, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 285, 287, 289, 296], "manipul": [3, 4, 8, 109, 127, 299], "keep": [3, 4, 7, 8, 14, 42, 61, 106, 109, 129, 130, 139, 186, 256, 263, 287, 288, 289, 290, 293, 294, 296, 298, 299], "mind": [3, 293], "third_transform": 3, "replac": [3, 6, 7, 26, 28, 32, 96, 139, 283, 296], "unexpect": [3, 32, 66, 69, 71, 72, 73, 125, 299], "behviour": 3, "fortun": [3, 290], "eras": [3, 66, 69, 71, 72, 73], "ident": [3, 13, 14, 16, 32, 72, 73, 158, 227, 228, 229, 230, 277, 278, 288, 293], "alreadi": [3, 8, 11, 32, 45, 66, 69, 71, 72, 73, 121, 191, 227, 228, 229, 230, 287, 289, 293], "place": [3, 13, 14, 16, 17, 26, 28, 32, 34, 36, 39, 66, 67, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 130, 190, 213, 260, 265, 266, 288, 289, 293, 294, 296], "chang": [3, 5, 7, 32, 35, 38, 41, 42, 54, 55, 56, 61, 62, 64, 66, 69, 71, 72, 73, 95, 104, 111, 124, 125, 130, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225, 284, 287, 289, 290, 293, 294, 295, 296, 299], "happen": [3, 66, 69, 71, 72, 73, 181, 288, 295, 299], "catfram": [3, 288], "hold": [3, 223, 224, 294, 296], "notic": [3, 92, 289, 294], "parenthood": 3, "reason": [3, 4, 8, 32, 66, 69, 71, 72, 73, 109, 127, 152, 284, 287, 288, 289, 294, 296], "henc": [3, 35, 110, 283, 287, 289, 293, 294], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 294], "log": [3, 4, 8, 40, 146, 147, 148, 157, 164, 173, 182, 183, 187, 191, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 256, 257, 259, 263, 275, 283, 284, 285, 287, 288, 289, 293, 294, 298], "mission": 3, "irrespect": [3, 190, 191], "dmcontrol": [3, 287], "jumanji": [3, 85, 86], "natur": [3, 287, 290], "last": [3, 4, 11, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 46, 47, 61, 66, 69, 71, 72, 73, 100, 106, 110, 122, 141, 152, 153, 154, 157, 162, 169, 175, 181, 184, 191, 288, 289, 290, 293, 294, 295, 296, 298, 299], "special": [3, 283, 287, 290, 299], "statu": 3, "framework": [3, 4, 9, 22, 70, 298, 299], "Its": [3, 32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 130, 190, 213, 231], "success": [3, 92, 124, 288, 294, 296, 298], "been": [3, 5, 7, 8, 17, 18, 20, 21, 40, 61, 66, 69, 71, 72, 73, 104, 124, 181, 184, 186, 287, 288, 289, 290, 292, 293, 294, 296, 299], "foundat": [3, 5, 289, 293], "inspir": [3, 294], "howev": [3, 5, 7, 32, 66, 69, 71, 72, 73, 92, 116, 119, 120, 125, 283, 287, 288, 289, 290, 296, 299], "gone": [3, 4, 5], "sometim": [3, 290, 299], "hard": [3, 7, 210, 288, 299], "adopt": [3, 5, 287, 299], "prefer": [3, 17, 20, 35, 38, 41, 42, 110, 117, 214, 260, 283, 289, 293, 296], "moreov": 3, "maintain": [3, 5, 9, 294], "gymnasium": [3, 5, 11, 80, 81, 82, 83, 288, 289, 294, 298], "both": [3, 7, 32, 66, 67, 69, 71, 72, 73, 92, 111, 125, 141, 152, 154, 158, 178, 179, 180, 183, 189, 200, 202, 203, 205, 211, 212, 213, 214, 215, 216, 217, 219, 259, 283, 287, 289, 293, 294, 295, 296, 299], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 288, 289, 290, 293, 294, 296, 299], "decor": [3, 8, 11, 83, 213, 227, 228, 229, 230], "set_gym_backend": [3, 82, 281], "relev": [3, 40, 227, 228, 229, 230, 231, 294], "gym_backend": [3, 83, 281], "env1": [3, 292], "path": [3, 6, 7, 32, 34, 36, 45, 53, 54, 66, 69, 71, 72, 73, 83, 109, 129, 156, 263, 285, 288], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 83], "__init__": [3, 7, 70, 83, 140, 148, 156, 195, 201, 203, 205, 211, 215, 217, 219, 285, 294, 299], "env2": [3, 292], "_env": [3, 6, 299], "classic_control": 3, "pendulumenv": [3, 294], "0x15147e190": 3, "0x1629916a0": 3, "further": [3, 5, 289], "indic": [3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 51, 52, 53, 59, 61, 63, 65, 66, 69, 71, 72, 73, 92, 93, 119, 121, 125, 141, 154, 157, 158, 186, 188, 189, 197, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225, 267, 279, 282, 285, 289, 290, 294, 296, 299], "current": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 66, 69, 71, 72, 73, 84, 110, 120, 121, 125, 133, 134, 139, 149, 153, 168, 186, 206, 249, 285, 287, 288, 289, 290, 293, 294, 298, 299], "tell": [3, 4, 7, 287, 290, 293], "mo_gymnasium": [3, 81, 82], "handi": 3, "side": [3, 4, 299], "v0": [3, 69, 78, 79, 80, 81, 85, 86, 95, 125, 130, 275], "26": [3, 288, 289, 294, 295, 297], "fun": [3, 11, 83, 289, 293], "reveal": 4, "bug": [4, 298], "curv": 4, "won": [4, 32, 66, 67, 69, 71, 72, 73, 109, 129, 263, 279, 288, 289], "exploit": 4, "video": [4, 9, 246, 259, 279, 293], "cannot": [4, 7, 22, 26, 27, 28, 31, 33, 66, 69, 71, 72, 73, 110, 188, 288, 289, 290, 293, 294], "cv": 4, "flip": 4, "imag": [4, 7, 76, 94, 109, 123, 129, 154, 287, 288, 293, 295, 299], "correspondingli": 4, "prescript": 4, "tune": [4, 104, 293, 295], "coeffici": [4, 40, 104, 293], "bonu": [4, 200, 202, 212, 214], "beta": [4, 35, 41, 57, 211, 212, 287, 288, 296, 298], "altern": [4, 27, 71, 157, 199, 213, 287, 289, 293], "reduc": [4, 6, 27, 120, 288, 289], "downstream": [4, 287], "formul": [4, 293], "ob": [4, 8, 26, 28, 97, 106, 123, 136, 139, 158, 188, 195, 201, 203, 205, 211, 215, 217, 219, 227, 228, 229, 230, 288, 292, 294, 298, 299], "rate": [4, 130, 226, 288, 289, 293], "gradient": [4, 32, 66, 69, 71, 72, 73, 125, 151, 160, 172, 173, 200, 202, 203, 205, 211, 212, 213, 214, 215, 216, 217, 219, 226, 227, 228, 229, 230, 263, 287, 289, 293, 294], "norm": [4, 8, 263, 287, 288, 289, 293, 294], "easier": [4, 283, 287], "behavior": [4, 32, 66, 69, 71, 72, 73, 125, 211, 213, 289, 293], "local": [4, 7, 10, 16, 21, 32, 66, 69, 71, 72, 73, 125, 158, 165, 174, 225, 251, 293], "optima": 4, "sens": [4, 294], "product": [4, 9, 277, 278], "sum": [4, 21, 31, 33, 69, 157, 174, 208, 226, 233, 284, 287, 288, 289, 290, 293, 294, 299], "track": [4, 13, 14, 16, 17, 18, 19, 20, 21, 42, 61, 116, 130, 186, 251, 256, 288, 290, 293, 294, 296], "stat": [4, 106, 267, 279, 288, 289], "w": [4, 92, 94, 112, 123, 186, 246, 288, 290, 296], "r": [4, 32, 106, 191, 199, 226, 283, 288, 294, 299], "yield": [4, 16, 21, 32, 66, 69, 71, 72, 73, 213, 287], "insight": 4, "auxiliari": 4, "credit": 4, "assign": [4, 13, 14, 32, 66, 69, 71, 72, 73, 125, 203, 204, 289, 293, 296], "futur": [4, 32, 66, 69, 71, 72, 73, 109, 125, 129, 154, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225, 282, 298], "past": [4, 288, 296], "becom": [4, 21, 293, 299], "spars": [4, 290], "ineffici": 4, "ad": [4, 13, 14, 16, 32, 35, 38, 41, 42, 49, 51, 52, 57, 66, 69, 71, 72, 73, 116, 125, 159, 160, 186, 200, 202, 204, 206, 212, 214, 225, 288, 290, 296, 299], "intermedi": [4, 152, 183, 287, 295], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 287], "discov": 4, "score": [4, 40], "undesir": 4, "though": [4, 66, 154, 289, 293], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "zero": [4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 45, 46, 47, 51, 55, 64, 66, 69, 71, 72, 73, 92, 93, 96, 106, 113, 136, 139, 140, 152, 153, 157, 158, 165, 174, 184, 186, 189, 197, 200, 201, 203, 204, 205, 211, 213, 214, 215, 216, 217, 219, 225, 227, 228, 229, 230, 233, 290, 298], "subtask": 4, "hierarch": [4, 298], "individu": [4, 18, 19, 20, 21, 32, 45, 66, 69, 71, 72, 73, 287, 293], "select": [4, 15, 35, 38, 41, 42, 51, 52, 92, 93, 95, 98, 99, 100, 101, 103, 104, 105, 108, 110, 111, 113, 116, 117, 119, 120, 121, 122, 124, 127, 128, 130, 140, 152, 182, 188, 262, 287, 296], "fall": 4, "section": [4, 288, 293], "explicit": [4, 11, 45, 153, 296], "mechan": [4, 32, 66, 69, 71, 72, 73, 125, 288, 294], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 34, 36, 39, 66, 69, 71, 72, 73, 211, 289, 293], "addition": 4, "timestep": [4, 40, 113, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 293], "realli": 4, "larg": [4, 27, 127, 288, 289, 293, 296], "target": [4, 8, 21, 32, 66, 67, 69, 71, 72, 73, 120, 124, 190, 191, 200, 201, 202, 203, 204, 205, 206, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 225, 226, 227, 228, 229, 230, 231, 266, 274, 275, 284, 285, 290, 294], "huge": [4, 158, 290], "std": [4, 106, 130, 161, 181, 287, 299], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 290, 291, 292, 295, 296, 297], "initi": [4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 40, 66, 69, 71, 72, 73, 106, 109, 121, 124, 125, 127, 131, 140, 156, 159, 160, 181, 184, 186, 200, 201, 203, 204, 205, 206, 207, 211, 212, 213, 214, 215, 216, 217, 219, 225, 272, 279, 288, 290, 294, 299], "estim": [4, 104, 178, 179, 180, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 215, 216, 217, 219, 220, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 284, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "encount": [4, 72, 73, 282, 288, 294], "unseen": 4, "extrins": 4, "wrong": 4, "goe": [4, 287, 289, 293, 299], "bonus": 4, "denser": 4, "prior": [4, 168, 208, 293], "freshli": 4, "proper": [4, 6, 7, 227, 228, 229, 230, 288, 289, 293, 296], "doesn": [4, 11, 71], "drop": [4, 61, 139], "meant": [4, 70], "encourag": [4, 287, 288, 296], "measur": [4, 289], "novelti": 4, "revisit": 4, "previous": [4, 289, 299], "diminish": 4, "decreas": 4, "ideal": [4, 106, 294], "down": [4, 13, 14, 16, 17, 290], "anyth": 4, "try": [4, 7, 8, 9, 26, 28, 34, 36, 39, 288, 289, 290, 293, 294, 298, 299], "distil": 4, "add": [4, 6, 21, 32, 35, 38, 41, 42, 51, 52, 59, 63, 65, 66, 69, 71, 72, 73, 92, 104, 152, 159, 185, 200, 213, 258, 289, 290, 293, 294, 296, 298], "nois": [4, 131, 160, 176, 186, 215, 219, 259, 279, 287], "exploratori": [4, 200, 202, 212, 214], "could": [4, 6, 288, 289, 293, 295, 299], "misalign": 4, "trade": 4, "unavoid": 4, "prioriti": [4, 35, 41, 42, 54, 55, 56, 57, 62, 64, 201, 203, 204, 205, 206, 211, 215, 217, 219, 225, 285, 287, 288, 296], "schedul": [4, 7, 40, 259, 289, 294], "separ": [4, 8, 13, 14, 17, 18, 20, 21, 23, 109, 129, 201, 203, 205, 215, 217, 219, 287, 288, 293, 296, 299], "divers": [4, 72, 73], "bootstrap": [4, 206, 228, 234, 235, 287, 290], "noisi": [4, 159, 160, 176, 283], "unstabl": [4, 151, 172, 173], "inher": 4, "stochast": [4, 104, 149, 160, 162, 168, 201, 205, 211, 215, 217, 283, 289, 293], "enemi": 4, "variabl": [4, 7, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 152, 156, 178, 179, 180, 213, 215, 285, 288], "pomdp": [4, 296], "previou": [4, 10, 32, 40, 41, 121, 168, 289, 290, 294, 299], "loos": [4, 283, 288, 289], "nonexist": 4, "architectur": [4, 293], "sequenc": [4, 13, 14, 16, 17, 26, 28, 30, 31, 35, 37, 38, 40, 43, 45, 53, 59, 63, 65, 91, 92, 93, 94, 96, 97, 100, 102, 106, 107, 110, 111, 112, 113, 114, 115, 116, 120, 122, 123, 124, 130, 141, 146, 148, 154, 157, 158, 164, 166, 170, 192, 193, 245, 246, 258, 259, 260, 262, 263, 272, 283, 287, 289, 290, 292, 293, 299], "rather": [4, 111, 287, 288, 289, 293], "lstm": [4, 152, 153, 161], "explicitli": [4, 288, 290, 293, 296], "rel": [4, 121, 146, 171, 287, 288, 293, 296], "tend": 4, "stabl": [4, 9, 10], "don": [4, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 66, 92, 288, 289, 296, 298, 299], "compens": 4, "descent": [4, 160], "1000": [4, 38, 66, 69, 71, 72, 73, 92, 130, 186, 187, 191, 210, 287, 288, 289, 290, 295, 296], "know": [4, 9, 35, 38, 41, 42, 181, 184, 215, 259, 287, 288, 289, 290, 293, 296], "minimum": [4, 25, 66, 114, 136, 149, 161, 171, 172, 173, 187, 194, 197, 199, 201, 205, 213, 217, 254, 287, 289, 293, 294, 298, 299], "manual": [4, 18, 20, 21, 287, 290, 296], "deviat": [4, 106, 130, 140, 149, 156, 159, 160, 181, 214, 219, 287, 293], "radic": 4, "begin": [4, 13, 14, 16, 18, 19, 20, 21], "updat": [4, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 40, 41, 57, 66, 69, 70, 71, 72, 73, 96, 120, 125, 128, 130, 140, 152, 156, 181, 184, 186, 187, 188, 189, 190, 191, 200, 201, 203, 204, 205, 206, 207, 210, 211, 213, 214, 215, 216, 217, 218, 219, 225, 227, 228, 229, 230, 231, 259, 263, 265, 268, 269, 274, 275, 285, 288, 289, 290, 293, 294, 296, 298, 299], "stabil": [4, 101], "stage": [4, 287, 294], "never": 4, "prevent": [4, 26, 28, 151, 172, 173, 212, 214, 261, 296], "solv": [4, 9, 10, 282, 287, 288, 289, 293, 294, 296], "entir": [4, 289, 294, 296], "submit": [4, 282, 298], "suffici": [4, 287], "recommend": [4, 7, 293], "system": [4, 5, 289, 293, 294], "adequ": [4, 132, 289, 293], "infeas": 4, "allevi": [4, 283], "prune": 4, "develop": [4, 7, 287, 298], "filter": [4, 45, 200, 201, 203, 205, 211, 214, 215, 217], "fire": [4, 32, 66, 69, 71, 72, 73], "certain": [4, 18, 20, 21, 32, 45, 66, 69, 71, 72, 73, 83, 101, 119, 125, 212, 283, 287, 288, 289, 293, 299], "illeg": 4, "move": [4, 21, 32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 130, 139, 154, 190, 213, 261, 287, 288, 290, 298, 299], "chess": 4, "combin": [4, 124, 288, 296], "grasp": 4, "releas": [4, 7, 10, 32, 66, 69, 71, 72, 73, 125, 298], "top": [4, 140, 156], "p": [4, 67], "wherein": 4, "cumul": [4, 116, 120, 140, 233, 289], "probabl": [4, 8, 40, 146, 148, 152, 154, 157, 164, 173, 187, 191, 283, 288, 298], "q": [4, 9, 142, 143, 144, 145, 147, 148, 150, 165, 166, 174, 180, 183, 188, 189, 201, 203, 204, 205, 206, 210, 211, 215, 217, 219, 225, 272, 281, 287], "flow": [4, 287, 289, 293, 294, 296], "reparameter": [4, 146, 164], "soft": [4, 210, 217, 218], "critic": [4, 8, 178, 185, 200, 202, 203, 205, 211, 212, 214, 215, 216, 217, 219, 287, 289], "clip": [4, 40, 114, 202, 219, 263, 289, 293, 294], "oppos": [4, 45], "incorrect": 4, "thought": [4, 66], "bound": [4, 17, 21, 25, 26, 32, 66, 69, 71, 72, 73, 130, 167, 168, 177, 182, 183, 186, 187, 188, 189, 190, 191, 194, 219, 283, 287, 288, 289, 299], "region": 4, "squash": [4, 290, 298], "tanh": [4, 141, 151, 154, 158, 171, 172, 173, 194, 289, 293, 294, 295, 298], "correct": [4, 104, 120, 266, 289, 290], "prob": [4, 157, 164, 289, 293], "rememb": 4, "remap": 4, "origin": [4, 8, 13, 14, 16, 17, 40, 96, 104, 109, 125, 129, 187, 190, 191, 210, 213, 214, 272, 287, 292, 294, 299], "real": [5, 191, 284, 290, 294], "histor": 5, "wa": [5, 7, 66, 69, 71, 72, 73, 125, 210, 218, 284, 288, 289, 292, 296, 298], "ceas": 5, "fork": 5, "farama": [5, 80, 81, 289, 294], "detail": [5, 6, 7, 32, 66, 69, 71, 72, 73, 123, 125, 148, 183, 200, 206, 214, 282, 288, 292, 296], "usag": [5, 7, 51, 66, 92, 152, 201, 211, 217, 220, 283, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "known": [5, 7, 8, 234, 235, 287, 288], "bc": [5, 298], "break": [5, 13, 14, 16, 21, 32, 38, 42, 53, 66, 69, 71, 72, 73, 92, 113, 130, 288, 296, 298], "face": [5, 8, 9, 299], "against": [5, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 66, 69, 71, 72, 73, 132, 177, 182, 183, 187, 188, 189, 190, 191, 289, 293], "13": [5, 10, 11, 287, 288, 289, 293, 294, 295, 296], "construct": [5, 32, 35, 38, 41, 42, 66, 69, 71, 72, 73, 132, 152, 168, 191, 213, 263, 283, 288, 289, 290, 294, 296, 299], "wrap": [5, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 66, 69, 71, 72, 73, 132, 152, 175, 178, 179, 180, 181, 184, 186, 188, 196, 225, 283, 287, 288, 289, 290, 293, 299], "best": [5, 9, 152, 293, 296, 298], "gymwrapp": [5, 69, 281, 289, 298], "feel": [5, 282, 298], "free": [5, 7, 200, 208, 214, 285, 289, 293, 298], "gladli": 5, "instruct": [6, 7, 10, 22, 51, 96, 287, 288, 289, 290, 293, 296], "prepar": [6, 289], "conda": [6, 7, 282], "assum": [6, 26, 33, 40, 41, 42, 51, 69, 72, 73, 94, 100, 109, 110, 116, 121, 127, 129, 136, 152, 153, 175, 194, 204, 206, 217, 225, 236, 237, 238, 239, 241, 242, 243, 244, 246, 287, 289, 290, 292, 294], "7": [6, 10, 27, 33, 35, 38, 41, 140, 141, 153, 154, 156, 233, 287, 288, 293, 294, 295, 296, 297, 298], "cmake": 6, "14": [6, 11, 106, 287, 288, 293, 294, 295, 296, 297], "activ": [6, 7, 9, 141, 149, 154, 158, 202, 212, 214, 283, 298], "sim": 6, "bullet": 6, "physic": [6, 7, 285, 287, 293, 294], "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 282], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": [6, 290], "y": [6, 7, 87, 153, 175, 287, 289, 293], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 49, 66, 69, 71, 72, 73, 118, 213, 293, 299], "command": [6, 7, 10, 289, 293, 294, 299], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 281], "_has_habitat": 6, "available_env": [6, 74, 75, 76, 77, 78, 79, 80, 81, 85, 86, 299], "startswith": [6, 284, 287], "oserror": 6, "load": [6, 7, 13, 14, 16, 17, 34, 35, 36, 38, 39, 40, 41, 42, 45, 51, 52, 77, 83, 279, 285, 287, 296], "libllvmlit": 6, "ionstal": 6, "pointer": [6, 67, 213, 287], "env_nam": [6, 71, 74, 76, 78, 80, 85, 287, 289, 299], "llvmlite": 6, "config": [6, 7, 109, 129, 267, 268, 269, 272, 273, 276], "var": [6, 7, 32, 66, 69, 71, 72, 73, 125, 213], "ld_preload": [6, 7], "8": [6, 7, 38, 57, 75, 141, 142, 143, 150, 154, 178, 179, 180, 187, 190, 193, 211, 287, 288, 293, 294, 295, 296, 297, 298], "bind": 6, "deactiv": [6, 7, 182], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 66, 69, 71, 72, 73, 125, 213, 296], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 288], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 51], "stand": [7, 292, 294, 299], "joint": [7, 288], "dynam": [7, 211, 289, 294], "contact": [7, 37], "engin": [7, 294], "biomechan": 7, "graphic": 7, "anim": [7, 293], "area": 7, "demand": [7, 299], "fast": [7, 9, 75, 111, 215, 287, 288, 289], "accur": [7, 51, 288, 294, 296], "articul": 7, "acquir": [7, 289], "deepmind": [7, 8, 9, 76, 77, 289], "whomev": 7, "licenc": 7, "incorpor": [7, 181, 184, 186, 290, 294], "relianc": 7, "obsolet": 7, "seri": [7, 8, 33, 59, 63, 65, 73, 105, 124, 246, 283, 284, 287, 288, 289, 293, 296, 299], "legaci": 7, "pro": [7, 282], "tip": [7, 282], "glfw": 7, "osmesa": 7, "egl": 7, "advic": [7, 299], "sudo": [7, 282], "enabl": [7, 8, 51, 152, 186, 259, 289, 293, 294, 296], "apt": [7, 293], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 54, 55, 56, 62, 64, 288, 290], "fact": [7, 8, 287, 289, 293, 294, 295, 296, 299], "workflow": [7, 178, 179, 180], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 22, 32, 45, 55, 66, 69, 71, 72, 73, 109, 127, 129, 290, 299], "binari": [7, 24, 27, 33, 91, 148, 166, 182, 183, 188, 189, 204, 225], "setup": 7, "mkdir": 7, "cd": 7, "tag": [7, 246, 251, 279], "earlier": [7, 287, 289, 290, 293, 296], "roboti": 7, "download": [7, 10, 109, 129, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299], "html": [7, 71], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": 7, "obtain": [7, 40, 66, 69, 71, 72, 73, 109, 120, 129, 140, 165, 260, 287, 289, 293], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 34, 36, 45, 53, 295], "bin": [7, 148, 183, 283], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 145, 187, 191, 287, 289, 296], "nvidia": 7, "older": [7, 11], "hack": [7, 287], "line": [7, 32, 66, 69, 71, 72, 73, 288, 293], "adatp": 7, "script": [7, 132, 272, 275, 279, 283, 284, 285, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "unnot": [7, 110], "until": [7, 21, 289, 290, 293], "complet": [7, 9, 61, 69, 92, 282, 284, 287, 289, 292], "mujoco_pi": 7, "trigger": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 288, 296], "troubleshoot": 7, "gl": 7, "h": [7, 92, 94, 112, 123, 152, 156, 246, 288, 290, 296], "eglshim": 7, "10": [7, 22, 26, 35, 38, 40, 41, 42, 43, 45, 54, 55, 64, 67, 70, 88, 89, 92, 120, 123, 140, 153, 156, 157, 175, 184, 186, 194, 201, 204, 205, 214, 215, 216, 219, 225, 227, 228, 229, 230, 233, 254, 285, 287, 288, 289, 290, 292, 293, 294, 296, 297, 298, 299], "fatal": 7, "No": 7, "directori": [7, 45, 54, 251, 285], "devel": 7, "ubuntu": 7, "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "38": [7, 287, 288, 289, 290, 294], "disappear": [7, 288, 290, 292], "libstdc": 7, "6": [7, 13, 14, 16, 17, 38, 86, 106, 141, 146, 153, 154, 158, 162, 171, 195, 272, 287, 288, 290, 293, 294, 295, 296, 297, 298, 299], "glibcxx_3": 7, "29": [7, 287, 288, 293, 294], "compil": [7, 32, 66, 69, 71, 72, 73], "libosmesa": 7, "libgcc": 7, "Then": [7, 289, 292], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 28, 32, 66, 69, 71, 72, 73, 125, 299], "job": [7, 18, 19, 20, 22], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 288, 294, 295], "114": [7, 294, 296], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 294, 296], "offscreenopenglcontext": 7, "fail": [7, 22, 26, 28, 132], "opengl": [7, 293], "global": [7, 32, 66, 69, 71, 72, 73, 165, 174, 187, 191, 225, 285, 287, 293], "cuda_visible_devic": 7, "id": [7, 23, 40, 186, 215, 249, 272], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 294], "displai": [7, 263, 285, 287, 288, 293, 294], "correctli": [7, 32, 66, 69, 71, 72, 73], "lgl": 7, "libegl": 7, "x11": [7, 293], "xlib": 7, "libx11": 7, "xorg": 7, "loop": [8, 13, 14, 16, 17, 69, 139, 181, 184, 186, 214, 263, 285, 287, 288, 292, 296], "sketch": [8, 285], "_": [8, 67, 93, 96, 97, 104, 106, 111, 123, 130, 177, 190, 195, 199, 200, 201, 203, 205, 211, 214, 215, 217, 219, 227, 228, 229, 230, 287, 288, 289, 290, 293, 294, 296, 298], "n_training_step": 8, "datapoint": [8, 45, 296], "onlin": [8, 13, 17, 92, 200, 214, 254, 279, 289, 290, 293, 296], "n_data_per_train": 8, "no_grad": [8, 32, 66, 69, 71, 72, 73, 104, 227, 228, 229, 230, 289, 290, 293], "replay_buff": [8, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 260, 275, 287, 288, 289, 293, 296], "extend": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 51, 52, 59, 63, 65, 113, 260, 285, 287, 288, 289, 290, 293, 295, 296, 298], "loss_fn": [8, 290, 298], "backward": [8, 32, 66, 69, 71, 72, 73, 130, 200, 201, 203, 205, 211, 214, 215, 216, 217, 219, 287, 289, 290, 293, 294], "zero_grad": [8, 32, 66, 69, 71, 72, 73, 285, 287, 289, 290, 293, 294], "backpropag": [8, 200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 293, 294], "differenti": [8, 45, 104, 227, 228, 229, 230, 290, 293, 294], "denomin": 8, "artifact": 8, "numer": [8, 38, 130, 151, 172, 173, 177, 182, 183, 187, 188, 189, 190, 191, 261, 289, 296, 299], "misconcept": 8, "save": [8, 32, 34, 36, 39, 66, 69, 71, 72, 73, 213, 245, 263, 285, 293], "freed": 8, "appear": [8, 33, 294, 296], "compuat": 8, "twice": 8, "fix": [8, 121, 201, 217, 288, 294, 299], "retain_graph": 8, "discuss": [8, 9, 293], "inplac": [8, 32, 34, 36, 39, 66, 69, 71, 72, 73, 125, 287], "accumul": 8, "onto": [8, 33, 136, 177, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 290, 294], "exclud": [8, 51, 92, 98, 139, 165, 293, 296], "forward": [8, 32, 66, 69, 71, 72, 73, 92, 93, 95, 96, 98, 99, 100, 101, 103, 104, 106, 108, 109, 110, 111, 113, 116, 117, 119, 120, 121, 122, 124, 127, 128, 130, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 158, 159, 161, 162, 163, 165, 167, 168, 170, 174, 175, 181, 183, 184, 186, 189, 190, 191, 194, 195, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 227, 228, 229, 230, 231, 284, 294, 298], "submodul": [8, 32, 66, 69, 71, 72, 73, 82, 213], "param": [8, 32, 40, 66, 69, 70, 71, 72, 73, 95, 104, 111, 124, 146, 148, 157, 171, 187, 190, 193, 195, 213, 221, 224, 227, 228, 229, 230, 231, 287, 293, 294, 295, 298], "grad": [8, 32, 66, 69, 71, 72, 73, 287, 289], "whose": [8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 161, 165, 190, 213], "strictli": [8, 32, 66, 69, 71, 72, 73, 125, 287, 289], "neg": [8, 13, 14, 16, 17, 18, 19, 20, 21, 35, 41, 57, 92, 100, 110, 126, 207, 284, 289, 293, 294], "ask": [8, 287, 289, 290, 293, 295, 299], "much": [8, 35, 41, 57, 212, 214, 289, 293, 294, 296, 299], "render": [8, 259, 287, 288, 289], "upon": [8, 294], "factor": [8, 32, 113, 151, 160, 172, 173, 181, 184, 186, 201, 206, 207, 209, 218, 233, 287, 288, 293, 296, 299], "fit": [8, 11, 106, 284, 285, 287], "everi": [8, 17, 26, 28, 32, 33, 62, 66, 69, 71, 72, 73, 120, 130, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 158, 161, 162, 163, 167, 168, 170, 175, 181, 183, 184, 186, 189, 194, 197, 263, 285, 287, 288, 289, 290, 293, 294], "bottlneck": 8, "affect": [8, 32, 66, 69, 71, 72, 73, 124, 125, 132, 227, 228, 229, 230], "brax": [8, 74, 75, 111, 299], "jax": [8, 11], "improperli": 8, "item": [8, 13, 26, 28, 32, 38, 45, 53, 66, 69, 71, 72, 73, 99, 125, 157, 203, 204, 254, 284, 285, 287, 289, 290, 293, 294, 296], "underli": [8, 213, 294], "tedeiou": 8, "priorit": [8, 35, 41, 57, 201, 203, 204, 205, 211, 215, 217, 219, 287, 288], "amount": [8, 186, 288, 296], "isn": [8, 34, 36, 39, 182, 190, 293], "contigu": [8, 66, 69, 71, 72, 73, 136, 289, 293, 294, 296, 298, 299], "costli": [8, 294], "concaten": [8, 21, 30, 31, 92, 93, 106, 124, 154, 193, 287, 288, 293, 294, 296, 299], "constitut": [8, 288, 293, 294], "plain": 8, "profil": 8, "fulli": [8, 32, 66, 69, 71, 72, 73, 288, 294, 296], "frequent": [8, 296], "program": [8, 211, 299], "functorch": [8, 10], "incl": 8, "suit": [8, 77, 289, 299], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 190, 193, 213, 293, 294, 298], "new_shap": 8, "content": [8, 13, 14, 16, 26, 28, 35, 38, 41, 42, 61, 71, 141, 154, 158, 213, 289, 294, 298], "lost": 8, "permut": [8, 61, 298, 299], "idea": [9, 215, 285, 290, 293], "introductori": 9, "intro": [9, 289, 290], "dai": [9, 298], "2022": [9, 10, 294, 298], "spin": [9, 299], "deep": [9, 92, 142, 143, 144, 145, 147, 186, 200, 210, 217, 218, 287], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 106, 130, 287, 288, 289, 290], "reddit": 9, "reagent": 9, "orient": [9, 299], "baselines3": 9, "tf": 9, "bandit": [9, 87], "tensorflow": [9, 157], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "sequenti": [9, 32, 66, 69, 71, 72, 73, 104, 192, 193, 214, 283, 289, 290, 293, 294, 295, 299], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 298], "grade": 9, "factori": [9, 43], "throughput": [9, 287], "cherri": 9, "jaxrl": 9, "space": [9, 33, 44, 66, 96, 136, 148, 163, 166, 177, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 204, 205, 219, 225, 283, 288, 289, 290, 293, 294, 298, 299], "mbrl": [9, 70, 283], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 294], "dist": [10, 157, 164], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 289, 290, 293], "notebook": [10, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299], "24": [10, 287, 288, 289, 294], "11": [10, 27, 33, 45, 54, 55, 64, 67, 123, 140, 156, 287, 288, 289, 293, 294, 296, 297, 298], "12": [10, 54, 55, 64, 287, 288, 289, 290, 293, 294, 296, 297], "pip": [10, 52, 293, 298, 299], "pip3": [10, 289, 290, 293], "extra": [10, 32, 66, 69, 71, 72, 73, 92, 130, 139, 283, 289, 290, 296], "url": 10, "org": [10, 35, 57, 92, 109, 127, 142, 143, 144, 145, 148, 149, 150, 156, 157, 160, 162, 163, 165, 167, 168, 174, 183, 186, 200, 201, 206, 207, 208, 209, 210, 211, 214, 216, 217, 218, 227, 232, 240, 295], "whl": 10, "u": [10, 52, 294], "There": [10, 152, 283, 285, 289, 290, 293, 294, 296, 299], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 213], "union": [11, 13, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 42, 44, 46, 47, 51, 52, 57, 66, 69, 71, 72, 73, 91, 92, 93, 94, 96, 97, 100, 102, 103, 106, 107, 109, 110, 112, 113, 114, 115, 116, 119, 120, 122, 123, 124, 125, 127, 129, 130, 139, 141, 142, 143, 144, 145, 146, 148, 150, 153, 154, 157, 158, 159, 160, 164, 165, 166, 171, 172, 173, 174, 190, 205, 210, 213, 215, 218, 240, 257, 259, 260, 268, 269, 272, 273, 275, 276, 277, 278, 279], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 57, 66, 68, 69, 71, 72, 73, 76, 82, 87, 91, 92, 93, 94, 96, 97, 100, 102, 103, 104, 106, 107, 109, 110, 112, 113, 114, 115, 116, 119, 120, 122, 123, 124, 125, 127, 129, 130, 133, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 165, 166, 174, 177, 182, 183, 187, 188, 189, 190, 191, 194, 195, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 222, 225, 226, 227, 228, 229, 230, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 267, 272, 273, 279, 288, 289], "callabl": [11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 51, 52, 66, 67, 69, 70, 71, 72, 73, 83, 199, 213, 268, 269, 277, 278, 279, 288], "from_vers": 11, "to_vers": 11, "intersect": 11, "eg": [11, 54, 55, 56, 62, 64, 96], "vs": [11, 152, 153, 298], "longer": [11, 288, 293, 296], "self": [11, 26, 28, 32, 34, 36, 39, 66, 69, 70, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 140, 148, 156, 165, 174, 181, 184, 190, 195, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225, 227, 228, 229, 230, 231, 285, 287, 288, 294, 298], "x": [11, 23, 26, 32, 38, 40, 104, 123, 141, 148, 150, 152, 153, 154, 156, 158, 175, 182, 188, 197, 199, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 263, 287, 289, 294, 296, 298], "23": [11, 287, 288, 294], "lambda": [11, 13, 14, 16, 17, 21, 22, 38, 66, 67, 69, 71, 72, 73, 83, 104, 121, 175, 182, 188, 207, 209, 227, 230, 238, 239, 243, 244, 275, 284, 287, 288, 293, 296, 298, 299], "import_modul": 11, "27": [11, 288, 289, 290, 294, 296, 297], "get_class_that_defined_method": 11, "f": [11, 69, 199, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 287, 288, 289, 290, 293, 294, 296, 299], "otherwis": [11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 43, 44, 45, 46, 47, 51, 53, 66, 69, 71, 72, 73, 96, 106, 121, 125, 130, 151, 158, 172, 173, 188, 194, 201, 208, 213, 217, 259, 260, 285, 287, 288, 289, 290, 294, 299], "module_set": 11, "arg": [12, 14, 26, 28, 32, 54, 55, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 95, 109, 118, 124, 125, 126, 128, 129, 140, 141, 147, 152, 154, 155, 156, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 227, 228, 229, 230, 231, 253, 256, 260, 263, 279, 288], "kwd": 12, "policy_weight": [12, 13, 14, 16, 17, 19, 20], "tensordictbas": [12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 32, 41, 42, 51, 52, 66, 68, 69, 71, 72, 73, 92, 93, 95, 98, 99, 100, 103, 104, 105, 108, 110, 111, 113, 116, 117, 119, 120, 121, 122, 124, 128, 130, 139, 140, 152, 155, 156, 181, 183, 184, 186, 189, 190, 191, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 217, 219, 225, 226, 227, 228, 229, 230, 231, 263, 287, 294], "udpdat": [12, 13, 14, 16, 17, 19, 20], "create_env_fn": [13, 14, 16, 17, 18, 19, 20, 21, 67, 72, 73, 287, 298], "int": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 76, 92, 93, 94, 96, 100, 101, 105, 106, 109, 110, 112, 118, 119, 122, 125, 126, 127, 129, 132, 136, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 160, 162, 163, 165, 166, 167, 168, 170, 171, 172, 174, 175, 181, 182, 183, 184, 186, 187, 189, 190, 191, 200, 201, 202, 205, 207, 208, 212, 213, 214, 215, 219, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 254, 255, 256, 259, 260, 263, 265, 272, 273, 277, 278, 279, 294], "200": [13, 14, 16, 17, 21, 32, 66, 69, 71, 72, 73, 88, 89, 113, 142, 143, 149, 167, 168, 287, 290, 294], "total_fram": [13, 14, 16, 17, 18, 19, 20, 21, 92, 113, 263, 266, 275, 285, 287, 288, 289, 290, 293, 296, 298], "create_env_kwarg": [13, 14, 16, 17, 67, 71, 72, 73, 287], "dict": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 39, 66, 67, 69, 71, 72, 73, 104, 121, 125, 130, 141, 142, 143, 144, 145, 150, 153, 154, 187, 191, 250, 251, 259, 268, 269, 272, 277, 278, 279, 287, 288, 289, 299], "postproc": [13, 14, 16, 17, 18, 19, 20, 21, 113, 288, 296], "interactiontyp": [13, 16, 18, 19, 20, 21, 134, 138, 187, 191, 259], "exploration_mod": [13, 16, 18, 19, 20, 281, 283], "preemptive_threshold": [13, 14], "float": [13, 14, 25, 27, 32, 33, 35, 40, 41, 46, 57, 66, 69, 71, 72, 73, 95, 97, 104, 106, 109, 113, 114, 115, 120, 121, 123, 124, 125, 127, 129, 130, 146, 149, 151, 154, 157, 159, 160, 167, 168, 171, 173, 181, 190, 194, 197, 198, 199, 200, 201, 205, 208, 209, 210, 211, 213, 215, 217, 218, 219, 226, 232, 233, 234, 235, 236, 237, 238, 239, 240, 261, 287, 288, 296, 299], "datacollector": [13, 14, 16, 17, 187, 191, 214, 289], "recept": 13, "safe": [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 177, 181, 182, 183, 186, 187, 188, 189, 190, 191, 193, 283, 298], "env_mak": [13, 14, 16, 21, 275, 299], "50": [13, 14, 16, 21, 37, 40, 288, 289, 290, 292, 293, 294, 297], "linear": [13, 14, 16, 17, 21, 32, 66, 69, 70, 71, 72, 73, 95, 104, 109, 121, 124, 125, 127, 129, 140, 141, 148, 154, 156, 158, 159, 160, 161, 166, 167, 168, 177, 178, 179, 180, 184, 185, 186, 187, 188, 190, 193, 195, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225, 227, 228, 229, 230, 275, 283, 288, 292, 295, 298], "2000": [13, 14, 16, 45, 289, 296], "enumer": [13, 14, 16, 21, 32, 38, 42, 66, 69, 71, 72, 73, 220, 284, 287, 288, 289, 290, 296, 298], "int64": [13, 14, 16, 24, 27, 30, 31, 33, 34, 36, 37, 40, 41, 43, 45, 53, 66, 69, 71, 72, 73, 87, 113, 148, 166, 182, 183, 186, 188, 189, 283, 289, 290, 294, 296, 298, 299], "step_count": [13, 14, 16, 66, 69, 71, 72, 73, 119, 289, 290, 298], "shutdown": [13, 14, 16, 17, 21, 287, 298], "del": [13, 14, 16, 287, 289, 292, 298, 299], "randompolici": [13, 14, 16, 18, 19, 20, 22, 92, 113, 281, 296], "total": [13, 14, 16, 17, 18, 19, 20, 21, 24, 30, 31, 33, 69, 202, 212, 214, 254, 256, 259, 263, 266, 267, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299], "lifespan": [13, 14, 16, 18, 19, 20, 288], "divis": [13, 14, 16, 18, 19, 20, 293], "endless": [13, 14, 16, 18, 19, 20], "long": [13, 14, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 44, 46, 47, 96, 290, 296], "dictionari": [13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 66, 69, 71, 72, 73, 121, 125, 187, 191, 259, 277, 278, 279, 285, 288, 289, 294, 299], "span": [13, 14, 16, 17, 18, 19, 20, 21], "unless": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 61, 66, 69, 71, 72, 73, 289], "n_step": [13, 14, 16, 17, 18, 19, 20, 21, 32, 288, 289, 293], "independ": [13, 14, 16, 17, 18, 19, 20, 21, 124, 126, 158, 284, 285, 287, 288, 293, 296, 298], "ignor": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 46, 47, 66, 69, 71, 72, 73, 96, 98, 117, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 157, 158, 161, 162, 163, 167, 168, 170, 175, 181, 183, 184, 186, 189, 194, 197, 213, 227, 296, 299], "mainli": [13, 14, 16, 17, 18, 19, 20, 21, 40, 283, 293, 294], "post": [13, 14, 16, 18, 19, 20, 21, 32, 66, 69, 71, 72, 73], "multistep": [13, 14, 16, 18, 19, 20, 21, 281, 288], "accord": [13, 14, 16, 17, 18, 19, 20, 21, 40, 106, 115, 151, 159, 167, 172, 173, 225, 283, 294, 296], "explorationtyp": [13, 14, 16, 20, 21, 213, 259, 287, 288, 289, 290, 298], "return_same_td": [13, 14, 16], "cautious": [13, 14, 16, 214], "whole": [13, 14, 16, 26, 28, 32, 45, 66, 69, 71, 72, 73, 125, 254, 287, 289], "boolm": [13, 14], "update_policy_weight_": [13, 14], "sync": [13, 14, 18, 19, 20, 21, 265, 275, 285, 287, 298], "async": [13, 14, 18, 19, 20, 21, 287, 298], "ratio": [13, 14, 40, 287, 289], "finish": [13, 14, 21, 113], "rest": [13, 14, 283, 289, 290, 294, 298], "earli": [13, 14, 298], "load_state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 66, 69, 71, 72, 73, 125, 130, 285, 287], "state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 66, 69, 71, 72, 73, 125, 130, 213, 279, 285, 287, 288, 299], "ordereddict": [13, 14, 16, 17, 21, 32, 66, 69, 71, 72, 73, 125, 130, 288], "form": [13, 14, 17, 32, 35, 38, 41, 42, 51, 52, 66, 69, 71, 72, 73, 130, 152, 199, 200, 202, 212, 214, 263, 283, 293], "worker0": [13, 14, 17], "state_dict0": [13, 14, 17], "worker1": [13, 14, 17], "state_dict1": [13, 14, 17], "reset_idx": [13, 14, 17], "static_se": [13, 14, 16, 17, 21, 66, 69, 71, 72, 73, 125], "integ": [13, 14, 16, 17, 23, 30, 31, 32, 33, 40, 47, 62, 66, 69, 71, 72, 73, 101, 106, 119, 141, 154, 158, 211, 217, 296], "increment": [13, 14, 16, 17, 66, 69, 71, 72, 73, 119, 212], "env_fn": [13, 14, 16, 17, 67, 277, 278], "env_fn_parallel": [13, 14, 16, 17], "300": [13, 14, 16, 17, 144, 145, 294], "out_se": [13, 14, 16, 17, 299], "shut": [13, 14, 16, 17], "irrevers": [13, 14, 17], "kwarg": [14, 16, 17, 21, 26, 32, 51, 54, 55, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 95, 109, 118, 121, 124, 125, 126, 128, 129, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 154, 155, 156, 158, 164, 171, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 221, 225, 226, 227, 228, 229, 230, 231, 246, 250, 251, 253, 256, 263, 268, 269, 272, 276, 277, 278, 284, 289, 293], "tupl": [15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 51, 52, 66, 69, 71, 72, 73, 91, 92, 93, 94, 96, 97, 100, 102, 103, 104, 106, 107, 110, 112, 113, 114, 115, 116, 119, 120, 122, 123, 124, 130, 139, 142, 147, 148, 152, 153, 154, 158, 161, 165, 166, 183, 188, 189, 194, 200, 201, 203, 205, 207, 211, 213, 214, 215, 216, 217, 219, 227, 228, 229, 230, 257, 259, 261, 270, 271, 287], "rand": [15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 70, 75, 86, 140, 156, 200, 201, 203, 204, 205, 211, 214, 215, 217, 219, 294, 298, 299], "describ": [15, 44, 93, 124, 171, 172, 249, 284, 287, 289, 293, 294, 299], "tensor_spec": [15, 205, 214, 216], "boundedtensorspec": [15, 22, 26, 66, 184, 186, 187, 194, 200, 201, 203, 211, 214, 215, 217, 219, 281, 289, 293, 294, 298, 299], "cube": 15, "envcreat": [16, 22, 275, 276, 279, 281, 287, 288, 298, 299], "interruptor": 16, "_interruptor": 16, "outsid": [16, 293], "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "stop": [16, 21, 40, 66, 69, 71, 72, 73, 289, 293, 298, 299], "chunk": 16, "policy_state_dict": 16, "env_state_dict": 16, "close": [16, 17, 69, 71, 104, 200, 202, 212, 214, 287, 292, 294, 298], "pin_memori": [17, 35, 38, 41, 42, 51, 52, 72, 73, 108, 287, 298], "regular": [17, 34, 36, 39, 166, 183, 188, 189, 190, 191, 206, 265, 281, 285, 287, 288, 296, 299], "mere": 17, "greater": [17, 152, 287, 288, 298], "signal": [17, 51, 119, 284, 287, 289, 293, 296], "sent": [17, 54, 55, 64, 130], "server": 17, "length": [17, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 53, 72, 73, 110, 130, 140, 141, 142, 144, 147, 154, 156, 158, 177, 190, 195, 254, 260, 287, 289, 290, 294, 296, 299], "postprocessor": 17, "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 263], "string": [18, 19, 20, 32, 37, 45, 53, 66, 69, 71, 72, 73, 83, 109, 129, 152, 187, 188, 199, 245, 262, 272, 284, 287, 289, 290], "respect": [18, 19, 20, 32, 66, 69, 71, 72, 73, 91, 95, 109, 110, 121, 124, 125, 127, 129, 168, 190, 195, 213, 258, 289, 290, 293], "copi": [18, 19, 20, 21, 32, 34, 36, 39, 45, 66, 69, 71, 72, 73, 111, 125, 139, 152, 213, 284, 287, 288, 290, 296], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 282, 288, 289, 292, 296], "serv": [18, 20, 21, 84, 296, 299], "fashion": [18, 20, 21], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 20, 21, 66, 69, 71, 72, 73, 100], "seen": [18, 20, 21, 284, 287, 288, 290, 293, 296], "turn": [18, 20, 21, 102, 126, 182, 259, 284, 287, 288, 290, 294, 295], "mp": [18, 19, 20, 67, 130], "submitit_delai": [18, 22], "former": [18, 19, 20, 35, 38, 41, 42, 51, 66, 69, 71, 72, 73, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 158, 161, 162, 163, 167, 168, 170, 175, 181, 183, 184, 186, 189, 194, 197, 287], "whilst": [18, 19, 20], "latter": [18, 19, 20, 32, 51, 66, 69, 71, 72, 73, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 158, 161, 162, 163, 167, 168, 170, 175, 181, 183, 184, 186, 189, 194, 197, 213, 214, 277, 278], "homonym": [18, 19, 20, 294], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 287], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 33, 187, 191], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 277, 278, 287, 288], "coordin": 21, "hood": [21, 294], "init": [21, 32, 66, 69, 71, 72, 73, 287, 288, 289], "autodetect": 21, "advanc": [21, 35, 38, 41, 42, 296], "similarli": [21, 32, 61, 66, 69, 71, 72, 73, 192, 193, 211, 299], "num_cpu": 21, "num_gpu": 21, "1024": [21, 288, 296], "equat": [21, 186, 199, 202, 218, 289, 294], "exce": [21, 289, 296], "indefinit": [21, 50], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 263, 287, 289, 290], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "32": [22, 26, 88, 89, 141, 142, 143, 150, 154, 158, 162, 163, 165, 174, 225, 287, 288, 290, 294, 295, 296, 297, 298, 299], "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": 22, "jump": 22, "host": [22, 32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213], "wherea": [22, 96, 213, 285], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": 22, "default_slurm_conf_main": 22, "default_slurm_conf": 22, "__name__": [22, 67, 288], "__main__": [22, 67], "rollout_tensordict": 23, "max": [23, 33, 41, 45, 57, 96, 122, 171, 172, 173, 186, 201, 202, 205, 215, 217, 287, 289, 290, 293], "durat": [23, 293], "meta": [23, 44, 51, 68, 285, 289, 293, 296], "aren": [23, 290], "discret": [24, 27, 30, 31, 33, 47, 66, 96, 164, 166, 205, 206, 283, 288, 289, 293, 299], "assert_is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "belong": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 130, 283, 287, 293], "encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 96, 163, 164, 167, 199, 283, 288, 289, 290, 294, 296], "val": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 298], "ndarrai": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 69, 186, 194], "ignore_devic": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "np": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 69, 194, 294], "cast": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 53, 66, 69, 71, 72, 73, 95, 104, 109, 121, 124, 125, 127, 129, 130, 190, 213, 272, 299], "compli": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "least": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "complient": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "singleton": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 141, 154, 169, 170], "classmethod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 127], "implements_for_spec": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "torch_funct": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "overrid": [24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 44, 46, 47, 279, 283], "tensor_to_index": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 299], "project": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 96, 152, 177, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 283, 298, 299], "back": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 44, 46, 47, 177, 182, 183, 187, 188, 189, 190, 191, 289, 293, 294, 296], "uniform": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 41, 44, 46, 47, 57], "unbound": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 121, 136, 294, 296], "squeez": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 92, 118, 141, 169, 170, 287, 294, 296], "dim": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 92, 93, 121, 126, 130, 153, 170, 175, 279, 288, 289, 294, 296], "to_numpi": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "transformed_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 124, 125, 161, 171, 279], "check_spec_encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "to_one_hot": [24, 27, 30], "hot": [24, 27, 30, 31, 33, 96, 148, 164, 166, 182, 183, 188, 189, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225, 290], "to_one_hot_spec": [24, 27, 30], "onehotdiscretetensorspec": [24, 27, 148, 166, 182, 188, 204, 205, 225, 281, 283], "convert": [24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 66, 69, 71, 72, 73, 95, 97, 109, 121, 124, 125, 127, 129, 130, 190, 199, 213, 287, 288, 289, 294, 296], "type_check": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "fill": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 121, 152, 290, 294, 295], "upper": 25, "unnam": 26, "effect": [26, 32, 66, 69, 71, 72, 73, 92, 116, 125, 263, 287, 296, 299], "pixels_spec": 26, "observation_vector_spec": 26, "33": [26, 32, 66, 69, 71, 72, 73, 141, 154, 288, 294], "composite_spec": 26, "observation_vector": [26, 93, 272, 287], "randn": [26, 34, 36, 39, 54, 55, 64, 106, 136, 148, 153, 157, 161, 164, 166, 177, 178, 179, 180, 182, 187, 188, 190, 193, 194, 195, 200, 201, 203, 204, 205, 211, 214, 215, 216, 217, 219, 227, 228, 229, 230, 262, 283, 298, 299], "td_project": 26, "include_nest": [26, 28], "leaves_onli": [26, 28], "itemsview": 26, "immedi": [26, 28, 32, 66, 69, 71, 72, 73, 226, 293], "children": [26, 28, 32, 66, 69, 71, 72, 73], "keysview": [26, 28], "reflect": [26, 28, 139, 213, 266, 288, 289, 290, 293], "lock_": [26, 28], "recurs": [26, 28, 32, 48, 49, 66, 69, 71, 72, 73, 213], "succeed": [26, 28, 289, 293, 294], "selected_kei": [26, 28, 117, 287], "unlock_": [26, 28], "unlock": [26, 28], "valuesview": 26, "onehottensorspec": 27, "categor": [27, 31, 33, 148, 164, 166, 182, 183, 188, 189, 204, 225, 290], "action_valu": [27, 33, 147, 148, 166, 182, 183, 188, 189, 213, 225, 283, 290], "arang": [27, 33, 148, 157, 182, 254, 283, 296], "argmax": [27, 148, 166, 183, 189], "chosen_action_valu": [27, 33, 165, 166, 174, 188, 189, 225, 283, 290], "outcom": [27, 33, 146, 171], "lazi": [28, 29, 49, 66, 69, 71, 72, 73, 109, 127, 159, 192, 193, 287, 288, 292, 296, 299], "represent": [28, 29, 32, 66, 69, 71, 72, 73, 109, 127, 129, 287, 294, 295, 299], "drawn": [28, 29, 121, 187, 191, 289, 293], "lazystackedtensordict": [28, 66, 69, 70, 71, 72, 73, 292, 298], "heterogen": [28, 29, 132, 158, 287, 288], "semant": [28, 29, 283], "thrown": [29, 32, 66, 69, 71, 72, 73, 296], "nvec": [30, 31], "cardin": [30, 31, 148, 166, 182, 183, 189, 289], "ax": [30, 159, 160], "m": [30, 32, 66, 69, 71, 72, 73, 96, 191, 283, 288, 294], "ts": [30, 31], "multionehotdiscretetensorspec": [30, 204, 225, 281], "use_regist": [31, 33], "to_categor": [31, 33], "to_categorical_spec": [31, 33], "multidiscretetensorspec": [31, 281], "gamma": [32, 113, 156, 200, 201, 203, 204, 205, 206, 207, 209, 211, 213, 214, 215, 216, 217, 219, 220, 221, 225, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 275, 284, 287, 288, 289, 293, 298], "sutton": [32, 284, 293], "1988": 32, "predict": [32, 40, 149, 155, 156, 196, 206, 208, 209, 226, 283, 287, 288], "tempor": [32, 152, 156, 228, 229, 234, 235], "44": [32, 287, 288, 290, 293, 294, 296], "discount": [32, 67, 113, 201, 206, 207, 209, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 284, 288, 289, 293], "ahead": [32, 299], "add_modul": [32, 66, 69, 71, 72, 73], "child": [32, 66, 69, 71, 72, 73], "fn": [32, 37, 66, 69, 71, 72, 73, 161, 277, 278], "init_weight": [32, 66, 69, 71, 72, 73], "fill_": [32, 66, 69, 71, 72, 73, 288, 290, 299], "net": [32, 66, 69, 71, 72, 73, 153, 158, 200, 201, 205, 211, 214, 215, 216, 217, 272, 275, 288, 294, 295, 298], "in_featur": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 141, 142, 143, 144, 145, 153, 154, 158, 159, 160, 178, 190, 204, 213, 298], "out_featur": [32, 66, 69, 70, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 140, 141, 142, 143, 144, 145, 149, 150, 152, 153, 154, 156, 158, 159, 160, 178, 182, 190, 204, 213, 283, 287, 290, 298], "bia": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 141, 149, 152, 154, 158, 159, 160, 161, 184, 186, 190, 197, 198, 199, 213, 284, 287, 288, 289, 290, 293, 298], "requires_grad": [32, 66, 69, 71, 72, 73, 104], "bfloat16": [32, 66, 69, 71, 72, 73], "datatyp": [32, 66, 69, 71, 72, 73, 213, 296], "member": [32, 66, 69, 71, 72, 73, 213], "xdoctest": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213], "skip": [32, 66, 69, 71, 72, 73, 101, 125, 132, 187, 191, 213, 227, 228, 229, 230, 245, 246, 256, 259, 287, 288, 289, 294], "buf": [32, 66, 69, 71, 72, 73], "20l": [32, 66, 69, 71, 72, 73, 213], "1l": [32, 66, 69, 71, 72, 73, 213], "5l": [32, 66, 69, 71, 72, 73, 213], "__call__": [32, 37, 66, 69, 71, 72, 73, 191, 285], "associ": [32, 66, 69, 71, 72, 73, 167, 213, 279, 287, 296], "doubl": [32, 46, 66, 69, 71, 72, 73, 95, 97, 109, 121, 124, 125, 127, 129, 190, 204, 206, 210, 213, 215, 218, 225, 287, 288, 289, 290, 299], "eval": [32, 66, 69, 71, 72, 73, 125, 130, 287, 288, 289], "evalu": [32, 66, 69, 71, 72, 73, 125, 146, 157, 164, 173, 215, 268, 269, 288, 289], "dropout": [32, 66, 69, 71, 72, 73, 125, 152, 154, 290], "batchnorm": [32, 66, 69, 71, 72, 73, 125, 213], "disabl": [32, 66, 69, 71, 72, 73, 125, 151, 173, 287], "comparison": [32, 53, 66, 69, 71, 72, 73, 125, 213, 287, 288], "similar": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 128, 129, 130, 178, 180, 187, 190, 191, 213, 284, 287, 288, 289, 290, 294, 299], "confus": [32, 66, 69, 71, 72, 73, 125], "extra_repr": [32, 66, 69, 71, 72, 73], "nontermin": 32, "original_reward": 32, "newli": 32, "OR": 32, "reshap": [32, 152, 154, 289, 293], "get_buff": [32, 66, 69, 71, 72, 73], "throw": [32, 66, 69, 71, 72, 73, 299], "docstr": [32, 66, 69, 71, 72, 73], "get_submodul": [32, 66, 69, 71, 72, 73], "explan": [32, 66, 69, 71, 72, 73], "qualifi": [32, 66, 69, 71, 72, 73], "referenc": [32, 66, 69, 71, 72, 73], "attributeerror": [32, 66, 69, 71, 72, 73], "invalid": [32, 66, 69, 71, 72, 73, 157], "resolv": [32, 66, 69, 71, 72, 73], "get_extra_st": [32, 66, 69, 71, 72, 73, 130], "set_extra_st": [32, 66, 69, 71, 72, 73, 130], "picklabl": [32, 66, 69, 71, 72, 73, 130], "ensur": [32, 35, 41, 57, 61, 66, 69, 71, 72, 73, 92, 109, 127, 130, 182, 283, 288, 289, 294, 296], "guarante": [32, 54, 55, 56, 62, 64, 66, 69, 71, 72, 73, 130, 298], "pickl": [32, 66, 69, 71, 72, 73, 130], "get_paramet": [32, 66, 69, 71, 72, 73], "sai": [32, 66, 69, 71, 72, 73, 295, 299], "net_b": [32, 66, 69, 71, 72, 73], "net_c": [32, 66, 69, 71, 72, 73], "conv": [32, 66, 69, 71, 72, 73, 141, 288], "conv2d": [32, 66, 69, 71, 72, 73, 141, 298], "kernel_s": [32, 66, 69, 71, 72, 73, 141, 142, 143, 162, 288, 298], "stride": [32, 66, 69, 71, 72, 73, 141, 142, 143, 150, 288, 298], "diagram": [32, 66, 69, 71, 72, 73], "show": [32, 66, 69, 71, 72, 73, 158, 283, 287, 289, 290, 293, 294, 296, 298], "itself": [32, 66, 69, 71, 72, 73, 82, 213, 289], "degre": [32, 66, 69, 71, 72, 73], "named_modul": [32, 66, 69, 71, 72, 73], "o": [32, 66, 69, 71, 72, 73], "transit": [32, 51, 66, 69, 71, 72, 73, 196, 287, 290, 294, 296], "half": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213, 287], "ipu": [32, 66, 69, 71, 72, 73], "strict": [32, 66, 69, 71, 72, 73, 125], "descend": [32, 66, 69, 71, 72, 73, 125], "persist": [32, 66, 69, 71, 72, 73, 125, 139, 213], "enforc": [32, 61, 66, 69, 71, 72, 73, 125, 192, 294], "preserv": [32, 66, 69, 71, 72, 73, 125], "missing_kei": [32, 66, 69, 71, 72, 73, 125], "unexpected_kei": [32, 66, 69, 71, 72, 73, 125], "namedtupl": [32, 66, 69, 71, 72, 73, 125], "duplic": [32, 61, 66, 69, 71, 72, 73, 204, 206, 213, 225], "l": [32, 66, 69, 71, 72, 73, 226, 289, 294], "idx": [32, 66, 69, 71, 72, 73], "named_buff": [32, 66, 69, 71, 72, 73], "remove_dupl": [32, 66, 69, 71, 72, 73, 213], "prepend": [32, 66, 69, 71, 72, 73, 213], "running_var": [32, 66, 69, 71, 72, 73], "named_children": [32, 66, 69, 71, 72, 73], "conv4": [32, 66, 69, 71, 72, 73], "conv5": [32, 66, 69, 71, 72, 73], "memo": [32, 66, 69, 71, 72, 73], "named_paramet": [32, 66, 69, 71, 72, 73, 104, 213], "register_backward_hook": [32, 66, 69, 71, 72, 73], "removablehandl": [32, 66, 69, 71, 72, 73], "deprec": [32, 66, 69, 71, 72, 73, 125, 133, 137, 147, 200, 201, 202, 204, 205, 206, 211, 212, 214, 215, 216, 217, 225, 227, 228, 229, 230, 299], "favor": [32, 66, 69, 71, 72, 73, 289], "register_full_backward_hook": [32, 66, 69, 71, 72, 73], "register_buff": [32, 66, 69, 71, 72, 73, 213], "running_mean": [32, 66, 69, 71, 72, 73, 213], "alongsid": [32, 66, 69, 71, 72, 73, 213, 293], "num_featur": [32, 66, 69, 71, 72, 73, 213], "register_forward_hook": [32, 66, 69, 71, 72, 73, 148, 166], "with_kwarg": [32, 66, 69, 71, 72, 73], "always_cal": [32, 66, 69, 71, 72, 73], "posit": [32, 35, 38, 41, 42, 51, 52, 66, 69, 71, 72, 73, 100, 101, 118, 119, 122, 125, 126, 161, 284, 289, 293, 294, 296], "signatur": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213, 284, 287, 294], "register_module_forward_hook": [32, 66, 69, 71, 72, 73], "regardless": [32, 66, 69, 71, 72, 73, 202, 212, 214], "register_forward_pre_hook": [32, 66, 69, 71, 72, 73], "invok": [32, 66, 69, 71, 72, 73], "And": [32, 66, 69, 71, 72, 73], "forward_pr": [32, 66, 69, 71, 72, 73], "register_module_forward_pre_hook": [32, 66, 69, 71, 72, 73], "grad_input": [32, 66, 69, 71, 72, 73], "grad_output": [32, 66, 69, 71, 72, 73], "subsequ": [32, 66, 69, 71, 72, 73, 290], "technic": [32, 66, 69, 71, 72, 73, 288, 290], "caller": [32, 66, 69, 71, 72, 73], "register_module_full_backward_hook": [32, 66, 69, 71, 72, 73], "register_full_backward_pre_hook": [32, 66, 69, 71, 72, 73], "backward_pr": [32, 66, 69, 71, 72, 73], "register_module_full_backward_pre_hook": [32, 66, 69, 71, 72, 73], "register_load_state_dict_post_hook": [32, 66, 69, 71, 72, 73], "incompatible_kei": [32, 66, 69, 71, 72, 73], "clear": [32, 66, 69, 71, 72, 73, 255], "register_modul": [32, 66, 69, 71, 72, 73, 285], "alia": [32, 66, 69, 71, 72, 73], "register_paramet": [32, 66, 69, 71, 72, 73], "register_state_dict_pre_hook": [32, 66, 69, 71, 72, 73], "keep_var": [32, 66, 69, 71, 72, 73, 125], "made": [32, 54, 55, 56, 62, 64, 66, 69, 71, 72, 73, 186, 204, 213, 225, 287, 288, 290, 293, 295], "requires_grad_": [32, 66, 69, 71, 72, 73], "autograd": [32, 66, 69, 71, 72, 73, 125], "freez": [32, 66, 69, 71, 72, 73], "finetun": [32, 66, 69, 71, 72, 73], "gan": [32, 66, 69, 71, 72, 73], "share_memori": [32, 66, 67, 69, 71, 72, 73, 287], "share_memory_": [32, 66, 69, 71, 72, 73, 298], "destin": [32, 34, 36, 39, 66, 69, 71, 72, 73, 125, 127, 139], "averag": [32, 66, 69, 71, 72, 73, 125, 130, 186, 207, 208, 261, 287, 289], "shallow": [32, 66, 69, 71, 72, 73, 125, 290], "pleas": [32, 66, 69, 71, 72, 73, 125, 282], "detach": [32, 66, 69, 71, 72, 73, 125, 213, 227, 228, 229, 230, 287], "non_block": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213], "memory_format": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213], "channels_last": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213], "complex": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213, 287, 288], "integr": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 145, 152, 156, 190, 213, 283, 293, 294, 295], "unchang": [32, 66, 69, 71, 72, 73, 95, 96, 109, 121, 124, 125, 127, 129, 190, 213, 260, 287, 296], "tri": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213], "pin": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213], "4d": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213], "ignore_w": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213], "1913": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213], "3420": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213], "5113": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213], "2325": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213], "torch_doctest_cuda1": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213], "gpu1": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213], "1914": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213], "5112": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213, 294], "2324": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213], "float16": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213], "cdoubl": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213], "3741": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213], "j": [32, 35, 57, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213, 285], "2382": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213], "5593": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213, 294], "4443": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213], "complex128": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213], "6122": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213], "1150": [32, 66, 69, 71, 72, 73, 95, 109, 121, 124, 125, 127, 129, 190, 213], "to_empti": [32, 66, 69, 71, 72, 73], "dst_type": [32, 66, 69, 71, 72, 73], "xpu": [32, 66, 69, 71, 72, 73], "set_to_non": [32, 66, 69, 71, 72, 73], "unidimension": 33, "keepdim": 33, "user_regist": 33, "priori": 33, "definit": [33, 62], "uniqu": [33, 296], "discretebox": [33, 66, 289, 293, 299], "chosen_data": [34, 53], "rewarddata": [34, 53, 281], "rejected_data": [34, 53], "from_dataset": [34, 36, 53], "dataset_nam": [34, 36, 40, 45, 53, 87], "max_length": [34, 36, 37, 43, 45, 53], "550": [34, 36, 40, 45, 53, 294], "root_dir": [34, 36, 45, 53], "from_disk": [34, 36, 45, 53], "carperai": [34, 36, 40, 45], "openai_summarize_comparison": [34, 36, 45], "sequen": [34, 36], "cach": [34, 36, 45, 53, 109, 125, 129, 255, 295], "load_from_disk": [34, 36, 45, 53], "load_dataset": [34, 36, 45, 53], "attention_mask": [34, 36, 37, 39, 40, 43, 45, 53], "92534": 34, "input_id": [34, 36, 37, 39, 40, 43, 45, 53], "end_scor": [34, 39, 40, 53], "sub_data": [34, 36], "from_dict": [34, 36, 39, 45], "batch_dim": [34, 36, 39, 45, 279], "determin": [34, 35, 36, 39, 41, 51, 57, 109, 129, 186, 288, 293], "input_dict": [34, 36, 39], "exclusinv": [34, 36, 39], "__maximum__": [34, 36, 39], "toler": [34, 36, 39, 146, 171], "sie": [34, 36, 39], "input_td": [34, 36, 39], "from_tensordict": [34, 36, 39], "non_tensordict": [34, 36, 39], "_no_default_": [34, 36, 39], "getattr": [34, 36, 39], "tensorclass": [34, 36, 39, 53, 54, 55, 64], "attemptedli": [34, 36, 39], "setattr": [34, 36, 39], "tent": [34, 36, 39, 45], "to_tensordict": [34, 36, 39, 290], "memmap": [34, 36, 39, 54, 72, 73, 130, 260, 296], "unbind": [34, 36, 39, 152], "alpha": [35, 41, 57, 141, 201, 205, 215, 217, 287, 296, 298], "ep": [35, 41, 57, 130, 186, 202, 218, 261, 287, 288, 290], "1e": [35, 41, 57, 130, 146, 149, 161, 171, 287, 288, 289, 293], "08": [35, 41, 57, 288, 289, 293, 294], "collate_fn": [35, 38, 41, 42, 51, 52, 296, 298], "prefetch": [35, 38, 41, 42, 51, 52, 53, 287, 288, 290, 296], "schaul": [35, 57], "quan": [35, 57], "antonogl": [35, 57], "silver": [35, 57], "2015": [35, 57], "arxiv": [35, 57, 92, 109, 127, 142, 143, 144, 145, 148, 149, 150, 156, 160, 162, 163, 165, 167, 168, 174, 183, 186, 200, 201, 206, 207, 208, 209, 210, 211, 214, 217, 218, 227, 232, 240, 295], "ab": [35, 57, 109, 127, 130, 149, 150, 156, 160, 162, 163, 165, 167, 168, 174, 200, 201, 207, 208, 209, 210, 211, 214, 217, 295], "1511": [35, 57, 150], "05952": [35, 57], "expon": [35, 41, 57], "\u03b1": [35, 41, 57], "delta": [35, 41, 57, 171, 187, 191, 281, 284], "null": [35, 41, 57, 91], "max_siz": [35, 38, 41, 42, 54, 55, 56, 62, 64], "1_000": [35, 38, 41, 42, 296], "merg": [35, 38, 41, 42, 51, 52, 294], "mini": [35, 38, 41, 42, 51, 52, 293], "decid": [35, 38, 41, 42, 298], "rb": [35, 38, 41, 42, 51, 52, 92, 113, 288, 290, 293, 295, 296, 298], "meth": [35, 38, 41, 42, 213], "incompat": [35, 38, 41, 42, 296], "drop_last": [35, 38, 41, 42, 61], "return_info": [35, 38, 41, 42, 51, 52, 296], "tensordictprioritizedreplaybuff": [35, 281, 298], "simplifi": [35, 294, 296], "manual_se": [35, 38, 41, 42, 96, 106, 113, 157, 164, 177, 183, 184, 186, 194, 200, 201, 203, 211, 217, 293, 294, 298, 299], "_weight": [35, 41, 296, 298], "arrai": [35, 40, 287, 296], "update_prior": [35, 57, 260, 285, 288, 296, 298], "36278465": 35, "cursor": [35, 38, 41, 42, 51, 52], "insert_transform": [35, 38, 41, 42, 51, 52], "insert": [35, 38, 41, 42, 51, 52, 59, 63, 65, 126], "prompt_rindex": [36, 37, 40], "label": [36, 37, 40, 45, 120, 287, 296], "nonetyp": [36, 39], "logit": [36, 40, 157, 164, 183, 205, 283], "promptdatatldr": 36, "116722": 36, "prompt": [37, 40], "return_tensordict": [37, 43], "recip": [37, 66, 69, 71, 72, 73, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 158, 161, 162, 163, 167, 168, 170, 175, 181, 183, 184, 186, 189, 194, 197], "text": [37, 40, 43, 186, 289], "tensodict": [37, 43], "orign": [37, 43], "valid_sampl": 37, "identifi": 37, "eough": 37, "toknen": 37, "meet": 37, "criterion": 37, "autotoken": [37, 43, 45], "from_pretrain": [37, 40, 43], "gpt2": [37, 40, 43, 45], "pad_token": [37, 43], "eos_token": 37, "enough": [37, 296], "inde": [37, 96, 289, 294], "might": [37, 120, 250, 282, 287, 299], "writer": [38, 42, 51, 52, 59, 63, 281, 289], "randomsampl": [38, 42, 51, 52, 281, 287], "roundrobinwrit": [38, 42, 51, 52, 281], "Not": 38, "ref_model": 40, "reward_model": [40, 196], "max_new_token": 40, "score_clip": 40, "causal": 40, "sentenc": 40, "frozen": [40, 104], "kl": [40, 104, 208, 212], "penalti": [40, 212], "strai": 40, "far": [40, 69, 151, 172, 173, 294, 299], "calcul": [40, 113], "gpt2rewardmodel": 40, "get_dataload": [40, 281], "promptdata": [40, 281], "gpt2lmheadmodel": 40, "dl": 40, "block_siz": [40, 53], "tensorclass_typ": [40, 53], "openai_summarize_tldr": 40, "config_class": 40, "model_path": 40, "rollout_from_model": 40, "rollout_from_data": 40, "600": [40, 294, 296], "reward_kl": [40, 104], "reward_raw": 40, "sample_log_prob": [40, 178, 179, 180, 187, 191, 193, 214, 272, 289, 293, 298], "create_rollout_td": 40, "log_prob": [40, 146, 157, 164, 173, 191], "log_ratio": 40, "kl_coef": 40, "plu": [40, 294], "replic": 40, "rindex": 40, "multipli": [40, 201, 202, 205, 212, 214, 215, 217, 261, 287], "term": [40, 104, 159, 160, 199, 200, 205, 265, 288, 289, 293], "subtract": [40, 120], "ve": [40, 287, 290], "eo": 40, "limit": [40, 70, 92, 104, 287, 288, 290, 293, 294], "generation_config": 40, "generationconfig": 40, "ti": [40, 236, 237, 238, 239, 241, 242, 243, 244, 288], "log_probs_gen": 40, "kl_step": 40, "logprobs_of_label": 40, "priority_kei": [41, 42, 201, 204, 205, 206, 211, 213, 215, 217, 219, 225, 296, 298], "td_error": [41, 42, 201, 203, 204, 205, 206, 211, 213, 215, 217, 219, 225, 287, 296, 298], "reduct": [41, 57], "prioritizedreplaybuff": [41, 281, 298], "update_tensordict_prior": [41, 287, 296, 298], "prioritizedsampl": [41, 42, 204, 206, 225, 281, 287, 296], "min": [41, 57, 171, 172, 173, 186, 201, 202, 205, 215, 217, 288, 289, 293], "median": [41, 57, 187, 191], "len": [41, 54, 55, 64, 141, 154, 158, 287, 294, 295, 296, 298], "include_info": [41, 42, 51, 52], "kw": [42, 59, 63], "int32": [42, 86, 136], "huggingfac": [43, 185], "co": [43, 294], "doc": [43, 288, 293], "pad_trunc": 43, "am": 43, "worri": 43, "me": 43, "reassur": 43, "ok": 43, "tokenizer_fn": 45, "tensordicttoken": [45, 281], "pre_tokenization_hook": 45, "valid_s": 45, "num_work": [45, 71, 72, 73, 287, 288], "tokenizer_class": 45, "tokenizer_model_nam": 45, "tokein": 45, "discard": [45, 69, 127, 139, 245, 296, 299], "condit": [45, 120, 182, 183, 188, 189, 199, 287, 294, 296], "elementwis": 45, "os": [45, 288], "cpu_count": 45, "vocabulari": 45, "loader": [45, 289], "185068": 45, "dataset_to_tensordict": 45, "data_dir": 45, "nestedkei": [45, 92, 93, 94, 96, 97, 98, 100, 103, 106, 110, 111, 113, 117, 119, 122, 127, 130, 181, 184, 186, 191, 204, 225], "valid_mask_kei": 45, "conver": 45, "undergon": 45, "preprocess": [45, 288], "batch_dimens": 45, "filder": 45, "tempfil": [45, 275, 287, 288], "randint": [45, 123, 296], "20": [45, 66, 69, 71, 72, 73, 254, 287, 288, 289, 290, 293, 294, 295, 297, 298, 299], "temporarydirectori": [45, 287, 288], "tmpdir": [45, 287, 288], "data_memmap": 45, "exclus": [48, 49, 100, 152, 157, 182, 183, 188, 189, 218, 219, 227, 228, 229, 230, 231, 279, 283], "recurse_through_entri": 49, "recurse_through_stack": 49, "consolid": 49, "from_env": 51, "use_timeout_as_don": 51, "env_kwarg": [51, 277, 278, 287], "metadata": [51, 289, 293, 299], "reconstruct": [51, 208, 287, 299], "timeout": 51, "recov": [51, 181, 184, 186, 192, 211, 292], "regard": [51, 148, 183, 200, 206, 214, 287, 289, 294], "get_dataset": 51, "qlearning_dataset": 51, "less": [51, 71, 175, 277, 278, 284, 289, 290, 296, 298], "left": [51, 95, 104, 109, 111, 122, 124, 127, 129, 288, 289], "terminate_on_end": 51, "possess": 51, "unexpectedli": 51, "episod": [51, 113, 116, 120, 140, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 288, 293], "absent": 51, "traj_split": 51, "observationnorm": [51, 130, 279, 287, 288, 289, 290, 298], "maze2d": 51, "umaz": 51, "loc": [51, 104, 106, 115, 151, 161, 172, 173, 178, 179, 180, 187, 191, 193, 200, 201, 211, 214, 215, 216, 217, 267, 272, 279, 283, 287, 288, 289, 290, 293, 298], "128": [51, 143, 288, 290, 294, 295, 296], "public": [52, 109, 129], "dua": 52, "graff": 52, "2017": 52, "uci": 52, "archiv": 52, "ic": 52, "edu": 52, "ml": 52, "sklearn": 52, "adult_num": [52, 87], "adult_onehot": [52, 87], "mushroom_num": [52, 87], "mushroom_onehot": [52, 87], "covertyp": [52, 87], "shuttl": [52, 87], "magic": [52, 87], "infinit": [53, 296], "three": [53, 283, 285, 289, 293, 294, 296], "block": [53, 283, 290], "pairwisedataset": [53, 281], "256": [53, 288, 289, 293, 294], "scratch_dir": [54, 287, 296], "myclass": [54, 55, 64], "foo": [54, 55, 64, 296, 299], "bar": [54, 55, 64, 256, 257, 259, 263, 285, 288], "attach": [54, 55, 56, 62, 64, 288], "entiti": [54, 55, 56, 62, 64], "alloc": [55, 157, 287], "zero_": [55, 64, 136], "max_capac": [57, 287, 296], "uniformli": [58, 213, 299], "roundrobin": [59, 63], "piec": [59, 63, 65, 287, 288, 289, 293, 294, 296], "consum": [61, 288, 289, 293, 296], "incomplet": 61, "unlik": [61, 206, 214, 288, 298], "fresh": 61, "caution": [61, 132, 299], "shuffl": [61, 293], "haven": [61, 295], "remain": [61, 96, 104, 120, 160], "draw": 61, "__len__": 62, "_inplace_upd": [66, 71, 72, 73, 74, 75, 87, 88, 89, 125], "_batch_lock": [66, 71, 72, 73, 74, 75, 87, 88, 89, 125], "speak": [66, 287], "fake_tensordict": [66, 69, 71, 72, 73, 288], "ampl": 66, "run_type_check": [66, 70], "placement": 66, "produc": [66, 141, 154, 158, 164, 178, 180, 246, 289, 290, 296, 299], "continuousbox": [66, 136, 289, 293, 294, 298, 299], "unboundedcontinuoustensorspec": [66, 70, 121, 136, 140, 156, 177, 190, 193, 195, 216, 281, 289, 290, 293, 294, 299], "fake_td": [66, 69, 71, 72, 73], "mutabl": [66, 69, 71, 72, 73], "batch_lock": [66, 68, 69, 71, 72, 73, 121, 125, 294], "environn": [66, 69, 70, 71, 72, 73, 125], "immut": [66, 69, 71, 72, 73, 111, 125], "fake": [66, 69, 71, 72, 73, 287, 288], "overridden": [66, 69, 71, 72, 73, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 158, 161, 162, 163, 167, 168, 170, 175, 181, 183, 184, 186, 189, 194, 197, 290], "afterward": [66, 69, 71, 72, 73, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 158, 161, 162, 163, 167, 168, 170, 175, 181, 183, 184, 186, 189, 194, 197, 299], "silent": [66, 69, 71, 72, 73, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 158, 161, 162, 163, 167, 168, 170, 175, 181, 183, 184, 186, 189, 194, 197], "rand_act": [66, 69, 71, 72, 73], "_step": [66, 69, 71, 72, 73, 100, 111, 120], "privat": [66, 69, 71, 72, 73, 294, 299], "callback": [66, 69, 71, 72, 73, 293], "auto_reset": [66, 69, 71, 72, 73, 294], "auto_cast_to_devic": [66, 69, 71, 72, 73, 293], "break_when_any_don": [66, 69, 71, 72, 73, 293], "return_contigu": [66, 69, 71, 72, 73, 132, 292], "soon": [66, 69, 71, 72, 73], "ndim": [66, 69, 71, 72, 73], "concomitt": [66, 69, 71, 72, 73], "workspac": [66, 69, 71, 72, 73], "creator": [67, 268, 269, 277, 278, 279], "substitut": [67, 130], "vecnorm": [67, 279], "env_creat": [67, 287], "test_env1": 67, "_td": 67, "observation_count": [67, 299], "test_env2": 67, "sleep": [67, 299], "ps": 67, "p1": 67, "p2": 67, "join": [67, 281, 288, 289], "9934": 67, "env_str": 68, "info_dict_read": 69, "set_info_dict_read": 69, "put": [69, 130, 279, 283, 288, 289, 290, 294], "read_act": 69, "read_don": 69, "reader": [69, 288], "frame_skip": [69, 76, 77, 78, 80, 81, 85, 101, 256, 259, 266, 285, 287, 288, 289, 298], "broken": [69, 132], "read_ob": 69, "dictat": [69, 187, 191, 214, 287, 294], "inner": [69, 96, 285, 288, 289, 293, 299], "read_reward": 69, "total_reward": [69, 288], "step_reward": 69, "baseinfodictread": 69, "info_dict": 69, "hoc": 69, "dict_read": 69, "default_info_dict_read": 69, "my_info_kei": 69, "some_env": 69, "safeti": 70, "constraint": [70, 289, 293], "behav": [70, 84, 164, 211, 295], "mymbenv": [70, 140, 156], "world_model": [70, 140, 156, 208], "super": [70, 140, 148, 156, 195, 201, 203, 205, 211, 215, 217, 219, 287, 294, 298], "hidden_observ": [70, 140, 156], "mlp": [70, 140, 141, 142, 143, 144, 145, 152, 153, 156, 158, 178, 182, 204, 272, 283, 288, 292, 295, 298], "worldmodelwrapp": [70, 140, 156], "activation_class": [70, 140, 141, 142, 143, 144, 145, 149, 150, 154, 156, 158, 288, 293, 298], "relu": [70, 140, 156, 161, 199], "activate_last_lay": [70, 140, 145, 154, 156], "depth": [70, 140, 141, 142, 143, 144, 145, 149, 150, 154, 156, 158, 162, 163, 182, 283, 288, 292, 293], "equal": [71, 72, 73, 105, 106, 141, 147, 152, 154, 158, 218, 222, 254, 277, 278, 287, 289, 295], "readthedoc": 71, "en": 71, "python_interfac": 71, "thread": 71, "task_id": 71, "my_env_fun": [72, 73], "custom_attribute_list": [72, 73], "custom_attribut": [72, 73], "custom_method_list": [72, 73], "custom_method": [72, 73], "deploi": [72, 73], "slight": [72, 73, 288], "overhead": [72, 73], "share_individual_td": [72, 73], "shared_memori": [72, 73], "policy_proof": [72, 73], "ll": [72, 73, 287, 288, 289, 290, 293, 299], "hidden": [72, 73, 149, 152, 153, 162, 163, 167, 168, 178, 179, 180, 190, 193, 202, 212, 214, 283, 290, 292, 298], "allow_step_when_don": [72, 73], "update_kwarg": [72, 73], "googl": [74, 75, 289, 290, 293], "ant": [74, 75, 295], "get_environ": 75, "87": [75, 288, 294, 295], "acrobot": [75, 299], "fetch": [75, 104, 295, 296, 299], "dm_control": [76, 77, 287, 292, 299], "task_nam": 76, "cheetah": [76, 77, 287, 299], "mo": [80, 81], "minecart": [80, 81], "mo_gym": 81, "sumbodul": 82, "wish": [83, 296], "placehold": [84, 125], "secur": 84, "snake": [85, 86], "6x6": [85, 86], "td1": [86, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225, 287], "12x12": 86, "tsp50": 86, "tsp100": 86, "106": [87, 294], "scenario": [88, 89, 287, 293, 294], "flock": [88, 89], "continuous_act": [88, 89, 293], "cohesion_rew": 88, "collision_rew": 88, "separation_rew": 88, "velocity_rew": 88, "18": [88, 89, 158, 287, 288, 293, 294, 299], "agent_collision_rew": 89, "agent_distance_rew": 89, "model_bas": [90, 140, 156], "transform_reward_spec": [91, 95, 97, 104, 111, 114, 115, 124, 126], "as_invers": 92, "account": [92, 157, 283, 288, 290, 296], "movement": 92, "veloc": [92, 293, 294, 299], "propos": [92, 155, 210, 218, 272, 283, 290, 296], "pdf": [92, 142, 143, 144, 145, 148, 183, 186, 206, 215, 218, 227, 232, 240, 272], "1312": [92, 288], "5602": 92, "seuqenc": [92, 106], "uesd": 92, "unsqueezetransform": [92, 294, 296], "consumpt": 92, "followin": 92, "pictur": 92, "cartpol": [92, 288, 290, 296, 299], "pixels_trsf": [92, 296], "grayscal": [92, 288, 290, 296, 299], "unsqueez": [92, 93, 123, 126, 153, 287, 290, 293, 294], "tensordictreplaybuff": [92, 260, 275, 281, 287, 288, 290, 296], "data_exclud": [92, 296], "_buffer": [92, 122], "transform_observation_spec": [92, 93, 94, 95, 97, 98, 100, 102, 103, 104, 106, 111, 112, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 294], "del_kei": [93, 127, 292, 294], "unsqueeze_if_oor": 93, "observation_posit": 93, "observation_veloc": 93, "delet": 93, "key1": [93, 254, 262], "key2": [93, 254, 262], "crop": [94, 110, 246], "center": [94, 246], "width": [94, 112], "height": [94, 112], "squar": [94, 151, 172, 173, 246], "rewardsc": [95, 125, 287, 288, 290], "rewardclip": 95, "transformed_env": [95, 124, 125], "tranform": [95, 98, 103, 117, 119, 120, 124, 128], "transform_input_spec": [95, 96, 97, 106, 111, 119, 124, 126], "transform_output_spec": [95, 104, 111, 124], "untouch": [95, 104, 111, 124], "transform_done_spec": [95, 104, 111, 124], "num_actions_effect": 96, "max_act": 96, "include_forward": 96, "dimension": [96, 152, 227, 232, 240, 293], "num_act": [96, 205], "action_out": 96, "_call": [96, 100, 294], "expos": [97, 192, 288], "excluded_kei": 98, "finit": [99, 296], "first_dim": 100, "last_dim": 100, "allow_positive_dim": [100, 126], "flatten": [100, 260, 290, 293], "th": [100, 126, 294], "permit": [100, 126], "frameskip": 100, "repeatedli": [101, 289, 293], "init_kei": 103, "is_init": [103, 152, 186, 290], "tracker": 103, "probabilistictensordictmodul": [104, 191, 192, 298], "coef": 104, "pi_curr": 104, "pi_0": 104, "constrain": [104, 152, 214], "overfit": 104, "fine": [104, 295], "probabilist": [104, 187, 281, 289, 298], "get_dist": [104, 191, 192], "mod": [104, 152, 194, 290], "normalparamextractor": [104, 283, 289, 293], "probabilisticactor": [104, 178, 179, 180, 200, 201, 205, 211, 214, 215, 216, 217, 219, 283, 287, 289, 293], "tanhnorm": [104, 178, 179, 180, 187, 193, 200, 201, 211, 214, 215, 216, 217, 219, 281, 289, 293, 298], "n_ob": [104, 200, 201, 203, 204, 205, 211, 214, 215, 216, 217, 219], "n_act": [104, 200, 201, 203, 204, 205, 211, 214, 215, 216, 217, 219], "distribution_class": [104, 178, 179, 180, 187, 191, 193, 200, 201, 205, 211, 214, 215, 216, 217, 283, 287, 289, 293, 298], "return_log_prob": [104, 178, 179, 180, 187, 191, 193, 216, 283, 289, 293, 298], "apply_": 104, "copy_": [104, 287], "formulat": 104, "diverg": [104, 152, 187, 191, 208, 212], "noop": [105, 298], "30": [105, 167, 168, 288, 289, 293, 294], "op": [105, 181, 184, 265], "randomli": [105, 106, 121, 187, 191, 293, 294, 296], "noop_max": 105, "out_keys_inv": [106, 107, 111, 124, 294], "standard_norm": [106, 115, 287, 288, 290], "affin": [106, 115], "layer": [106, 130, 141, 142, 143, 149, 152, 154, 158, 159, 160, 162, 163, 169, 170, 176, 185, 194, 283, 288, 289, 290, 295], "normal": [106, 130, 141, 151, 154, 157, 161, 172, 173, 181, 187, 191, 202, 212, 214, 259, 261, 279, 283, 285, 290, 293, 299], "set_default_tensor_typ": 106, "doubletensor": 106, "isclos": 106, "next_ob": [106, 227, 228, 229, 230, 298], "rubric": [106, 193], "init_stat": [106, 287, 288, 289, 290], "3752e": 106, "01": [106, 186, 197, 202, 212, 214, 287, 288, 290, 293, 294, 295, 297], "5087e": 106, "03": [106, 287, 288, 294, 295, 297], "9294e": 106, "9636": 106, "5608": 106, "6408": 106, "num_it": [106, 288, 289], "reduce_dim": [106, 287, 288, 289, 290], "cat_dim": [106, 287, 288, 289, 290], "keep_dim": [106, 288, 290], "constant": [106, 120, 285, 287, 289, 290, 299], "statist": [106, 130, 216, 279, 287, 288, 289, 299], "approach": [106, 287, 289, 299], "gaussian": [106, 121, 140, 156, 159, 160, 181, 289], "empir": [106, 140, 156, 187, 191, 287, 289, 293], "3d": 106, "third": [106, 183, 293], "r3m": [109, 295], "resnet": [109, 127, 129], "visual": [109, 127, 129, 289, 294], "embed": [109, 127, 128, 129, 165, 177, 178, 179, 180, 190, 195, 295], "ego4d": [109, 127, 129], "univers": [109, 127, 129], "suraj": [109, 127], "nair": [109, 127], "aravind": [109, 127], "rajeswaran": [109, 127], "vikash": [109, 127, 129], "kumar": [109, 127, 129], "chelsea": [109, 127], "finn": [109, 127], "abhinav": [109, 127], "gupta": [109, 127], "2203": [109, 127, 156, 295], "12601": [109, 127, 295], "_init": [109, 127, 287], "snippet": [109, 127, 287], "resnet50": [109, 129, 295], "model_nam": [109, 127, 129, 249], "resnet34": 109, "resnet18": 109, "r3m_vec": [109, 295], "feed": [109, 129, 213, 283, 287, 293, 296], "244": [109, 129, 294], "stack_imag": [109, 129], "tread": [109, 129], "separet": [109, 129], "hub": [109, 129, 295], "resnet50_weight": [109, 129], "imagenet1k_v1": [109, 129], "download_path": [109, 129], "tensor_pixels_kei": [109, 129], "dest": [109, 127, 129, 190], "sub_seq_len": 110, "sample_dim": [110, 287], "mask_kei": 110, "primarili": 110, "hesit": 110, "request": 110, "robust": 110, "mix": [110, 165, 174, 225, 287, 293], "NOT": 110, "improp": 110, "create_copi": 111, "renam": [111, 113, 139, 287], "stuff": 111, "braxenv": [111, 281], "newnam": 111, "interpol": [112, 288, 290], "bilinear": [112, 290], "r2g": 113, "99": [113, 130, 156, 209, 221, 226, 233, 275, 287, 288, 289, 294, 298], "reward_to_go": 113, "bernoulli_": 113, "9010": 113, "9404": [113, 233], "9701": [113, 233], "9900": [113, 233], "0000": [113, 184, 194, 233, 289, 290, 294, 298], "crash": 113, "clamp_min": 114, "clamp_max": 114, "clip_min": 114, "scalar": [114, 143, 145, 159, 160, 181, 184, 186, 197, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 225, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 283, 288, 294], "clip_max": 114, "episode_": 116, "reward1": 116, "reward2": 116, "ho": 116, "excludetransform": [117, 296], "squeeze_dim": 118, "step_count_kei": 119, "recognis": 119, "target_return": 120, "guid": [120, 282, 287, 293], "accordingli": [120, 188, 290], "conjunct": [120, 288], "hindsight": 120, "relabel": 120, "reward2gotransform": 120, "primer": [121, 290], "default_valu": [121, 290], "unit": [121, 140, 149, 162, 163, 167, 168, 289], "transfomedenv": 121, "mykei": 121, "__unless": 121, "exists__": 121, "dtype_or_devic": 121, "pool": 122, "from_int": 123, "255": [123, 294, 296], "ri": 123, "principl": 124, "cattransform": 124, "notabl": 124, "cache_spec": 125, "anymor": [125, 190], "set_missing_toler": 125, "keyerror": 125, "unsqueeze_dim": [126, 294], "danger": 126, "vc1": 127, "vc1_vec": 127, "small": [127, 287, 289, 293, 299], "untrain": 127, "make_noload_model": 127, "naiv": 127, "vip": [128, 129, 295], "toward": 129, "implicit": [129, 211, 296], "jason": 129, "ma": 129, "shagun": 129, "sodhani": 129, "dinesh": 129, "jayaraman": 129, "osbert": 129, "bastani": 129, "ami": 129, "zhang": 129, "vip_vec": 129, "shared_td": 130, "decai": [130, 181, 184, 218, 261, 287, 288, 290, 299], "9999": [130, 294], "0001": [130, 149, 161, 289, 294], "fly": [130, 212, 284, 289, 294, 296, 299], "to_observation_norm": 130, "underflow": [130, 261], "build_td_for_shared_vecnorm": 130, "memmori": 130, "memmap_": 130, "queue": [130, 296], "td_share": 130, "v": [130, 178, 211, 217, 283, 287, 288], "state_dim": [131, 167, 168], "action_dim": [131, 142, 144, 287, 292], "gsde": [131, 215, 279], "func": 131, "gsdemodul": 131, "check_dtyp": 132, "short": [132, 288, 289, 293], "discrep": [132, 200, 202, 203, 204, 212, 214, 216, 225], "imposs": 132, "probabilistictdmodul": [137, 138, 154, 187, 191, 226, 259], "next_tensordict": 139, "keep_oth": [139, 294], "exclude_reward": 139, "exclude_don": 139, "exclude_act": 139, "next_": 139, "funtion": [139, 294], "cross": 140, "entropi": [140, 200, 201, 202, 205, 211, 212, 214, 215, 217, 219, 293], "botev": 140, "et": 140, "al": [140, 299], "2013": 140, "cem": 140, "plan": [140, 155, 156], "varianc": [140, 151, 161, 172, 173, 284, 287, 289, 293], "rank": 140, "k": 140, "repeat": [140, 289, 293, 294], "maximis": [140, 142, 144, 156, 283, 287, 288, 289, 293, 294], "horizon": [140, 156, 289], "modelbasedenv": [140, 156], "planning_horizon": [140, 156], "optim_step": [140, 156, 288], "mpc": [140, 155, 156], "num_candid": [140, 156], "candid": [140, 156], "top_k": [140, 156], "modelbasedenvbas": [140, 155, 156, 281], "safemodul": [140, 155, 178, 180, 191, 200, 201, 205, 211, 214, 215, 216, 217, 219, 268, 269, 275, 281, 298], "next_hidden_observ": 140, "num_cel": [141, 142, 143, 144, 145, 149, 150, 152, 154, 158, 178, 288, 289, 290, 293, 298], "elu": [141, 142, 143, 144, 145, 149, 150, 288, 298], "activation_kwarg": [141, 154], "norm_class": [141, 142, 143, 154], "norm_kwarg": [141, 154], "bias_last_lay": [141, 142, 143, 144, 145, 150, 154], "aggregator_class": [141, 142, 143, 288, 290, 298], "squashdim": [141, 142, 298], "aggregator_kwarg": [141, 142, 143, 288, 290], "squeeze_output": [141, 142, 143, 288, 290], "convolut": [141, 142, 143, 169], "neural": [141, 169, 190, 283, 288, 289, 290, 293, 294, 299], "cell": [141, 154, 158, 289], "kernel": [141, 150, 153], "device_typ": [141, 142, 143, 144, 145, 150, 154, 159, 160], "cnet": 141, "34": [141, 154, 287, 288, 294], "35": [141, 154, 288, 290, 294, 295], "rectangular": 141, "conv_net_kwarg": [142, 143], "mlp_net_kwarg": [142, 143, 144], "use_avg_pool": [142, 143], "WITH": [142, 143, 144, 145, 186, 218], "1509": [142, 143, 144, 145, 156, 186, 210, 218, 294], "02971": [142, 143, 144, 145, 186, 218], "convnet": [142, 290, 298], "ndims_in": 142, "avgpool": [142, 143], "adaptiveavgpool2d": [143, 288, 290], "400": [144, 145, 293, 294, 296], "mlp_net_kwargs_net1": 145, "mlp_net_kwargs_net2": 145, "atol": [146, 171], "06": [146, 171, 287, 288, 293, 294, 295], "rtol": [146, 171], "batch_shap": [146, 171], "event_shap": [146, 171], "absolut": [146, 171, 287], "densiti": [146, 157, 164, 173], "mass": [146, 157, 164, 173, 294], "rsampl": [146, 164, 191], "sample_shap": [146, 157, 164], "dqnet": 147, "atom": 147, "softmax": [147, 182, 183], "action_spac": [148, 166, 182, 183, 188, 189, 200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225, 290], "var_num": [148, 166, 182, 183, 189], "action_value_kei": [148, 166, 183, 188, 189, 213, 225], "perspect": [148, 183, 206, 289], "1707": [148, 183, 206, 214], "06887": [148, 183, 206], "mult": [148, 158, 166, 182, 183, 188, 189], "functional_modul": [148, 166, 188, 190, 193, 283], "make_funct": [148, 166, 187, 188, 190, 193, 195, 213, 283, 298], "tensordict_modul": [148, 166, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 203, 205, 211, 214, 215, 216, 217, 219, 283], "nbin": [148, 182, 283], "customdistributionalqv": 148, "log_softmax": [148, 182], "one_hot": [148, 166], "qvalue_actor": [148, 166, 182, 188, 283], "std_bia": 149, "std_min_val": 149, "belief": [149, 162, 167, 168], "1912": [149, 207, 208, 209], "01603": [149, 207, 208, 209], "softplu": [149, 161, 197, 198, 199], "out_features_valu": 150, "cnn_kwarg": [150, 288], "mlp_kwarg": [150, 153, 288], "duel": 150, "cnn": [150, 288, 298], "06581": 150, "512": [150, 288, 294, 296], "upscal": [151, 172, 173], "tanh_loc": [151, 172, 173], "event_dim": [151, 171, 172], "ultim": [151, 172, 173], "poor": [151, 172, 173], "explos": [151, 172, 173], "switch": [151, 173], "sigma": [151, 172, 173, 181, 186, 289], "formula": [151, 172, 173, 200, 202, 212, 214, 284, 289], "embedd": [152, 153], "lstmcell": 152, "correspont": 152, "input_s": [152, 153, 290], "hidden_s": [152, 153, 290], "num_lay": [152, 162, 163], "b_ih": 152, "b_hh": 152, "introduc": [152, 186, 287], "proj_siz": 152, "recurrent_state_h": [152, 290], "recurrent_state_c": [152, 290], "triplet": [152, 188, 189], "custom_kei": 152, "temporal_mod": 152, "set_temporal_mod": 152, "tensordictsequenti": [152, 182, 192, 283, 287, 290, 292, 295, 298], "seq": [152, 290, 292], "lstm_modul": 152, "rs_h": 152, "rs_c": 152, "set_recurrent_mod": [152, 290], "batch_first": [152, 290], "hidden0": 152, "hidden1": 152, "policy_infer": 152, "policy_train": 152, "traj_td": 152, "td_inf": 152, "assert_clos": 152, "lstm_kwarg": 153, "next_observ": [153, 200, 201, 203, 204, 205, 211, 214, 215, 216, 217, 219, 292], "time_step": 153, "2d": [153, 293], "hidden0_in": 153, "hidden1_in": 153, "hidden0_out": 153, "hidden1_out": 153, "single_bias_last_lay": 154, "layer_class": 154, "layer_kwarg": 154, "perceptron": 154, "seamless": 154, "lazylinear": [154, 283, 289, 294, 295, 298], "42": [154, 200, 201, 203, 211, 217, 287, 288, 289, 294], "noisylinear": [154, 159, 281, 288], "noisylazylinear": [154, 281], "At": [155, 288, 289, 290, 292, 294, 295], "mpcplanner": 155, "tensordict_out": [155, 299], "mppi": 156, "covari": 156, "william": [156, 216], "aldrich": 156, "theodor": 156, "01149": 156, "hansen": 156, "wang": 156, "su": 156, "04955": 156, "valueoper": [156, 178, 179, 180, 200, 201, 202, 203, 205, 211, 212, 214, 215, 216, 217, 219, 275, 283, 287, 289], "tdlambdaestim": [156, 281, 287], "value_net": [156, 204, 216, 227, 228, 229, 230, 289], "adv": 156, "lmbda": [156, 221, 227, 230, 232, 238, 239, 240, 243, 244, 284, 287, 289, 293], "95": [156, 221, 288, 289, 290, 293, 294], "value_network": [156, 203, 204, 206, 211, 217, 227, 228, 229, 230, 284, 287, 289], "temperatur": [156, 201, 211], "neg_inf": 157, "inf": 157, "padding_valu": 157, "www": 157, "api_doc": 157, "tf_agent": 157, "event": [157, 164, 236, 237, 238, 239, 241, 242, 243, 244, 296], "unnorm": [157, 164], "sparse_mask": 157, "dens": 157, "1203": 157, "0928": 157, "0831": 157, "ones_lik": 157, "1972": 157, "n_agent_input": [158, 293], "n_agent_output": [158, 293], "centralis": [158, 293], "share_param": [158, 293], "multiag": [158, 165, 174, 225], "homogen": [158, 293], "toech": 158, "agent_network": 158, "modulelist": [158, 272, 298], "centalis": 158, "shown": [158, 283, 292, 293, 296], "std_init": [159, 160], "matrix": [159, 160], "initialize_paramet": 159, "isol": 159, "1706": [160, 174], "10295v3": 160, "induc": 160, "aid": 160, "scale_map": 161, "biased_softplus_1": 161, "scale_lb": [161, 167, 168], "exp": [161, 199], "module_norm": 161, "channel": [162, 163, 288], "decod": 162, "1803": [162, 163, 165], "10122": [162, 163], "rnn_hidden": 162, "latent": 163, "excacli": 164, "state_shap": [165, 225], "mixing_embed_dim": [165, 225], "qmix": [165, 293], "mixer": [165, 174, 225], "monoton": 165, "hyper": 165, "11485": 165, "qmixerloss": [165, 174], "qmix_vdn": [165, 174], "eventu": [165, 290, 294], "vdn": [165, 174], "greedi": [166, 183, 184, 189, 288, 290], "hidden_dim": [167, 168], "posterior": [167, 208], "rssm": [167, 168, 208], "1811": [167, 168], "04551": [167, 168], "obs_embed": 167, "rnn_hidden_dim": 168, "dream": 168, "tanhtransform": 172, "decomposit": 174, "05296": 174, "vmap": [175, 190, 193, 298], "hide": [175, 289, 293], "satisfi": [175, 283], "tensordictmodulebas": [175, 188, 290], "vmap_dim": 175, "lam": 175, "sample_in": 175, "sample_in_td": 175, "vm": 175, "translat": [177, 187], "character": [177, 182, 187, 188, 190, 296], "overflow": [177, 182, 183, 187, 188, 189, 190, 191], "td_modul": [177, 178, 179, 180, 187, 190, 191, 193, 195, 298], "3635": 177, "0340": 177, "1476": 177, "3911": [177, 294], "1664": [177, 288, 294], "5455": 177, "2247": 177, "4583": 177, "2916": 177, "2160": 177, "5337": 177, "5193": 177, "grad_fn": [177, 184, 298], "addmmbackward0": 177, "actorvalueoper": [178, 283], "get_policy_oper": [178, 179, 180, 202, 212, 214, 283], "standalon": [178, 179, 180], "tdmodul": [178, 179, 180, 275], "get_critic_oper": 178, "common_oper": [178, 180], "policy_oper": [178, 179, 180], "value_oper": [178, 179, 180], "normalparamwrapp": [178, 179, 180, 187, 193, 200, 201, 205, 211, 214, 215, 216, 217, 219, 281, 298], "module_hidden": [178, 180], "td_module_hidden": [178, 180], "module_act": [178, 180], "td_module_act": [178, 179, 180], "module_valu": [178, 179, 180], "td_module_valu": [178, 179, 180], "state_action_valu": [178, 195, 201, 217, 226, 272, 275, 283, 287, 298], "td_clone": [178, 179, 180], "tensordictmodulewrapp": [178, 268, 269, 275], "get_policy_head": [178, 179, 180], "safesequenti": [178, 179, 180, 225], "head": [178, 180, 202, 212, 214], "get_value_head": [178, 179, 180], "get_value_oper": [178, 179, 180, 202, 212, 214], "action_modul": 179, "state_valu": [179, 180, 195, 202, 205, 212, 214, 215, 217, 227, 228, 229, 230, 232, 234, 236, 238, 240, 241, 243, 283, 287, 289, 293], "qualiti": [180, 283], "actorcriticoper": [180, 202, 212, 214, 283], "embeddig": 180, "refet": 180, "actorcriticwrapp": [180, 283, 287], "po": [181, 184], "sigma_init": 181, "epsilon": [181, 184, 186, 218, 261, 288, 289, 290], "sigma_end": 181, "annealing_num_step": [181, 184, 186, 287, 288, 290], "captur": [181, 184, 186], "omiss": [181, 184, 186], "warn": [181, 184, 186, 288, 299], "ommit": [181, 184, 186, 296], "qvaluemodul": [182, 188, 225, 290], "distributionaldqnnet": 182, "make_log_softmax": 182, "my_action_valu": [183, 189], "chanc": 183, "thid": 183, "eps_init": [184, 186, 288, 290], "eps_end": [184, 186, 288], "explorative_polici": [184, 186], "9055": [184, 294], "9277": 184, "6295": 184, "2532": 184, "addbackward0": [184, 298], "lmheadmodel": 185, "extract": [185, 287, 289], "actor_head": [185, 202, 212, 214], "base_model": 185, "lm_head": 185, "ornstein": 186, "uhlenbeck": 186, "ou": [186, 287], "auto": [186, 201, 205, 215, 217, 219, 284, 293], "correl": 186, "sort": 186, "noise_t": 186, "noise_": 186, "theta": [186, 289, 294], "mu": [186, 289], "dt": [186, 294], "sigma_t": 186, "sqrt": 186, "sigma_": 186, "anneal": 186, "ou_prev_nois": 186, "ou_step": 186, "increas": [186, 293], "15": [186, 207, 287, 288, 289, 290, 294, 296, 298], "x0": 186, "sigma_min": 186, "n_steps_ann": 186, "is_init_kei": 186, "_ou_prev_nois": 186, "_ou_step": 186, "default_interaction_typ": [187, 191], "interaction_typ": [187, 191], "set_interaction_typ": [187, 191], "distribution_kwarg": [187, 191, 289, 293], "cache_dist": [187, 191], "n_empirical_estim": [187, 191], "chose": 189, "functionalmodul": 190, "functionalmodulewithbuff": 190, "grucel": 190, "td_fmodul": 190, "td_function": 190, "td_state": 190, "ensembl": [190, 215], "params_repeat": 190, "td_vmap": [190, 193], "random_sampl": [190, 191], "rule": [191, 283, 289], "suppli": 191, "fist": 191, "log_prob_kei": [191, 293], "probabilistictensordictsequenti": [192, 200, 202, 212, 214, 216, 268, 269, 298], "partial_toler": [192, 193, 292], "who": [192, 193], "AND": [192, 193], "scan": [192, 193], "tensordictsequenci": 193, "tensordictsequ": 193, "safeprobabilisticmodul": [193, 283], "spec1": 193, "net1": 193, "module1": 193, "td_module1": 193, "spec2": 193, "module2": 193, "td_module2": 193, "clamp": [194, 208, 263, 294], "boundari": [194, 289, 293], "resolut": 194, "simplest": [194, 287, 289, 290, 293, 296, 299], "9944": 194, "9991": 194, "3020": 194, "2299": [194, 294], "5418": 194, "2989": 194, "6849": 194, "3169": 194, "2690": 194, "9649": [194, 294], "5686": 194, "8602": 194, "0315": 194, "8455": [194, 294], "6027": 194, "4746": 194, "7843": 194, "7782": 194, "2111": 194, "5115": 194, "4687": 194, "5760": 194, "custommodul": 195, "cat": [195, 201, 203, 211, 215, 217, 219, 298], "imaginari": 196, "imagin": 196, "transition_model": 196, "get_reward_oper": 196, "get_transition_model_oper": 196, "min_val": [197, 199], "bias": [197, 284, 287], "_bia": 197, "invert": [198, 289], "surject": 199, "expln": 199, "biased_softplu": [199, 281], "beggin": 199, "biased_softplus_": 199, "syntax": [199, 287], "met": [199, 294], "1602": 200, "01783v2": 200, "entropy_bonu": [200, 202, 212, 214, 289], "favour": [200, 202, 212, 214], "samples_mc_entropi": [200, 202, 212, 214], "mont": [200, 202, 212, 214, 287], "carlo": [200, 202, 212, 214, 287], "entropy_coef": [200, 202, 212, 214, 289, 293], "critic_coef": [200, 202, 212, 214, 289], "loss_critic_typ": [200, 202, 212, 214, 216, 289], "l1": [200, 202, 203, 204, 205, 212, 214, 215, 216, 219, 222, 225, 283, 287], "l2": [200, 202, 203, 204, 205, 208, 209, 212, 214, 215, 216, 219, 222, 225, 287], "smooth_l1": [200, 201, 202, 203, 204, 205, 211, 212, 214, 215, 216, 217, 219, 222, 225, 289], "separate_loss": [200, 202, 203, 205, 211, 212, 214, 215, 216, 217, 219], "propag": [200, 202, 203, 205, 211, 212, 214, 215, 216, 217, 219, 227, 228, 229, 230, 289, 293], "advantage_kei": [200, 202, 212, 214, 216, 227, 228, 229, 230], "value_target_kei": [200, 202, 212, 214, 216, 227, 228, 229, 230, 289], "value_target": [200, 202, 212, 214, 216, 227, 228, 229, 230, 289, 293], "loss_crit": [200, 214, 289, 293], "loss_entropi": [200, 214, 289, 293], "loss_object": [200, 214, 289, 293], "recur": [200, 201, 203, 204, 205, 211, 214, 215, 216, 217, 219, 227, 228, 229, 230, 231], "next_reward": [200, 201, 203, 204, 205, 211, 214, 215, 216, 217, 219], "next_don": [200, 201, 203, 204, 205, 211, 214, 215, 216, 217, 219], "loss_obj": 200, "sacloss": [200, 210, 218, 281], "select_out_kei": [200, 201, 203, 205, 211, 214, 215, 217, 219], "throughout": [200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 289, 299], "essenti": [200, 201, 202, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 219, 225, 288, 294, 296], "make_value_estim": [200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 220, 225, 284, 287, 288, 293], "value_typ": [200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 221, 225, 287], "valueestim": [200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 221, 225, 281, 284, 287, 293], "hyperparam": [200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225, 287, 294], "enum": [200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 221, 225, 287], "default_value_estim": [200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225, 287], "refin": [200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225], "default_value_kwarg": [200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 225, 281, 287], "dqnloss": [200, 201, 203, 205, 206, 207, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 225, 270, 281, 284, 288, 290], "dqn_loss": [200, 201, 203, 204, 205, 206, 207, 211, 213, 214, 215, 216, 217, 219, 220, 225], "conserv": 201, "2006": [201, 294], "04779": 201, "actor_network": [201, 203, 205, 211, 215, 217, 219, 287], "qvalue_network": [201, 205, 211, 215, 217, 219], "loss_funct": [201, 203, 204, 205, 211, 215, 217, 219, 222, 225, 287], "alpha_init": [201, 205, 215, 217], "min_alpha": [201, 205, 215, 217], "max_alpha": [201, 205, 215, 217], "fixed_alpha": [201, 205, 215, 217], "target_entropi": [201, 205, 215, 217], "prod": [201, 217], "n_action": [201, 204, 217], "delay_actor": [201, 203, 217, 219], "delay_qvalu": [201, 205, 215, 217, 219], "min_q_weight": 201, "max_q_backup": 201, "backup": 201, "deterministic_backup": 201, "num_random": 201, "with_lagrang": 201, "lagrang": 201, "lagrange_thresh": 201, "threshold": [201, 202, 289], "valueclass": [201, 203, 205, 211, 215, 217, 219], "qvalu": [201, 205, 211, 215, 217, 219, 272], "loss_actor": [201, 203, 205, 211, 215, 216, 217, 219, 258, 287, 298], "loss_alpha": [201, 205, 215, 217], "loss_alpha_prim": 201, "loss_qvalu": [201, 205, 211, 215, 217, 219], "clip_epsilon": [202, 289, 293], "normalize_advantag": [202, 212, 214, 293], "value_kei": [202, 212, 214, 227, 228, 229, 230, 287], "somemodul": [202, 212, 214], "someactor": [202, 212, 214], "value_head": [202, 212, 214], "somevalu": [202, 212, 214], "loss_modul": [202, 210, 212, 213, 214, 218, 263, 274, 275, 284, 285, 287, 288, 289, 293, 296], "ppoloss": [202, 212, 281], "delay_valu": [203, 204, 206, 216, 217, 225, 288, 290], "loss_valu": [203, 211, 216, 217, 287, 289, 293, 298], "pred_valu": [203, 219, 287, 298], "pred_value_max": [203, 287, 298], "target_valu": [203, 205, 215, 219, 226, 284, 287, 298], "target_value_max": [203, 287, 298], "qvalueactor": [204, 225, 283, 288, 290], "mult_one_hot": [204, 225], "binarydiscretetensorspec": [204, 225, 281], "loss_val": [204, 284, 287, 289, 290, 293, 296], "num_qvalue_net": [205, 211, 215, 217, 219], "target_entropy_weight": 205, "onehotcategor": [205, 281], "action_log_prob_actor": [205, 215], "state_action_value_actor": [205, 215, 219], "disctount": 206, "distributionalqvalueactor": [206, 283], "input_tensordict": [206, 287], "actor_model": 207, "value_model": [207, 209], "model_based_env": 207, "dreamerenv": [207, 281], "imagination_horizon": 207, "unrol": [207, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244], "discount_loss": [207, 209], "lambda_kl": 208, "lambda_reco": 208, "lambda_reward": 208, "reco_loss": 208, "reward_loss": 208, "free_nat": 208, "nat": 208, "delayed_clamp": 208, "global_averag": 208, "value_loss": 209, "fake_data": 209, "ddpgloss": [210, 218, 275, 281, 287, 298], "td3loss": [210, 218, 281], "value_network_update_interv": 210, "contrast": [210, 296], "06461": 210, "2110": 211, "06169": 211, "expectil": 211, "tau": [211, 218, 287, 288], "antmaz": 211, "sticht": 211, "loss_value_diff": 211, "diff": 211, "old_polici": 212, "new_polici": 212, "adapt": [212, 287, 294], "old": [212, 299], "distanc": [212, 222, 226, 227, 293], "apart": [212, 293], "dtarg": 212, "samples_mc_kl": 212, "analyt": 212, "decrement": 212, "loss_": [213, 258, 284, 287], "equip": [213, 290], "gh": 213, "_acceptedkei": 213, "dataclass": [213, 272], "_forward_value_estimator_kei": 213, "alter": [213, 283], "value_estim": [213, 227, 228, 229, 230, 231, 284, 287, 293], "myloss": 213, "action2": 213, "convert_to_funct": [213, 287], "expand_dim": 213, "create_target_param": [213, 287], "compare_against": [213, 287], "funs_to_decor": 213, "stuctur": 213, "_param": 213, "expans": 213, "resampl": 213, "_target_param": 213, "valueestimatorbas": [213, 281], "blend": 213, "upcom": [213, 236, 237, 238, 239, 241, 242, 243, 244, 287], "proxim": [214, 289, 293], "optimis": [214, 259, 289, 293], "flavour": [214, 293, 298], "clipppoloss": [214, 281, 289, 293], "klpenppoloss": [214, 281], "regularis": 214, "06347": 214, "gae": [214, 281, 284, 287, 289, 293], "ppo_loss": 214, "tdlambda": [214, 221, 284, 287], "base_lay": 214, "randn_lik": 214, "samplelogprob": 214, "openreview": [215, 272], "ay8zfzm0tdd": [215, 272], "sub_sample_len": 215, "subsampl": [215, 254, 285], "connectionist": 216, "1992": 216, "doi": 216, "1007": 216, "bf00992696": 216, "actor_net": [216, 287, 289], "1801": 217, "01290": 217, "applic": [217, 225, 294], "1812": 217, "05905": 217, "redqloss": [218, 281], "math": 218, "theta_t": [218, 294], "theta_": [218, 294], "polyak": 218, "policy_nois": 219, "noise_clip": 219, "next_state_valu": [219, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 281], "td0": [220, 287], "v2": [222, 236, 237, 238, 239, 241, 242, 243, 244, 272], "strict_shap": 222, "view_a": 222, "qmixer": [225, 281], "local_valu": 225, "visibl": [225, 293], "dafault": 225, "acceptedkei": 225, "global_valu": 225, "premad": 225, "penultim": 225, "local_value_network": 225, "mixer_network": 225, "suggest": [225, 293], "value_modul": [225, 289, 298], "qnet": [225, 287], "next_val_kei": 226, "pred_next_v": 226, "usus": 226, "mse": 226, "q_valu": 226, "n_steps_to_next": 226, "value_next_st": 226, "1506": [227, 232, 240], "02438": [227, 232, 240], "exponenti": [227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 261], "average_ga": [227, 289], "skip_exist": [227, 228, 229, 230], "advang": 227, "gradient_mod": 227, "value_error": [227, 228, 229, 230, 231], "sign": 227, "unused_arg": 227, "target_param": [227, 228, 229, 230, 231, 287, 293], "98": [227, 228, 229, 230, 287, 288, 293, 294, 295], "94": [227, 230, 288, 294], "unpack": [227, 228, 229, 230], "tensor_kei": [227, 228, 229, 230, 231], "next_valu": [227, 228, 229, 230, 231], "aka": [228, 288], "average_reward": [228, 229, 230], "tdestim": [228, 229, 231], "infti": 229, "valuefunctionbas": 231, "time_dim": [232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244], "old_stat": [232, 234, 236, 238, 240, 241, 243], "new_stat": [232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244], "rolling_gamma": [236, 237, 238, 239, 241, 242, 243, 244], "g1": [236, 237, 238, 239, 241, 242, 243, 244], "g2": [236, 237, 238, 239, 241, 242, 243, 244], "g3": [236, 237, 238, 239, 241, 242, 243, 244], "g4": [236, 237, 238, 239, 241, 242, 243, 244], "v3": [236, 237, 238, 239, 241, 242, 243, 244], "v4": [236, 237, 238, 239, 241, 242, 243, 244, 287, 289, 295], "out_file_bas": 245, "skip_reset": 245, "dump": 245, "interv": [245, 246, 255, 265, 288, 294], "center_crop": 246, "make_grid": 246, "Will": 246, "grid": 246, "exp_nam": [247, 248, 251, 252, 253, 275, 288], "log_dir": [247, 248, 250, 252, 288], "templat": 247, "csv": [248, 250, 288], "minim": [248, 296], "dependeci": 248, "experiment_nam": [249, 250], "uuid": [249, 288, 299], "date": 249, "logger_typ": 250, "logger_nam": 250, "tensorboard": [250, 252, 298], "wandb": [250, 253, 298], "mlflow": [250, 251], "wandb_kwarg": 250, "mlflow_kwarg": 250, "tracking_uri": 251, "uri": 251, "datastor": 251, "tb_log": 252, "tensoarboard": 252, "sub_traj_len": 254, "min_sub_traj_len": 254, "register_op": [254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 285, 288], "process_optim_batch": [254, 260, 261, 285], "td_out": [254, 262], "_process_optim_batch_hook": [254, 285], "batch_subsampl": 254, "clear_cuda": 255, "pre_optim_step": [255, 285], "counter": [256, 285], "log_pbar": [256, 257, 259, 261, 285, 288], "progress": [256, 257, 259, 263, 285, 288, 290, 299], "count_fram": 256, "pre_steps_log": [256, 257, 285], "count_frames_log": 256, "lognam": 257, "r_train": [257, 288], "log_reward": [257, 288], "loss_compon": 258, "appl": 258, "omit": [258, 289, 294, 296], "optimizer_hook": 258, "record_interv": [259, 287, 288], "record_fram": [259, 266, 287, 288], "policy_explor": [259, 275, 287, 288], "log_kei": [259, 288], "suffix": 259, "underestim": 259, "suppos": [259, 285, 299], "set_exploration_typ": [259, 281, 289, 290, 298], "r_evalu": [259, 287], "flatten_tensordict": [260, 288], "max_dim": 260, "rb_trainer": 260, "batch_process": [260, 261, 262, 285], "post_loss": [260, 285], "999": [261, 288], "jitter": 261, "finfo": 261, "default_dtyp": 261, "get_default_dtyp": 261, "reward_norm": 261, "update_reward_stat": 261, "normalize_reward": 261, "make_train": [262, 281], "_process_batch_hook": [262, 285], "select_kei": [262, 285], "versatil": 263, "lossmodul": [263, 274, 275, 281], "optim_steps_per_batch": [263, 285, 288], "epoch": [263, 289, 293], "clip_grad_norm": 263, "partial": [263, 290], "clip_norm": 263, "progress_bar": 263, "tqdm": [263, 287, 289, 290, 293, 294], "save_trainer_interv": 263, "disk": [263, 285, 287, 288, 290, 296], "log_interv": [263, 288], "save_trainer_fil": [263, 285], "datacollectorbas": [265, 268, 269, 275, 281], "update_weights_interv": [265, 288], "sit": [265, 288], "update_weight": 265, "post_step": [265, 285], "cfg": [266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279], "dictconfig": [266, 267, 268, 269, 272, 273, 274, 275, 276, 279], "divid": [266, 283, 287, 293, 294], "unknowingli": 266, "annealing_fram": [266, 287], "init_env_step": [266, 267, 287], "proof_environ": [267, 272, 287], "sta": 267, "ot": 267, "actor_model_explor": [268, 269, 287], "make_env_kwarg": [268, 269], "targetnetupdat": [270, 271, 274, 275], "redqloss_deprec": 271, "actor_net_kwarg": 272, "qvalue_net_kwarg": 272, "observation_kei": 272, "dummi": [272, 287, 299], "parser_env_arg": 272, "parser_model_args_continu": 272, "cattensor": [272, 287, 292, 294, 299], "hydra": 272, "config_stor": 272, "configstor": 272, "halfcheetah": [272, 287], "config_field": 272, "config_cl": 272, "redqmodelconfig": 272, "envconfig": 272, "make_dataclass": 272, "cls_name": 272, "cs": 272, "config_path": 272, "config_nam": 272, "17": [272, 287, 288, 290, 293, 294, 295], "replayargsconfig": 273, "target_net_updat": [275, 287, 288], "constitu": 275, "learnt": [275, 287, 289], "tensorboardlogg": [275, 281], "egreedywrapp": [275, 288, 290], "env_proof": 275, "obs_spec": 275, "net_valu": 275, "dir": [275, 285, 288], "gettempdir": 275, "argpars": [276, 279], "namespac": [276, 279], "parser": [276, 279], "transformed_env_constructor": [276, 281], "num_env_per_collector": [277, 278], "video_tag": 279, "norm_obs_onli": 279, "use_env_cr": 279, "custom_env_mak": 279, "custom_env": 279, "return_transformed_env": 279, "action_dim_gsd": 279, "state_dim_gsd": 279, "obs_norm_state_dict": 279, "wheter": 279, "maker": 279, "asyncdatacollector": 281, "distributedsyncdatacollector": 281, "submitit_delayed_launch": 281, "raycollector": 281, "samplerwithoutreplac": [281, 289, 293, 296], "tensorstorag": 281, "tensordictroundrobinwrit": 281, "d4rlexperiencereplai": 281, "openmlexperiencereplai": 281, "unboundeddiscretetensorspec": [281, 289, 299], "lazystackedtensorspec": 281, "lazystackedcompositespec": 281, "prompttensordicttoken": 281, "rolloutfrommodel": 281, "tokenizeddatasetload": 281, "create_infinite_iter": 281, "consolidate_spec": 281, "check_no_exclusive_kei": 281, "tensordictrecord": 281, "videorecord": [281, 289], "get_available_librari": 281, "set_exploration_mod": 281, "make_composite_from_td": [281, 294], "braxwrapp": 281, "dmcontrolenv": [281, 287, 292, 299], "dmcontrolwrapp": 281, "mogymenv": 281, "mogymwrapp": 281, "jumanjienv": 281, "jumanjiwrapp": 281, "openmlenv": 281, "vmaswrapp": 281, "qvaluehook": 281, "distributionalqvaluehook": 281, "reset_nois": 281, "cemplann": 281, "mpcplannerbas": 281, "mppiplann": 281, "independentnorm": 281, "truncatednorm": 281, "tanhdelta": [281, 287], "maskedcategor": 281, "inv_softplu": 281, "vmapmodul": 281, "distributionaldqnloss": [281, 288], "discretesacloss": 281, "iqlloss": 281, "cqlloss": 281, "a2closs": 281, "reinforceloss": 281, "dreameractorloss": 281, "dreamermodelloss": 281, "dreamervalueloss": 281, "td0estim": [281, 287], "td1estim": [281, 287], "td0_return_estim": 281, "td0_advantage_estim": 281, "td1_return_estim": 281, "vec_td1_return_estim": 281, "td1_advantage_estim": 281, "vec_td1_advantage_estim": 281, "td_lambda_return_estim": 281, "vec_td_lambda_return_estim": 281, "td_lambda_advantage_estim": 281, "vec_td_lambda_advantage_estim": 281, "generalized_advantage_estim": 281, "vec_generalized_advantage_estim": 281, "reward2go": 281, "distance_loss": [281, 287], "hold_out_net": 281, "hold_out_param": [281, 287], "softupd": [281, 287, 288, 290], "hardupd": [281, 287], "batchsubsampl": [281, 285], "clearcudacach": 281, "countframeslog": 281, "logreward": [281, 285, 288], "optimizerhook": [281, 288], "replaybuffertrain": [281, 285, 288], "rewardnorm": 281, "selectkei": [281, 285], "trainerhookbas": [281, 285, 288], "updateweight": [281, 285, 288], "make_collector_offpolici": 281, "make_collector_onpolici": 281, "make_dqn_loss": 281, "make_redq_loss": 281, "make_redq_model": 281, "make_replay_buff": [281, 287], "make_target_updat": 281, "parallel_env_constructor": [281, 287], "sync_async_collector": 281, "sync_sync_collector": 281, "correct_for_frame_skip": 281, "get_stats_random_rollout": 281, "csvlogger": [281, 288], "mlflowlogg": 281, "wandblogg": 281, "get_logg": 281, "generate_exp_nam": 281, "journei": 282, "textbook": 282, "highlight": 282, "ever": [282, 293], "bump": 282, "think": [282, 289, 293, 299], "benefit": [282, 293, 296], "pr": 282, "ground": [283, 287, 294], "categori": [283, 285], "recycl": [283, 296], "impos": 283, "violat": 283, "noisier": 283, "Their": [283, 293], "sd": 283, "prob_modul": 283, "pick": [283, 287, 288], "tabl": [283, 288], "customari": 283, "hopefulli": [283, 288], "mathbb": [283, 288], "rightarrow": [283, 288], "soften": 283, "backbon": [283, 290, 292, 298], "make_actor": 283, "make_valu": 283, "shared_param": 283, "make_common": 283, "reusabl": [284, 287, 296], "swappabl": [284, 287], "characterist": [284, 287, 294], "trainabl": [284, 287, 295], "whatev": [284, 287], "convent": [284, 287, 290, 293, 294], "smth": [284, 287], "metric": [284, 287], "nutshel": [284, 287], "barto": [284, 293], "chapter": 284, "proxi": 284, "significantli": [284, 287, 288, 293], "next_stat": 284, "value_net_loss": 284, "pow": [284, 287], "therebi": 284, "room": 284, "convers": 284, "signifi": [284, 293], "underperform": 284, "thin": 284, "intric": 284, "outer": [285, 287, 288, 299], "believ": 285, "scheme": [285, 299], "substenti": 285, "_pre_steps_log_hook": 285, "_pre_optim_hook": 285, "sub_batch": 285, "_post_loss_hook": 285, "_post_optim_hook": 285, "post_optim": [285, 288], "_post_optim_log": 285, "post_optim_log": 285, "_post_steps_hook": 285, "_post_steps_log_hook": 285, "post_steps_log": 285, "comment": [285, 288, 298], "extens": [285, 296], "reserv": 285, "logginghook": 285, "logging_hook": 285, "save_dict": 285, "some_valu": 285, "torchsnapshot": 285, "ckpt_backend": 285, "pt": [285, 295], "filepath": 285, "save_train": 285, "load_from_fil": 285, "perfectli": [285, 287, 294], "intern": 286, "author": [287, 288, 289, 290, 293, 294, 296], "vincent": [287, 288, 289, 290, 294, 296], "moen": [287, 288, 289, 290, 294, 296], "assembl": 287, "focus": 287, "straightforward": [287, 288, 296], "overview": [287, 289, 293, 298], "transpar": [287, 290], "understood": 287, "sota": [287, 288, 298], "illustr": [287, 288, 296], "device_count": [287, 288, 290, 295, 299], "loss_dict": 287, "modal": 287, "oblivi": [287, 289, 296], "elementari": 287, "didact": 287, "dilut": 287, "pessimist": [287, 288, 289], "target_actor_network_param": 287, "actor_in_kei": 287, "actor_crit": 287, "noth": [287, 289], "compromis": 287, "hp": 287, "hasattr": 287, "_value_estim": 287, "elif": [287, 288], "notimplementederror": 287, "unknown": 287, "_loss_actor": 287, "td_copi": 287, "actor_network_param": 287, "value_network_param": 287, "_loss_valu": 287, "pred_val": 287, "target_value_network_param": 287, "smooth": [287, 288], "loss_funt": 287, "glue": 287, "_forward": 287, "ndimens": 287, "remaind": 287, "focu": [287, 288, 289], "pixels_onli": [287, 288, 298, 299], "env_librari": 287, "env_task": 287, "env_arg": 287, "friendli": 287, "torchr": 287, "rescal": 287, "presum": 287, "leav": 287, "make_transformed_env": 287, "reward_sc": 287, "double_to_float_list": 287, "double_to_float_inv_list": 287, "marker": 287, "leverag": [287, 293, 299], "env_per_collector": 287, "transform_state_dict": 287, "make_t_env": 287, "parallel_env": [287, 298, 299], "adjust": [287, 293, 294], "seem": [287, 290], "cheat": 287, "10m": 287, "cautiou": 287, "deal": [287, 289, 293, 296], "magnitud": 287, "thousand": [287, 290], "get_env_stat": 287, "proof_env": 287, "5000": [287, 288, 289], "maxim": [287, 294], "recal": [287, 289], "ddpgmlpactor": 287, "ddpgmlpqnet": 287, "materi": 287, "ornsteinuhlenbeckprocesswrapp": 287, "make_ddpg_actor": 287, "q_net": 287, "moduless": 287, "sugges": 287, "1_000_000": [287, 290], "tight": 287, "10_000": [287, 289, 296], "traj_len": [287, 290], "make_record": 287, "recorder_obj": 287, "flavor": 287, "circular": 287, "buffer_s": [287, 288], "random_crop_len": 287, "prb": 287, "buffer_scratch_dir": 287, "temporari": 287, "dirrectori": 287, "trajecotri": 287, "25": [287, 288, 294, 296], "sampel": 287, "dataflow": 287, "ceil_div": 287, "utd": [287, 290], "update_to_data": 287, "realiz": 287, "_must_": 287, "001": [287, 294], "outdat": 287, "trick": [287, 288], "despit": 287, "adam": [287, 288, 289, 290, 293, 294], "optimizer_actor": 287, "lr": [287, 288, 289, 290, 293, 294], "weight_decai": [287, 288], "optimizer_valu": 287, "total_collection_step": 287, "pretti": [287, 296], "rewards_ev": 287, "collected_fram": 287, "pbar": [287, 289, 290, 293, 294], "r0": 287, "numel": [287, 289, 290, 295, 296], "current_fram": 287, "sampled_tensordict": 287, "gn1": 287, "clip_grad_norm_": [287, 289, 293, 294], "gn2": 287, "gn": [287, 294], "td_record": 287, "rn": 287, "rs": 287, "set_descript": [287, 289, 290, 293, 294], "2f": 287, "00": [287, 288, 289, 290, 293, 294, 295, 297], "800": [287, 288], "05": [287, 288, 289, 294, 295], "1757": 287, "06it": [287, 288, 294], "1600": [287, 288], "02": [287, 288, 289, 293, 294, 295, 297], "633": 287, "76it": 287, "3200": [287, 288], "1329": 287, "53it": 287, "48": [287, 288, 294, 295], "4800": [287, 288, 294], "1898": 287, "32it": [287, 288], "67": [287, 288, 292, 294, 295], "84": [287, 288, 290, 294], "72": [287, 288, 294, 295, 296], "195": [287, 294], "267": [287, 294], "71": [287, 288, 294, 295], "88": [287, 288, 294, 295], "56": [287, 288, 294], "5600": 287, "6400": [287, 298], "1187": [287, 294], "23it": 287, "55": [287, 288, 293, 294, 296, 297], "62": [287, 288, 294, 295], "76": [287, 288, 294, 295], "90": [287, 288, 289, 293, 294], "269": [287, 294], "92": [287, 288, 294, 295], "7200": 287, "499": [287, 294], "02it": [287, 288, 294], "185": [287, 294], "43": [287, 288, 293, 294, 295], "452": [287, 294], "70": [287, 288, 289, 293, 294, 295], "85": [287, 288, 294], "80": [287, 288, 289, 293, 294, 296], "8000": [287, 289], "04": [287, 288, 293, 294, 295, 297], "477": [287, 294], "44it": [287, 288], "07": [287, 288, 293, 294], "343": [287, 294], "82": [287, 288, 294, 296], "37": [287, 288, 289, 290, 294], "8800": 287, "449": [287, 294], "11it": [287, 288], "91": [287, 288, 289, 294, 295], "204": [287, 294], "309": [287, 294], "22": [287, 288, 289, 290, 293, 294, 295, 297], "19": [287, 288, 289, 290, 294, 295, 297], "96": [287, 288, 294, 295], "9600": 287, "341": [287, 294], "00it": [287, 288, 294], "192": [287, 288, 294], "349": [287, 294], "21": [287, 288, 289, 292, 293, 294, 296, 297], "10400it": 287, "286": [287, 294], "03it": [287, 288, 289, 294], "31": [287, 288, 293, 294, 295], "60": [287, 288, 289, 293, 294, 298], "49": [287, 288, 294, 295], "216": [287, 294], "79": [287, 288, 294], "93": [287, 288, 290, 294, 295], "plot": [287, 289, 290, 293, 294], "mention": [287, 290, 296, 299], "matplotlib": [287, 289, 290, 293, 294, 296, 299], "pyplot": [287, 289, 290, 293, 294, 296, 299], "plt": [287, 289, 290, 293, 294, 296, 299], "zip": [287, 291], "legend": 287, "xlabel": [287, 290, 293, 294], "ylabel": [287, 293], "tight_layout": 287, "concret": [287, 289], "takeawai": [287, 288], "minut": [287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "021": [287, 297], "mb": [287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299], "coding_ddpg": [287, 297], "jupyt": [287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299], "ipynb": [287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299], "galleri": [287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299], "sphinx": [287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299], "customis": [288, 293], "road": 288, "aspect": 288, "did": [288, 289, 296, 299], "highest": 288, "prerequisit": 288, "familiar": [288, 293, 299], "lookup": 288, "amort": [288, 289], "cart": 288, "pole": 288, "un": 288, "actuat": 288, "frictionless": 288, "upright": [288, 299], "duelingcnndqnet": 288, "is_notebook": 288, "shell": 288, "get_ipython": 288, "__class__": 288, "zmqinteractiveshel": 288, "qtconsol": 288, "terminalinteractiveshel": 288, "ipython": [288, 293, 294], "nameerror": 288, "interpret": 288, "umbrella": 288, "misplac": 288, "misus": 288, "orchestr": 288, "everyth": [288, 290], "five": [288, 289], "64x64": 288, "motion": [288, 294], "obs_norm_sd": 288, "simpler": 288, "get_norm_stat": 288, "test_env": 288, "make_model": 288, "dummy_env": 288, "output_s": [288, 290], "init_bia": 288, "actor_explor": 288, "eps_greedy_v": 288, "eps_greedy_val_env": 288, "get_replay_buff": 288, "n_optim": 288, "themselv": 288, "simplic": [288, 289, 295, 296], "get_collector": 288, "data_collector": 288, "bunch": 288, "concept": [288, 296], "power": 288, "ubiquit": 288, "get_loss_modul": 288, "target_updat": 288, "995": [288, 294], "sensit": 288, "variat": 288, "2e": [288, 294], "wd": 288, "upd": 288, "harder": [288, 298], "5_000": 288, "500000": 288, "100000": 288, "005": 288, "mandatori": [288, 289, 293, 294], "fairer": 288, "budget": [288, 289], "dqn_exp_": 288, "uuid1": [288, 299], "9895": 288, "0737": 288, "tmp": [288, 296], "tmptjr3woya": 288, "dqn_exp_3895a99": 288, "32e5": 288, "11ee": [288, 299], "8ac1": [288, 299], "0242ac120002": [288, 299], "registr": 288, "cumbersom": 288, "buffer_hook": 288, "weight_updat": 288, "descript": [288, 289], "aliv": 288, "09": [288, 294], "52": [288, 289, 294, 295, 296], "20it": 288, "4045": 288, "9346": [288, 294], "4074": [288, 294], "54": [288, 293, 294, 295], "82it": [288, 294], "3982": [288, 294], "41": [288, 293, 294, 296], "29it": 288, "3530": 288, "160": [288, 294, 299], "4434": 288, "47": [288, 290, 294], "28": [288, 293, 294, 295], "73it": 288, "4948": 288, "224": [288, 294], "89it": [288, 294], "3802": 288, "288": [288, 294], "51": [288, 294], "4497": 288, "320": [288, 294, 299], "08it": [288, 289], "4224": 288, "352": [288, 294], "91it": [288, 294], "3923": 288, "384": [288, 289, 294, 296, 297], "3772": 288, "416": [288, 294], "53": [288, 294], "54it": 288, "448": [288, 294], "84it": 288, "4797": 288, "480": [288, 294, 295], "37it": 288, "3712": 288, "64it": 288, "544": [288, 294], "59it": 288, "576": [288, 294], "45it": 288, "608": [288, 294], "65it": 288, "640": 288, "83it": [288, 294], "3952": 288, "672": 288, "58it": [288, 294], "704": 288, "43it": 288, "736": 288, "57": [288, 290, 293, 294, 295], "04it": [288, 294], "768": 288, "21it": 288, "87it": [288, 294], "832": 288, "99it": [288, 290, 294], "864": 288, "78it": 288, "896": 288, "90it": 288, "928": 288, "4134": 288, "960": 288, "33it": 288, "3893": 288, "992": [288, 294], "95it": [288, 289, 294], "28it": 288, "1056": 288, "07it": [288, 289], "1088": 288, "1120": 288, "51it": 288, "1152": 288, "42it": 288, "1184": 288, "4586": 288, "1216": 288, "36it": 288, "1248": 288, "72it": 288, "4676": 288, "1280": 288, "4345": 288, "27it": 288, "1344": 288, "4254": [288, 294], "1376": 288, "93it": [288, 289, 294], "1408": 288, "1440": 288, "74it": [288, 294], "1472": 288, "05it": [288, 294], "4526": 288, "1504": 288, "36": [288, 289, 293, 294, 297], "85it": 288, "1536": 288, "1568": 288, "58": [288, 290, 294], "63it": [288, 289, 294], "1632": 288, "59": [288, 290, 294, 295], "81it": 288, "39": [288, 290, 294, 295, 296, 297], "98it": [288, 294], "1696": 288, "1728": 288, "40": [288, 289, 290, 293, 294, 296], "1760": 288, "47it": 288, "1792": 288, "38it": [288, 294], "1824": 288, "13it": 288, "1856": 288, "1888": 288, "1920": 288, "49it": 288, "1952": 288, "1984": 288, "60it": 288, "2016": 288, "45": [288, 294], "31it": [288, 289, 290], "2048": [288, 295], "2080": 288, "75it": 288, "2112": [288, 294], "2144": 288, "15it": [288, 294], "2176": 288, "41it": 288, "2208": 288, "2240": 288, "55it": 288, "2272": 288, "86it": [288, 294], "2304": 288, "2336": 288, "2368": 288, "16it": 288, "2400": 288, "19it": 288, "2432": 288, "2464": 288, "97it": [288, 294], "2496": 288, "2528": [288, 294], "2560": 288, "2592": 288, "2624": 288, "2656": [288, 294], "88it": [288, 294], "2688": 288, "01it": [288, 294], "2720": [288, 294], "2752": 288, "71it": [288, 294], "2784": 288, "2816": 288, "2848": 288, "2880": 288, "10it": 288, "2912": 288, "2944": [288, 294], "2976": [288, 294], "30it": [288, 290], "3008": 288, "61": [288, 294, 295], "3040": 288, "3072": 288, "3104": 288, "22it": 288, "63": [288, 294], "3136": 288, "96it": [288, 289, 294], "3168": 288, "69it": [288, 294], "65": [288, 294, 295, 296], "3232": [288, 294, 299], "3478": 288, "3264": 288, "66": [288, 294, 295], "3296": 288, "57it": [288, 294], "3328": 288, "3360": 288, "56it": [288, 294], "68": [288, 294], "3392": 288, "3424": 288, "4375": [288, 294], "69": [288, 294], "3456": [288, 294], "3488": 288, "50it": [288, 294], "3520": 288, "3552": 288, "3584": 288, "18it": [288, 289], "3616": 288, "73": [288, 293, 294, 295], "3648": 288, "74": [288, 294, 295], "3680": 288, "75": [288, 294, 295], "3744": 288, "3776": 288, "3808": 288, "77": [288, 294, 295, 296], "3840": 288, "17it": [288, 294], "3872": 288, "78": [288, 294, 295], "3904": 288, "3936": 288, "3968": 288, "4000": [288, 289], "4032": 288, "4064": 288, "4096": 288, "83": [288, 290, 294, 295], "4128": [288, 294], "4160": 288, "80it": [288, 294], "4192": 288, "4256": [288, 294], "14it": 288, "86": [288, 294], "4288": [288, 294], "4320": 288, "39it": [288, 294], "4352": 288, "4384": 288, "4416": 288, "67it": 288, "89": [288, 294, 295, 296], "4448": 288, "4480": 288, "4104": 288, "4512": 288, "4544": 288, "35it": 288, "4576": 288, "4608": 288, "94it": [288, 294], "4640": 288, "4672": [288, 294], "4704": 288, "4736": 288, "4768": 288, "97": [288, 294, 295], "4832": 288, "4864": 288, "12it": 288, "4896": 288, "4928": 288, "4960": 288, "4992": 288, "5024it": 288, "quickli": [288, 293, 299], "print_csv_files_in_fold": 288, "folder_path": 288, "csv_file": 288, "output_str": 288, "dirpath": 288, "walk": [288, 292, 299], "endswith": 288, "strip": 288, "4948333501815796": 288, "44965073466300964": 288, "44965070486068726": 288, "4374600946903229": 288, "42968881130218506": 288, "24512183666229248": 288, "16673794388771057": 288, "21003806591033936": 288, "2711710035800934": 288, "3017497956752777": 288, "40365996956825256": 288, "36540645360946655": 288, "45476290583610535": 288, "grad_norm_0": 288, "9119081497192383": 288, "921438217163086": 288, "6262588500976562": 288, "7592172622680664": 288, "868866205215454": 288, "9554107189178467": 288, "025636672973633": 288, "8793349266052246": 288, "628513336181641": 288, "10000000894069672": 288, "3478264808654785": 288, "qvaluenetwork": 288, "worst": 288, "accuraci": 288, "fanci": 288, "167": [288, 294, 297], "734": 288, "coding_dqn": [288, 297], "demonstr": [289, 293, 294, 299], "talk": 289, "repetit": 289, "six": 289, "sophist": [289, 293], "invent": 289, "theta_k": 289, "frac": 289, "pi_": 289, "exceed": 289, "discourag": [289, 294], "indispens": 289, "analyz": 289, "lingua": 289, "franca": 289, "defaultdict": [289, 294], "has_cuda": [289, 293, 299], "3e": [289, 290, 293], "max_grad_norm": [289, 293], "big": [289, 296, 299], "ourselv": [289, 299], "benefici": 289, "errat": 289, "hamper": [289, 296], "reactiv": 289, "xy": 289, "sub_batch_s": 289, "num_epoch": [289, 293], "entropy_ep": [289, 293], "generalist": 289, "interchang": [289, 295, 296], "panel": 289, "charact": 289, "inverteddoublependulum": 289, "transmit": 289, "stai": 289, "thumb": 289, "supplementari": [289, 299], "told": 289, "stringent": [289, 293], "nevertheless": [289, 296], "confid": [289, 293], "pack": [289, 299], "ran": 289, "f_": 289, "mu_": 289, "difficulti": [289, 299], "brought": [289, 290], "scrictli": 289, "d_ob": 289, "d_action": 289, "policy_modul": [289, 293], "That": 289, "said": 289, "briefli": [289, 293], "refil": [289, 293], "capac": 289, "conveni": [289, 293, 294], "easiest": [289, 293], "mathemat": [289, 293], "tradeoff": [289, 293], "advantage_modul": 289, "lr_schedul": [289, 294], "cosineannealinglr": [289, 294], "eval_str": 289, "tensordict_data": [289, 293], "data_view": [289, 293], "subdata": [289, 293], "cum_reward_str": 289, "4f": [289, 290, 294], "stepcount_str": 289, "param_group": 289, "lr_str": 289, "eval_rollout": 289, "nice": 289, "360": [289, 294], "8920": 289, "0964": 289, "0003": [289, 290, 294], "362": [289, 294], "1287": 289, "3000": 289, "365": [289, 294], "1416": [289, 294], "367": [289, 294], "1634": 289, "0002": [289, 294], "369": [289, 294], "79it": [289, 294], "1950": 289, "6000": 289, "364": [289, 294], "2190": 289, "7000": 289, "2308": 289, "372": [289, 294], "2412": 289, "9000": 289, "375": [289, 294], "2438": 289, "377": [289, 294], "2602": [289, 294], "cap": [289, 296], "figsiz": [289, 294], "subplot": [289, 294, 299], "titl": [289, 290, 293, 294], "bit": [289, 290, 293, 296], "coding_ppo": [289, 297], "rnn": 290, "lstmmodul": 290, "84x84": 290, "accessori": 290, "stamp": 290, "tensordictprim": 290, "se": 290, "flank": 290, "assist": 290, "emb": 290, "n_cell": 290, "customiz": 290, "almost": 290, "bidirect": 290, "wouldn": 290, "make_tensordict_prim": 290, "interpolationmod": 290, "qval": 290, "stoch_polici": 290, "cudnn": 290, "opportun": 290, "coupl": [290, 294, 296], "uniniti": 290, "again": [290, 293, 295, 296, 299], "redund": 290, "strongli": 290, "million": 290, "sake": [290, 295, 296], "20_000": [290, 294], "longest": 290, "npai": 290, "recurrent_st": 290, "action_spread": 290, "1000000": 290, "105": [290, 294], "62it": 290, "0011": [290, 294], "0006": [290, 294], "150": [290, 294], "0004": [290, 294], "609": [290, 294, 297], "2054": [290, 297], "dqn_with_rnn": [290, 297], "tutorials_python": 291, "tutorials_jupyt": 291, "distinct": 292, "humanoid": [292, 299], "env1_obs_kei": 292, "observation_stand": 292, "env2_obs_kei": 292, "observation_walk": 292, "tdreset1": 292, "tdreset2": 292, "tdreset": 292, "policy_common": 292, "policy_stand": 292, "policy_walk": 292, "But": 292, "exclusive_field": [292, 298], "stack_dim": [292, 298], "env1_mak": 292, "env2_mak": 292, "_single_task": 292, "td_rollout": 292, "746": [292, 297], "multi_task": [292, 297], "matteo": 293, "bettini": 293, "marl": 293, "maddpg": 293, "navig": 293, "lidar": 293, "sensor": 293, "collis": 293, "tie": 293, "mappo": 293, "ippo": 293, "phase": [293, 296], "mathbf": 293, "pi": [293, 294], "_t": [293, 294], "fed": [293, 296], "approxim": [293, 299], "decentralis": 293, "literatur": 293, "overcom": 293, "stationari": 293, "concurr": 293, "analys": 293, "gui": 293, "visualis": 293, "rewardsum": 293, "multiagentmlp": 293, "divic": 293, "vmas_devic": 293, "6_000": 293, "team": [293, 298], "n_iter": 293, "minibatch_s": 293, "generalis": 293, "furthermor": 293, "simd": 293, "parallelis": 293, "warp": 293, "todai": 293, "circl": 293, "surround": 293, "dot": [293, 294], "collid": 293, "drag": 293, "elast": 293, "acceler": 293, "penalis": 293, "num_vmas_env": 293, "scenario_nam": 293, "four": [293, 294], "environmnet": 293, "final_rew": 293, "agent_collis": 293, "full_action_spec": 293, "full_reward_spec": 293, "full_done_spec": 293, "enviorn": 293, "stress": 293, "paramount": 293, "episode_reward": 293, "n_rollout_step": 293, "evolut": 293, "yourself": 293, "utilis": 293, "n_actions_per_ag": 293, "n_obs_per_ag": 293, "share_parameters_polici": 293, "policy_net": 293, "denot": 293, "unbatched_action_spec": 293, "carefulli": [293, 299], "grant": 293, "converg": 293, "cooper": 293, "share_parameters_crit": 293, "critic_net": 293, "fantast": 293, "minibatch": 293, "desc": 293, "episode_reward_mean": 293, "episode_reward_mean_list": 293, "critic_param": 293, "target_critic_param": 293, "refresh": 293, "3390621244907379": 293, "1457589715719223": 293, "0210180282592773": 293, "5489939451217651": 293, "7553492784500122": 293, "2441396713256836": 293, "5985326766967773": 293, "5103886127471924": 293, "7321016788482666": 293, "9089064598083496": 293, "xvfb": 293, "pyvirtualdisplai": 293, "1400": [293, 294], "900": 293, "pil": 293, "rendering_callback": 293, "fromarrai": 293, "rgb_arrai": [293, 294], "gif": 293, "save_al": 293, "append_imag": 293, "profici": 293, "master": 293, "837": [293, 297], "multiagent_ppo": [293, 297], "freeli": 294, "sep": 294, "touch": 294, "undertaken": 294, "broader": 294, "challeng": [294, 295], "wider": 294, "algebra": 294, "acquaint": 294, "avenu": 294, "_apply_to_composit": 294, "default_x": 294, "default_i": 294, "_set_se": 294, "torqu": 294, "upward": 294, "angular": 294, "sin": 294, "rad": 294, "sec": 294, "gravit": 294, "angl": 294, "deleg": 294, "new_th": 294, "new_thdot": 294, "thdot": 294, "g_forc": 294, "max_torqu": 294, "angle_norm": 294, "max_spe": 294, "zeros_lik": 294, "albeit": 294, "is_empti": 294, "gen_param": 294, "high_th": 294, "high_thdot": 294, "low_th": 294, "low_thdot": 294, "rng": 294, "lazili": 294, "trivial": 294, "neither": 294, "shortcut": [294, 299], "irrelev": 294, "_make_spec": 294, "td_param": 294, "commong": 294, "pseudo": 294, "render_mod": 294, "render_fp": 294, "random_": 294, "_make_step": 294, "staticmethod": 294, "complic": [294, 296, 299], "showcas": 294, "skeleton": 294, "_apply_transform": [294, 299], "_inv_apply_transform": [294, 299], "subset": [294, 295], "unitari": 294, "sine": 294, "cosin": 294, "sintransform": 294, "costransform": 294, "t_sin": 294, "t_co": 294, "cat_transform": 294, "mdp": 294, "convin": 294, "simple_rollout": 294, "_data": 294, "unexplor": 294, "assumpt": [294, 296], "recreat": 294, "init_td": 294, "traj_return": 294, "last_reward": 294, "is_ipython": 294, "inlin": 294, "get_backend": 294, "ion": 294, "gcf": 294, "clear_output": 294, "625": 294, "0488": 294, "0748": 294, "519": 294, "0499": 294, "4472": 294, "073": 294, "0685": 294, "0408": 294, "552": 294, "5154": 294, "9086": 294, "527": 294, "9385": 294, "155": 294, "2568": 294, "4981": 294, "223": 294, "8929": 294, "4491": 294, "581": 294, "3233": 294, "0664": 294, "596": 294, "1021": 294, "5263": 294, "9579": 294, "5807": 294, "8075": 294, "212": 294, "2009": 294, "5525": 294, "914": 294, "2894": 294, "0115": 294, "0977": 294, "1845": 294, "1830": 294, "4858": 294, "233": 294, "2863": 294, "0297": 294, "464": 294, "4617": 294, "5997": 294, "904": 294, "1647": 294, "0777": 294, "901": 294, "4709": 294, "6813": 294, "8317": 294, "3221": 294, "5554": 294, "276": 294, "3353": 294, "701": 294, "8570": 294, "6656": 294, "463": 294, "7779": 294, "6911": 294, "875": 294, "0796": 294, "7082": 294, "308": 294, "0421": 294, "1496": 294, "5037": 294, "1755": 294, "5029": 294, "9454": 294, "665": 294, "9330": 294, "2118": 294, "444": 294, "0995": 294, "6294": 294, "3146": 294, "2909": 294, "461": 294, "9720": 294, "1298": 294, "9923": 294, "0345": 294, "3438": 294, "3688": 294, "424": 294, "6953": 294, "5233": 294, "411": 294, "8011": 294, "5329": 294, "2677": 294, "6969": 294, "7010": 294, "376": 294, "9352": 294, "7707": 294, "6178": 294, "5646": 294, "348": 294, "7304": 294, "9407": 294, "942": 294, "3882": 294, "7604": 294, "3507": 294, "8928": 294, "258": 294, "6978": 294, "4641": 294, "549": 294, "6047": 294, "5005": 294, "4136": 294, "2993": 294, "3222": 294, "4046": 294, "7314": 294, "275": 294, "6331": 294, "9318": 294, "961": 294, "8331": 294, "1604": 294, "4099": 294, "4761": 294, "125": 294, "4262": 294, "6363": 294, "382": 294, "3593": 294, "7377": 294, "2847": 294, "3443": 294, "867": 294, "3592": 294, "4760": 294, "441": 294, "9950": 294, "8021": 294, "3528": 294, "1214": 294, "708": 294, "4023": 294, "3583": 294, "041": 294, "3801": 294, "0310": 294, "120": [294, 295, 297], "4244": 294, "2039": 294, "4850": 294, "8748": 294, "706": 294, "4897": 294, "9210": 294, "8964": 294, "0832": 294, "3934": 294, "456": 294, "8971": 294, "2933": 294, "3377": 294, "6996": 294, "2274": 294, "8916": 294, "098": 294, "2660": 294, "9110": 294, "4503": 294, "6956": 294, "9172": 294, "4026": 294, "946": 294, "9229": 294, "5205": 294, "294": 294, "8872": 294, "6637": 294, "019": 294, "9281": 294, "2082": 294, "724": 294, "8561": 294, "6574": 294, "357": 294, "4138": 294, "5230": 294, "385": 294, "4065": 294, "5642": 294, "921": 294, "9786": 294, "4129": 294, "5831": 294, "266": 294, "7723": 294, "4152": 294, "0898": 294, "389": 294, "5155": 294, "5376": 294, "5616": 294, "4094": 294, "283": 294, "5333": 294, "4803": 294, "895": 294, "6566": 294, "2588": 294, "662": 294, "4732": 294, "7503": 294, "068": 294, "0714": 294, "3370": 294, "059": 294, "8612": 294, "1915": 294, "3855": 294, "0349": 294, "9644": 294, "4538": 294, "445": 294, "0392": 294, "4080": 294, "1648": 294, "9599": 294, "143": 294, "4284": 294, "5946": 294, "2590": 294, "9181": 294, "4621": 294, "9075": 294, "674": 294, "1772": 294, "9444": 294, "351": 294, "9391": 294, "5595": 294, "8673": 294, "6240": 294, "5919": 294, "0018": 294, "1071": 294, "9127": 294, "251": 294, "9799": 294, "3131": 294, "9612": 294, "9705": 294, "8741": 294, "2230": 294, "0972": 294, "0337": 294, "0350": 294, "0654": 294, "102": [294, 296], "2441": 294, "4596": 294, "103": 294, "4362": 294, "171": 294, "104": 294, "4041": 294, "6907": 294, "4664": 294, "2760": 294, "0299": 294, "9712": 294, "107": 294, "3332": 294, "4479": 294, "772": 294, "108": [294, 296], "4357": 294, "9591": 294, "543": 294, "109": 294, "6216": 294, "1353": 294, "692": 294, "110": 294, "6261": 294, "7086": 294, "496": 294, "111": [294, 296], "7758": 294, "9818": 294, "112": 294, "09it": 294, "7772": 294, "5055": 294, "113": 294, "34it": 294, "5840": 294, "3180": 294, "2083": 294, "115": [294, 296], "5275": 294, "6873": 294, "116": 294, "4107": 294, "1624": 294, "117": 294, "6372": 294, "2571": 294, "118": 294, "4039": 294, "4428": 294, "119": 294, "4728": 294, "5628": 294, "6767": 294, "2466": 294, "522": 294, "121": [294, 299], "5873": 294, "5072": 294, "122": [294, 299], "6548": 294, "3766": 294, "123": 294, "5134": 294, "1955": 294, "124": 294, "2481": 294, "0591": 294, "4500": 294, "3368": 294, "126": 294, "9708": 294, "7059": 294, "127": [294, 296], "3031": 294, "2534": 294, "843": 294, "3327": 294, "6193": 294, "129": 294, "4831": 294, "1172": 294, "2593": 294, "4219": 294, "962": 294, "131": 294, "8380": 294, "899": 294, "132": 294, "2721": 294, "9048": 294, "166": 294, "133": 294, "2419": 294, "5248": 294, "134": 294, "2139": 294, "4278": 294, "135": 294, "0690": 294, "5140": 294, "136": 294, "1140": 294, "7402": 294, "137": 294, "5356": 294, "1636": 294, "138": [294, 296], "0671": 294, "8798": 294, "139": 294, "8918": 294, "3298": 294, "307": 294, "140": 294, "1779": 294, "141": 294, "1771": 294, "3624": 294, "936": 294, "142": 294, "1683": 294, "4810": 294, "9373": 294, "4435": 294, "144": 294, "4396": 294, "8092": 294, "145": 294, "2572": 294, "146": 294, "4212": 294, "0260": 294, "147": 294, "0939": 294, "6478": 294, "605": 294, "148": 294, "6606": 294, "7289": 294, "149": 294, "9300": 294, "7193": 294, "563": 294, "1166": 294, "8514": 294, "151": [294, 296], "9108": 294, "0672": 294, "292": 294, "152": 294, "8591": 294, "3768": 294, "153": 294, "9976": 294, "154": 294, "0576": 294, "0067": 294, "935": 294, "4199": 294, "1722": 294, "156": 294, "8310": 294, "3466": 294, "157": 294, "8631": 294, "2492": 294, "158": [294, 296], "8763": 294, "1277": 294, "159": [294, 297], "5562": 294, "7446": 294, "1082": 294, "9830": 294, "161": 294, "0946": 294, "5229": 294, "162": 294, "4574": 294, "6900": 294, "163": [294, 295], "2229": 294, "0318": 294, "482": 294, "164": 294, "0543": 294, "0817": 294, "761": 294, "165": [294, 296], "2809": 294, "5118": 294, "366": 294, "1142": 294, "5635": 294, "1949": 294, "2327": 294, "982": 294, "168": 294, "0967": 294, "0387": 294, "457": 294, "169": 294, "0782": 294, "2150": 294, "170": 294, "5222": 294, "3725": 294, "9288": 294, "9837": 294, "172": 294, "1099": 294, "173": 294, "8620": 294, "8475": 294, "174": 294, "1807": 294, "175": 294, "1148": 294, "0645": 294, "176": 294, "2751": 294, "8313": 294, "177": 294, "9286": 294, "9770": 294, "178": 294, "5735": 294, "2837": 294, "179": 294, "2926": 294, "9489": 294, "180": 294, "1507": 294, "181": 294, "8724": 294, "3567": 294, "182": 294, "3574": 294, "6140": 294, "183": 294, "7895": 294, "2518": 294, "184": 294, "6146": 294, "8776": 294, "7358": 294, "186": 294, "3722": 294, "8428": 294, "187": 294, "7955": 294, "188": 294, "0092": 294, "7106": 294, "829": 294, "189": 294, "2264": 294, "6919": 294, "190": 294, "1438": 294, "1362": 294, "191": 294, "0618": 294, "8217": 294, "9420": 294, "6765": 294, "193": 294, "7745": 294, "0709": 294, "194": 294, "9478": 294, "6867": 294, "6507": 294, "6225": 294, "196": 294, "2244": 294, "2195": 294, "197": 294, "5385": 294, "9263": 294, "198": [294, 296], "1878": 294, "2374": 294, "199": 294, "8054": 294, "3504": 294, "557": 294, "0766": 294, "6825": 294, "201": 294, "2011": 294, "8393": 294, "202": 294, "0803": 294, "7815": 294, "203": 294, "70it": 294, "8363": 294, "2460": 294, "8643": 294, "2191": 294, "593": 294, "205": 294, "0773": 294, "1343": 294, "206": 294, "8657": 294, "207": 294, "9304": 294, "7584": 294, "208": 294, "8752": 294, "2307": 294, "209": 294, "5250": 294, "4869": 294, "210": [294, 299], "7837": 294, "5762": 294, "211": 294, "6661": 294, "8600": 294, "2502": 294, "1752": 294, "213": 294, "3075": 294, "8871": 294, "214": 294, "9406": 294, "8090": 294, "215": 294, "6291": 294, "8923": 294, "876": 294, "9504": 294, "21e": 294, "217": 294, "7431": 294, "7880": 294, "218": 294, "4463": 294, "5432": 294, "219": 294, "3793": 294, "3313": 294, "220": 294, "8843": 294, "0369": 294, "065": 294, "221": 294, "4828": 294, "8391": 294, "222": 294, "6265": 294, "2913": 294, "947": 294, "5541": 294, "1252": 294, "7342": 294, "2396": 294, "225": 294, "5936": 294, "1924": 294, "226": 294, "9975": 294, "2045": 294, "227": 294, "8367": 294, "9540": 294, "228": 294, "7259": 294, "6743": 294, "229": 294, "4827": 294, "7528": 294, "230": 294, "7361": 294, "8756": 294, "231": 294, "7646": 294, "1116": 294, "232": 294, "5426": 294, "8385": 294, "5662": 294, "8585": 294, "234": 294, "8234": 294, "7930": 294, "235": 294, "2648": 294, "9309": 294, "236": 294, "6817": 294, "237": 294, "0943": 294, "1533": 294, "238": 294, "3045": 294, "0483": 294, "239": 294, "240": [294, 298, 299], "6415": 294, "0201": 294, "241": 294, "4437": 294, "4365": 294, "242": 294, "0358": 294, "4943": 294, "243": 294, "1272": 294, "5003": 294, "1180": 294, "2637": 294, "245": 294, "7197": 294, "0873": 294, "246": 294, "2917": 294, "247": 294, "0160": 294, "0738": 294, "248": 294, "3689": 294, "0120": 294, "249": 294, "5570": 294, "0475": 294, "250": 294, "4423": 294, "2220": 294, "6803": 294, "252": 294, "1465": 294, "7214": 294, "253": 294, "8801": 294, "7034": 294, "254": 294, "9136": 294, "4076": 294, "7589": 294, "5013": 294, "8150": 294, "2241": 294, "257": 294, "0753": 294, "8081": 294, "1951": 294, "8314": 294, "259": 294, "0038": 294, "260": 294, "0889": 294, "4616": 294, "261": 294, "0655": 294, "262": 294, "8333": 294, "9476": 294, "263": 294, "7554": 294, "3798": 294, "264": 294, "3717": 294, "3947": 294, "529": 294, "265": 294, "3060": 294, "6495": 294, "7467": 294, "8889": 294, "8457": 294, "591": 294, "268": 294, "7137": 294, "0536": 294, "771": 294, "1651": 294, "388": 294, "270": 294, "8246": 294, "5709": 294, "281": 294, "271": 294, "7502": 294, "0521": 294, "032": 294, "272": 294, "5475": 294, "7253": 294, "273": 294, "2856": 294, "7130": 294, "274": 294, "2778": 294, "4122": 294, "8368": 294, "1841": 294, "9622": 294, "1603": 294, "003e": 294, "277": 294, "0247": 294, "346": 294, "278": 294, "2238": 294, "6418": 294, "279": 294, "0626": 294, "2538": 294, "280": 294, "0149": 294, "7380": 294, "2167": 294, "8911": 294, "282": 294, "8725": 294, "1983": 294, "8142": 294, "3709": 294, "284": 294, "4989": 294, "285": 294, "6464": 294, "6210": 294, "9726": 294, "0820": 294, "287": 294, "6975": 294, "9091": 294, "4926": 294, "4791": 294, "289": 294, "0905": 294, "3500": 294, "290": 294, "2287": 294, "291": 294, "9918": 294, "5543": 294, "9245": 294, "6444": 294, "631": 294, "293": 294, "0448": 294, "4769": 294, "8566": 294, "7208": 294, "295": 294, "0966": 294, "296": 294, "5303": 294, "1537": 294, "023": 294, "297": 294, "2682": 294, "564": 294, "298": 294, "4318": 294, "5063": 294, "299": 294, "7475": 294, "4190": 294, "8186": 294, "5077": 294, "301": 294, "1883": 294, "5291": 294, "472": 294, "302": 294, "1256": 294, "3998": 294, "303": 294, "3622": 294, "0930": 294, "626": 294, "304": 294, "9500": 294, "0075": 294, "5664": 294, "305": 294, "5697": 294, "3024": 294, "306": 294, "3117": 294, "0052": 294, "006": 294, "0981": 294, "9312": 294, "3873": 294, "0411": 294, "2650": 294, "310": 294, "1656": 294, "0228": 294, "004": 294, "311": 294, "1196": 294, "2478": 294, "312": 294, "7353": 294, "0812": 294, "313": 294, "3022": 294, "758": 294, "314": 294, "1406": 294, "4626": 294, "315": 294, "2156": 294, "851": 294, "316": 294, "92it": 294, "1953": 294, "3774": 294, "317": 294, "6385": 294, "9917": 294, "318": 294, "2764": 294, "905": 294, "319": 294, "6391": 294, "9317": 294, "9748": 294, "2679": 294, "321": 294, "8495": 294, "5125": 294, "322": 294, "8177": 294, "6602": 294, "323": 294, "0704": 294, "5776": 294, "324": 294, "9833": [294, 298], "1339": 294, "402": 294, "325": 294, "1238": 294, "326": 294, "9299": 294, "0227": 294, "327": 294, "7727": 294, "1607": 294, "336": 294, "328": 294, "3958": 294, "3223": 294, "763": 294, "329": 294, "4742": 294, "1797": 294, "330": 294, "0144": 294, "0085": 294, "791": 294, "331": 294, "8284": 294, "0428": 294, "332": 294, "0098": 294, "7365": 294, "333": 294, "4566": 294, "0781": 294, "086": 294, "334": 294, "40it": 294, "3355": 294, "0230": 294, "335": 294, "0423": 294, "076": 294, "3711": 294, "1335": 294, "6855": 294, "337": 294, "0304": 294, "0023": 294, "8459": 294, "338": 294, "9998": 294, "4399": 294, "339": 294, "2303": 294, "1346": 294, "340": 294, "2915": 294, "7116": 294, "5560": 294, "0487": 294, "342": 294, "5119": 294, "061": 294, "3305": 294, "3705": 294, "957": 294, "344": 294, "6068": 294, "345": 294, "5731": 294, "3897": 294, "0376": 294, "347": 294, "0434": 294, "012": 294, "1300": 294, "1215": 294, "0968": 294, "0885": 294, "350": 294, "1348": 294, "0073": 294, "5052": 294, "4184": 294, "2817": 294, "8887": 294, "353": 294, "4779": 294, "1009": 294, "354": 294, "0604": 294, "599": 294, "355": 294, "4486": 294, "1176": 294, "656": 294, "356": 294, "2436": 294, "0668": 294, "8849": 294, "0012": 294, "358": 294, "7511": 294, "8804": 294, "359": 294, "8870": 294, "6728": 294, "8841": 294, "5508": 294, "361": 294, "5242": 294, "0268": 294, "0013": 294, "6185": 294, "363": 294, "1378": 294, "0204": 294, "0355": 294, "685": 294, "4884": 294, "0231": 294, "0770": 294, "0014": 294, "6793": 294, "9834": 294, "863": 294, "368": 294, "6709": 294, "462": 294, "5199": 294, "9790": 294, "370": 294, "9401": 294, "7802": 294, "371": 294, "6723": 294, "2678": 294, "6201": 294, "373": 294, "2184": 294, "7385": 294, "374": 294, "6344": 294, "617": 294, "9945": 294, "0772": 294, "567": 294, "7576": 294, "0398": 294, "3396": 294, "0022": 294, "094": 294, "378": 294, "3073": 294, "4018": 294, "379": 294, "1869": 294, "380": 294, "0481": 294, "1117": 294, "381": 294, "6823": 294, "981": 294, "8305": 294, "0210": 294, "383": [294, 297], "4908": 294, "0272": 294, "538": 294, "3267": 294, "0111": 294, "7965": 294, "1796": 294, "0039": 294, "5396": 294, "386": 294, "3757": 294, "0490": 294, "387": 294, "1394": 294, "4187": 294, "2986": 294, "7954": 294, "1274": 294, "0063": 294, "813": 294, "390": 294, "8706": 294, "0114": 294, "391": 294, "6922": 294, "2423": 294, "392": 294, "9115": 294, "393": 294, "2449": 294, "0783": 294, "394": 294, "0631": 294, "0057": 294, "7444": 294, "395": 294, "3339": 294, "0167": 294, "396": 294, "4806": 294, "397": 294, "4171": 294, "067": 294, "398": 294, "2618": 294, "5809": 294, "399": 294, "0054": 294, "3364": 294, "8733": 294, "0184": 294, "401": 294, "9137": 294, "0113": 294, "025": 294, "0386": 294, "0625": 294, "403": 294, "1332": 294, "0582": 294, "7816": 294, "404": 294, "8341": 294, "0941": 294, "854": 294, "405": 294, "8615": 294, "588": 294, "406": 294, "3849": 294, "008": 294, "407": 294, "9395": 294, "0765": 294, "055": 294, "408": 294, "2685": 294, "2235": 294, "688": 294, "409": 294, "3052": 294, "4249": 294, "410": 294, "6806": 294, "6383": 294, "3721": 294, "9981": 294, "412": 294, "1862": 294, "822": 294, "413": 294, "9811": 294, "0171": 294, "013": 294, "414": 294, "0252": 294, "0049": 294, "6205": 294, "415": 294, "1108": 294, "4921": 294, "9142": 294, "8130": 294, "417": 294, "1725": 294, "0036": 294, "3196": 294, "418": 294, "7795": 294, "0242": 294, "799": 294, "419": 294, "7737": 294, "0138": 294, "420": 294, "1462": 294, "0053": 294, "421": 294, "9226": 294, "6139": 294, "422": 294, "9889": 294, "0403": 294, "423": 294, "6194": 294, "0032": 294, "3989": 294, "0104": 294, "425": 294, "9960": 294, "0009": 294, "6009": 294, "426": 294, "2697": 294, "0914": 294, "427": 294, "1114": 294, "428": 294, "9862": 294, "1932": 294, "429": 294, "0637": 294, "0623": 294, "082": 294, "430": 294, "9906": 294, "2031": 294, "431": 294, "9948": 294, "0895": 294, "432": [294, 297], "1970": 294, "0256": 294, "433": 294, "4231": 294, "0449": 294, "644": 294, "434": 294, "1039": 294, "1973": 294, "435": 294, "4561": 294, "1225": 294, "436": 294, "0211": 294, "2125": 294, "437": 294, "3866": 294, "0050": 294, "7202": 294, "438": 294, "6388": 294, "0072": 294, "439": 294, "0015": 294, "5116": 294, "440": 294, "0432": 294, "0025": 294, "7809": 294, "1925": 294, "0103": 294, "442": 294, "9570": 294, "443": 294, "0871": 294, "5601": 294, "0165": 294, "0047": 294, "6061": 294, "2746": 294, "0027": 294, "7887": 294, "446": 294, "1835": 294, "0035": 294, "855": 294, "447": 294, "8420": 294, "548": 294, "2653": 294, "0126": 294, "9736": 294, "0594": 294, "0119": 294, "6196": 294, "450": 294, "4509": 294, "0373": 294, "451": 294, "0620": 294, "6898": 294, "3235": 294, "687": 294, "453": 294, "5879": 294, "454": 294, "8406": 294, "0694": 294, "455": 294, "8259": 294, "0235": 294, "8500": 294, "0024": 294, "4054": 294, "458": 294, "2027": 294, "0894": 294, "459": 294, "5966": 294, "460": 294, "6942": 294, "0016": 294, "6703": 294, "0145": 294, "8124": 294, "0218": 294, "9196": 294, "0188": 294, "8986": 294, "0884": 294, "0084": 294, "5624": 294, "465": 294, "8862": 294, "5384": 294, "466": 294, "5837": 294, "467": [294, 296, 297], "8954": 294, "0101": 294, "6751": 294, "468": 294, "8063": 294, "0122": 294, "9635": 294, "469": 294, "0692": 294, "4216": 294, "470": 294, "1227": 294, "0586": 294, "162e": 294, "471": 294, "9690": 294, "0074": 294, "4166": 294, "6324": 294, "473": 294, "0778": [294, 299], "474": 294, "8548": 294, "0017": 294, "4408": 294, "475": 294, "8125": 294, "1515": 294, "476": 294, "2733": 294, "0044": 294, "2836": 294, "7497": 294, "7681": 294, "478": 294, "8547": 294, "0105": 294, "7212": 294, "479": 294, "9848": 294, "0019": 294, "6498": 294, "1987": 294, "5473": 294, "481": 294, "8991": 294, "0033": 294, "6091": 294, "9189": 294, "5771": 294, "483": 294, "6781": 294, "7542": 294, "484": 294, "5959": 294, "0064": 294, "4295": 294, "485": 294, "2547": 294, "486": 294, "0636": 294, "547": 294, "487": 294, "0065": 294, "488": 294, "1694": 294, "0083": 294, "5759": 294, "489": 294, "0493": 294, "0021": 294, "7805": 294, "490": 294, "0950": 294, "497": 294, "491": 294, "9717": 294, "3672": 294, "492": 294, "0207": 294, "493": 294, "8266": 294, "0069": 294, "5365": 294, "494": 294, "2623": 294, "5078": 294, "495": 294, "4545": 294, "09636": 294, "8754": 294, "0010": 294, "498": 294, "0031": 294, "8269": 294, "4082": 294, "6642": 294, "2284": 294, "501": 294, "9130": 294, "0008": 294, "502": 294, "503": 294, "7624": 294, "0056": 294, "3858": 294, "504": 294, "0890": 294, "0042": 294, "505": 294, "7505": 294, "2157": 294, "506": 294, "8394": 294, "3413": 294, "507": 294, "9609": 294, "0041": 294, "6905": 294, "508": 294, "8467": 294, "4409": 294, "509": 294, "510": 294, "8128": 294, "3559": 294, "511": 294, "1479": 294, "0264": 294, "1589": 294, "566": 294, "513": 294, "2756": 294, "0046": 294, "5266": 294, "514": 294, "9873": 294, "0112": 294, "9314": 294, "515": 294, "3791": 294, "0721": 294, "516": 294, "4580": 294, "0758": 294, "6114": 294, "517": 294, "2431": 294, "518": 294, "1958": 294, "5553": 294, "8924": 294, "0097": 294, "520": 294, "3737": 294, "0234": 294, "521": 294, "9125": 294, "4623": 294, "3230": 294, "0589": 294, "3784": 294, "523": 294, "9482": 294, "0051": 294, "524": 294, "1979": 294, "0045": 294, "6401": 294, "525": 294, "1588": 294, "0048": 294, "6255": 294, "526": 294, "6084": 294, "3477": 294, "1475": 294, "0209": 294, "528": 294, "7611": 294, "1040": 294, "0099": 294, "0173": 294, "643": 294, "530": 294, "8189": 294, "4358": 294, "531": 294, "9897": 294, "532": 294, "1548": 294, "9751": 294, "533": 294, "6362": 294, "7495": 294, "534": 294, "1749": 294, "9513": 294, "535": 294, "7708": 294, "0371": 294, "536": 294, "2649": 294, "0437": 294, "537": 294, "5491": 294, "0276": 294, "6426": 294, "7294": 294, "078e": 294, "539": 294, "9928": 294, "540": 294, "7937": 294, "0124": 294, "9664": 294, "541": 294, "3342": 294, "542": 294, "2046": 294, "5496": 294, "0956": 294, "0059": 294, "545": 294, "9028": 294, "5843": 294, "546": 294, "0674": 294, "0178": 294, "797": 294, "2815": 294, "0599": 294, "1587": 294, "9276": 294, "8228": 294, "6164": 294, "551": 294, "6850": 294, "9167": 294, "3092": 294, "0670": 294, "9177": 294, "553": 294, "1599": 294, "0043": 294, "554": 294, "6367": 294, "555": 294, "3657": 294, "556": 294, "6694": 294, "2622": 294, "0372": 294, "4841": 294, "558": 294, "2707": 294, "0058": 294, "757": 294, "559": 294, "2267": 294, "5415": 294, "560": 294, "4556": 294, "0163": 294, "561": 294, "1839": 294, "0809": 294, "6262": 294, "562": 294, "0278": 294, "1112": 294, "6155": 294, "565": 294, "1427": 294, "3582": 294, "624": 294, "7870": 294, "9490": 294, "0439": 294, "8796": 294, "568": 294, "8026": 294, "612": 294, "569": 294, "3147": 294, "8486": 294, "570": 294, "7917": 294, "0129": 294, "571": 294, "9553": 294, "0020": 294, "6871": 294, "572": 294, "3132": 294, "0159": 294, "8646": 294, "573": 294, "5320": 294, "0269": 294, "574": 294, "2955": 294, "0245": 294, "575": 294, "3347": 294, "0179": 294, "9718": 294, "1629": 294, "804": 294, "577": 294, "4164": 294, "0070": 294, "4335": 294, "578": 294, "579": 294, "3049": 294, "9063": 294, "580": 294, "8785": 294, "3295": 294, "5184": 294, "0546": 294, "582": 294, "4589": 294, "583": 294, "4697": 294, "2476": 294, "584": 294, "2397": [294, 295, 297], "585": 294, "4953": 294, "1775": 294, "586": 294, "2258": 294, "0110": 294, "7671": 294, "587": 294, "3981": 294, "8590": 294, "0007": 294, "589": 294, "9820": 294, "4221": 294, "590": 294, "1293": 294, "0116": 294, "868": 294, "1675": 294, "5931": 294, "592": 294, "2910": 294, "5219": 294, "2124": 294, "1730": 294, "737": 294, "594": 294, "2914": 294, "0206": 294, "595": 294, "0172": 294, "0945": 294, "0121": 294, "4789": 294, "597": 294, "3805": 294, "598": 294, "3310": 294, "5065": 294, "6028": 294, "6316": 294, "6724": 294, "6523": 294, "601": 294, "0136": 294, "4298": 294, "602": 294, "3524": 294, "2629": 294, "603": 294, "2635": 294, "7839": 294, "604": 294, "6041": 294, "8027": 294, "4170": 294, "4675": 294, "606": 294, "3153": 294, "9316": 294, "607": 294, "0649": 294, "9722": 294, "7989": 294, "0329": 294, "1976": 294, "6852": 294, "610": 294, "4793": 294, "1255": 294, "611": 294, "4581": 294, "0394": 294, "2047": 294, "0326": 294, "613": 294, "8967": 294, "8619": 294, "614": 294, "5906": 294, "6491": 294, "615": 294, "6634": 294, "4394": 294, "616": 294, "0624": 294, "0061": 294, "5676": 294, "3259": 294, "0131": 294, "7733": 294, "618": 294, "7515": 294, "0189": 294, "5575": 294, "619": 294, "9313": 294, "6286": 294, "620": 294, "4325": 294, "7832": 294, "621": 294, "1134": 294, "622": 294, "4572": 294, "0500": 294, "5838": 294, "623": [294, 297, 298], "3818": 294, "8623": 294, "1253": 294, "6622": 294, "subject": 294, "saw": [294, 296], "717": [294, 297], "explain": 295, "semat": 295, "r3mtransform": 295, "embodi": 295, "ai": 295, "env_transform": [295, 299], "s3": 295, "amazonaw": 295, "r3m_50": 295, "374m": 295, "8m": 295, "6mb": 295, "0mb": 295, "2mb": 295, "0m": 295, "9m": 295, "8mb": 295, "6m": 295, "106m": 295, "115m": 295, "5mb": 295, "131m": 295, "7mb": 295, "147m": 295, "162m": 295, "171m": 295, "180m": 295, "195m": 295, "1mb": 295, "202m": 295, "212m": 295, "4mb": 295, "222m": 295, "230m": 295, "9mb": 295, "246m": 295, "261m": 295, "271m": 295, "3mb": 295, "279m": 295, "293m": 295, "302m": 295, "311m": 295, "328m": 295, "342m": 295, "350m": 295, "359m": 295, "367m": 295, "wiser": 295, "conclud": 295, "_storag": [295, 296], "pretrained_model": [295, 297], "supervis": [296, 299], "pull": 296, "temporarili": 296, "drastic": 296, "ram": [296, 299], "batteri": 296, "dataliststorag": 296, "datalazytensorstorag": 296, "tensordidct": 296, "basi": 296, "datalazymemmapstorag": 296, "buffer_list": 296, "lowest": 296, "medium": 296, "buffer_lazytensor": 296, "buffer_lazymemmap": 296, "fullest": 296, "organ": 296, "convini": 296, "mydata": 296, "background": 296, "question": [296, 298], "_i": 296, "artifici": 296, "0892946e": 296, "she": 296, "augment": 296, "pars": 296, "proport": 296, "hist": 296, "barcontain": 296, "artist": 296, "revert": 296, "expens": 296, "reappear": 296, "unfold": 296, "problemat": 296, "window": 296, "4th": 296, "rb_tutori": [296, 297], "torchrl_demo": [297, 298], "torchrl_env": [297, 299], "742": [297, 299], "733": 297, "demo": 298, "icml": 298, "vmoen": 298, "fb": 298, "invest": 298, "platform": 298, "media": 298, "truli": 298, "predominantli": 298, "tensordict1": 298, "tensordict2": 298, "tensordict_sampl": 298, "_sampler": 298, "_sum_tre": 298, "modulenotfounderror": 298, "28791671991348267": 298, "gym_env": 298, "noopresetenv": [298, 299], "lazyconv2d": 298, "backbone_modul": 298, "actor_modul": 298, "params_expand": 298, "tensordict_exp": 298, "base_modul": 298, "0137": 298, "1524": 298, "0641": 298, "copybackward": 298, "8728": 298, "1334": 298, "3494": 298, "6887": 298, "6402": 298, "_safetanhbackward": 298, "1132": 298, "1762": 298, "3430": 298, "2668": 298, "2918": 298, "6239": 298, "roughli": 298, "tensordicts_prealloc": 298, "tensordicts_stack": 298, "tensordict_rollout": [298, 299], "disclaim": 298, "concatmodul": 298, "loss_td": 298, "year": 298, "roadmap": 298, "compris": 298, "contributor": 298, "curiou": 298, "nascent": 298, "unsupervis": 299, "rom": 299, "licens": 299, "pygam": 299, "unifi": 299, "insid": 299, "_build_env": 299, "sphinx_gallery_start_ignor": 299, "filterwarn": 299, "sphinx_gallery_end_ignor": 299, "adventur": 299, "v5": 299, "airraid": 299, "alien": 299, "amidar": 299, "assault": 299, "4306": 299, "void": 299, "reproduct": 299, "tensordict_tprim": 299, "imshow": 299, "axesimag": 299, "0x7ff861adda00": 299, "inconsist": 299, "pong": 299, "swingup": 299, "swingup_spars": 299, "ball_in_cup": 299, "catch": 299, "balance_spars": 299, "three_pol": 299, "two_pol": 299, "finger": 299, "turn_easi": 299, "turn_hard": 299, "fish": 299, "swim": 299, "hopper": 299, "hop": 299, "run_pure_st": 299, "bring_bal": 299, "bring_peg": 299, "insert_bal": 299, "insert_peg": 299, "point_mass": 299, "reacher": 299, "swimmer": 299, "swimmer6": 299, "swimmer15": 299, "walker": 299, "dog": 299, "trot": 299, "humanoid_cmu": 299, "lqr": 299, "lqr_2_1": 299, "lqr_6_2": 299, "quadrup": 299, "escap": 299, "stacker": 299, "stack_2": 299, "stack_4": 299, "wrapper1": 299, "wrapper2": 299, "obviou": 299, "truth": 299, "env0": 299, "env_transformed_bi": 299, "stanc": 299, "transformeddistribut": 299, "base_dist": 299, "concat": 299, "mofidi": 299, "transformedenviron": 299, "moderet": 299, "computation": 299, "legitim": 299, "incom": 299, "amongst": 299, "wor": 299, "convention": 299, "scope": 299, "markovian": 299, "3288080526": 299, "constain": 299, "bar_": 299, "get_someth": 299, "bar_65553e50": 299, "32e4": 299, "aargh": 299, "foo_list": 299, "vec_env": 299, "_dispatch_caller_parallel": 299, "0x7ff7c089f640": 299, "bar_6ca0f91a": 299, "96fe": 299, "bar_6ca09c86": 299, "a2c6": 299, "bar_6c97b8aa": 299, "bf82": 299, "parallen": 299, "particularili": 299, "evolv": 299, "steadi": 299, "approx": 299, "1840": 299, "1575": 299, "1173": 299, "2417": 299, "1994": 299, "_extra_st": 299, "observation_ssq": 299, "observation_sum": 299, "3030": 299, "1034": 299, "2539": 299, "1674": 299, "2824": 299, "dispach": 299, "absor": 299}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "RandomPolicy"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "DiscreteTensorSpec"], [28, 0, 1, "", "LazyStackedCompositeSpec"], [29, 0, 1, "", "LazyStackedTensorSpec"], [30, 0, 1, "", "MultiDiscreteTensorSpec"], [31, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [32, 0, 1, "", "MultiStep"], [33, 0, 1, "", "OneHotDiscreteTensorSpec"], [34, 0, 1, "", "PairwiseDataset"], [35, 0, 1, "", "PrioritizedReplayBuffer"], [36, 0, 1, "", "PromptData"], [37, 0, 1, "", "PromptTensorDictTokenizer"], [38, 0, 1, "", "ReplayBuffer"], [39, 0, 1, "", "RewardData"], [40, 0, 1, "", "RolloutFromModel"], [41, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [42, 0, 1, "", "TensorDictReplayBuffer"], [43, 0, 1, "", "TensorDictTokenizer"], [44, 0, 1, "", "TensorSpec"], [45, 0, 1, "", "TokenizedDatasetLoader"], [46, 0, 1, "", "UnboundedContinuousTensorSpec"], [47, 0, 1, "", "UnboundedDiscreteTensorSpec"], [48, 0, 1, "", "check_no_exclusive_keys"], [49, 0, 1, "", "consolidate_spec"], [50, 0, 1, "", "create_infinite_iterator"], [53, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "empty"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "items"], [28, 1, 1, "", "keys"], [28, 1, 1, "", "lock_"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unlock_"], [28, 1, 1, "", "values"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[34, 3, 1, "", "batch_size"], [34, 3, 1, "", "device"], [34, 1, 1, "", "from_dataset"], [34, 1, 1, "", "from_dict"], [34, 1, 1, "", "from_tensordict"], [34, 1, 1, "", "get"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "set"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to_tensordict"], [34, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "sample"]], "torchrl.data.PromptData": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_dict"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "append_transform"], [38, 1, 1, "", "empty"], [38, 1, 1, "", "extend"], [38, 1, 1, "", "insert_transform"], [38, 1, 1, "", "sample"]], "torchrl.data.RewardData": [[39, 3, 1, "", "batch_size"], [39, 3, 1, "", "device"], [39, 1, 1, "", "from_dict"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[40, 1, 1, "", "create_rollout_td"], [40, 1, 1, "", "generate"], [40, 1, 1, "", "kl_step"], [40, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[45, 1, 1, "", "dataset_to_tensordict"], [45, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "zero"]], "torchrl.data.datasets": [[51, 0, 1, "", "D4RLExperienceReplay"], [52, 0, 1, "", "OpenMLExperienceReplay"]], "torchrl.data.datasets.D4RLExperienceReplay": [[51, 1, 1, "", "add"], [51, 1, 1, "", "append_transform"], [51, 1, 1, "", "empty"], [51, 1, 1, "", "extend"], [51, 1, 1, "", "insert_transform"], [51, 1, 1, "", "sample"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "sample"]], "torchrl.data.replay_buffers": [[54, 0, 1, "", "LazyMemmapStorage"], [55, 0, 1, "", "LazyTensorStorage"], [56, 0, 1, "", "ListStorage"], [57, 0, 1, "", "PrioritizedSampler"], [58, 0, 1, "", "RandomSampler"], [59, 0, 1, "", "RoundRobinWriter"], [60, 0, 1, "", "Sampler"], [61, 0, 1, "", "SamplerWithoutReplacement"], [62, 0, 1, "", "Storage"], [63, 0, 1, "", "TensorDictRoundRobinWriter"], [64, 0, 1, "", "TensorStorage"], [65, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[54, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[55, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[56, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[57, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[59, 1, 1, "", "add"], [59, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[62, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[63, 1, 1, "", "add"], [63, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[64, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[65, 1, 1, "", "add"], [65, 1, 1, "", "extend"]], "torchrl.envs": [[66, 0, 1, "", "EnvBase"], [67, 0, 1, "", "EnvCreator"], [68, 0, 1, "", "EnvMetaData"], [69, 0, 1, "", "GymLikeEnv"], [70, 2, 1, "", "ModelBasedEnvBase"], [71, 0, 1, "", "MultiThreadedEnv"], [72, 0, 1, "", "ParallelEnv"], [73, 0, 1, "", "SerialEnv"], [70, 1, 1, "", "rand_step"], [70, 1, 1, "", "reset"], [70, 1, 1, "", "rollout"], [70, 1, 1, "", "set_seed"], [70, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[66, 3, 1, "", "action_key"], [66, 3, 1, "", "action_spec"], [66, 1, 1, "", "add_module"], [66, 1, 1, "", "apply"], [66, 3, 1, "", "batch_locked"], [66, 1, 1, "", "bfloat16"], [66, 1, 1, "", "buffers"], [66, 1, 1, "", "children"], [66, 1, 1, "", "compile"], [66, 1, 1, "", "cpu"], [66, 1, 1, "", "cuda"], [66, 3, 1, "", "done_key"], [66, 3, 1, "", "done_spec"], [66, 1, 1, "", "double"], [66, 1, 1, "", "eval"], [66, 1, 1, "", "extra_repr"], [66, 1, 1, "", "fake_tensordict"], [66, 1, 1, "", "float"], [66, 1, 1, "", "forward"], [66, 1, 1, "", "get_buffer"], [66, 1, 1, "", "get_extra_state"], [66, 1, 1, "", "get_parameter"], [66, 1, 1, "", "get_submodule"], [66, 1, 1, "", "half"], [66, 1, 1, "", "ipu"], [66, 1, 1, "", "load_state_dict"], [66, 1, 1, "", "modules"], [66, 1, 1, "", "named_buffers"], [66, 1, 1, "", "named_children"], [66, 1, 1, "", "named_modules"], [66, 1, 1, "", "named_parameters"], [66, 1, 1, "", "parameters"], [66, 1, 1, "", "rand_action"], [66, 1, 1, "id0", "rand_step"], [66, 1, 1, "", "register_backward_hook"], [66, 1, 1, "", "register_buffer"], [66, 1, 1, "", "register_forward_hook"], [66, 1, 1, "", "register_forward_pre_hook"], [66, 1, 1, "", "register_full_backward_hook"], [66, 1, 1, "", "register_full_backward_pre_hook"], [66, 1, 1, "", "register_load_state_dict_post_hook"], [66, 1, 1, "", "register_module"], [66, 1, 1, "", "register_parameter"], [66, 1, 1, "", "register_state_dict_pre_hook"], [66, 1, 1, "", "requires_grad_"], [66, 1, 1, "id1", "reset"], [66, 3, 1, "", "reward_key"], [66, 3, 1, "", "reward_spec"], [66, 1, 1, "id2", "rollout"], [66, 1, 1, "", "set_extra_state"], [66, 1, 1, "id3", "set_seed"], [66, 1, 1, "", "share_memory"], [66, 3, 1, "", "specs"], [66, 1, 1, "", "state_dict"], [66, 1, 1, "id4", "step"], [66, 1, 1, "", "to"], [66, 1, 1, "", "to_empty"], [66, 1, 1, "", "train"], [66, 1, 1, "", "type"], [66, 1, 1, "", "xpu"], [66, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[69, 3, 1, "", "action_key"], [69, 3, 1, "", "action_spec"], [69, 1, 1, "", "add_module"], [69, 1, 1, "", "apply"], [69, 3, 1, "", "batch_locked"], [69, 1, 1, "", "bfloat16"], [69, 1, 1, "", "buffers"], [69, 1, 1, "", "children"], [69, 1, 1, "", "close"], [69, 1, 1, "", "compile"], [69, 1, 1, "", "cpu"], [69, 1, 1, "", "cuda"], [69, 3, 1, "", "done_key"], [69, 3, 1, "", "done_spec"], [69, 1, 1, "", "double"], [69, 1, 1, "", "eval"], [69, 1, 1, "", "extra_repr"], [69, 1, 1, "", "fake_tensordict"], [69, 1, 1, "", "float"], [69, 1, 1, "", "forward"], [69, 1, 1, "", "get_buffer"], [69, 1, 1, "", "get_extra_state"], [69, 1, 1, "", "get_parameter"], [69, 1, 1, "", "get_submodule"], [69, 1, 1, "", "half"], [69, 1, 1, "", "ipu"], [69, 1, 1, "", "load_state_dict"], [69, 1, 1, "", "modules"], [69, 1, 1, "", "named_buffers"], [69, 1, 1, "", "named_children"], [69, 1, 1, "", "named_modules"], [69, 1, 1, "", "named_parameters"], [69, 1, 1, "", "parameters"], [69, 1, 1, "", "rand_action"], [69, 1, 1, "", "rand_step"], [69, 1, 1, "", "read_action"], [69, 1, 1, "", "read_done"], [69, 1, 1, "", "read_obs"], [69, 1, 1, "", "read_reward"], [69, 1, 1, "", "register_backward_hook"], [69, 1, 1, "", "register_buffer"], [69, 1, 1, "", "register_forward_hook"], [69, 1, 1, "", "register_forward_pre_hook"], [69, 1, 1, "", "register_full_backward_hook"], [69, 1, 1, "", "register_full_backward_pre_hook"], [69, 1, 1, "", "register_load_state_dict_post_hook"], [69, 1, 1, "", "register_module"], [69, 1, 1, "", "register_parameter"], [69, 1, 1, "", "register_state_dict_pre_hook"], [69, 1, 1, "", "requires_grad_"], [69, 1, 1, "", "reset"], [69, 3, 1, "", "reward_key"], [69, 3, 1, "", "reward_spec"], [69, 1, 1, "", "rollout"], [69, 1, 1, "", "set_extra_state"], [69, 1, 1, "", "set_info_dict_reader"], [69, 1, 1, "", "set_seed"], [69, 1, 1, "", "share_memory"], [69, 3, 1, "", "specs"], [69, 1, 1, "", "state_dict"], [69, 1, 1, "", "step"], [69, 1, 1, "", "to"], [69, 1, 1, "", "to_empty"], [69, 1, 1, "", "train"], [69, 1, 1, "", "type"], [69, 1, 1, "", "xpu"], [69, 1, 1, "", "zero_grad"]], "torchrl.envs.MultiThreadedEnv": [[71, 3, 1, "", "action_key"], [71, 3, 1, "", "action_spec"], [71, 1, 1, "", "add_module"], [71, 1, 1, "", "apply"], [71, 3, 1, "", "batch_locked"], [71, 1, 1, "", "bfloat16"], [71, 1, 1, "", "buffers"], [71, 1, 1, "", "children"], [71, 1, 1, "", "close"], [71, 1, 1, "", "compile"], [71, 1, 1, "", "cpu"], [71, 1, 1, "", "cuda"], [71, 3, 1, "", "done_key"], [71, 3, 1, "", "done_spec"], [71, 1, 1, "", "double"], [71, 1, 1, "", "eval"], [71, 1, 1, "", "extra_repr"], [71, 1, 1, "", "fake_tensordict"], [71, 1, 1, "", "float"], [71, 1, 1, "", "forward"], [71, 1, 1, "", "get_buffer"], [71, 1, 1, "", "get_extra_state"], [71, 1, 1, "", "get_parameter"], [71, 1, 1, "", "get_submodule"], [71, 1, 1, "", "half"], [71, 1, 1, "", "ipu"], [71, 1, 1, "", "load_state_dict"], [71, 1, 1, "", "modules"], [71, 1, 1, "", "named_buffers"], [71, 1, 1, "", "named_children"], [71, 1, 1, "", "named_modules"], [71, 1, 1, "", "named_parameters"], [71, 1, 1, "", "parameters"], [71, 1, 1, "", "rand_action"], [71, 1, 1, "", "rand_step"], [71, 1, 1, "", "register_backward_hook"], [71, 1, 1, "", "register_buffer"], [71, 1, 1, "", "register_forward_hook"], [71, 1, 1, "", "register_forward_pre_hook"], [71, 1, 1, "", "register_full_backward_hook"], [71, 1, 1, "", "register_full_backward_pre_hook"], [71, 1, 1, "", "register_load_state_dict_post_hook"], [71, 1, 1, "", "register_module"], [71, 1, 1, "", "register_parameter"], [71, 1, 1, "", "register_state_dict_pre_hook"], [71, 1, 1, "", "requires_grad_"], [71, 1, 1, "", "reset"], [71, 3, 1, "", "reward_key"], [71, 3, 1, "", "reward_spec"], [71, 1, 1, "", "rollout"], [71, 1, 1, "", "set_extra_state"], [71, 1, 1, "", "set_seed"], [71, 1, 1, "", "share_memory"], [71, 3, 1, "", "specs"], [71, 1, 1, "", "state_dict"], [71, 1, 1, "", "step"], [71, 1, 1, "", "to"], [71, 1, 1, "", "to_empty"], [71, 1, 1, "", "train"], [71, 1, 1, "", "type"], [71, 1, 1, "", "xpu"], [71, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[72, 3, 1, "", "action_key"], [72, 3, 1, "", "action_spec"], [72, 1, 1, "", "add_module"], [72, 1, 1, "", "apply"], [72, 3, 1, "", "batch_locked"], [72, 1, 1, "", "bfloat16"], [72, 1, 1, "", "buffers"], [72, 1, 1, "", "children"], [72, 1, 1, "", "compile"], [72, 1, 1, "", "cpu"], [72, 1, 1, "", "cuda"], [72, 3, 1, "", "done_key"], [72, 3, 1, "", "done_spec"], [72, 1, 1, "", "double"], [72, 1, 1, "", "eval"], [72, 1, 1, "", "extra_repr"], [72, 1, 1, "", "fake_tensordict"], [72, 1, 1, "", "float"], [72, 1, 1, "", "forward"], [72, 1, 1, "", "get_buffer"], [72, 1, 1, "", "get_extra_state"], [72, 1, 1, "", "get_parameter"], [72, 1, 1, "", "get_submodule"], [72, 1, 1, "", "half"], [72, 1, 1, "", "ipu"], [72, 1, 1, "", "load_state_dict"], [72, 1, 1, "", "modules"], [72, 1, 1, "", "named_buffers"], [72, 1, 1, "", "named_children"], [72, 1, 1, "", "named_modules"], [72, 1, 1, "", "named_parameters"], [72, 1, 1, "", "parameters"], [72, 1, 1, "", "rand_action"], [72, 1, 1, "", "rand_step"], [72, 1, 1, "", "register_backward_hook"], [72, 1, 1, "", "register_buffer"], [72, 1, 1, "", "register_forward_hook"], [72, 1, 1, "", "register_forward_pre_hook"], [72, 1, 1, "", "register_full_backward_hook"], [72, 1, 1, "", "register_full_backward_pre_hook"], [72, 1, 1, "", "register_load_state_dict_post_hook"], [72, 1, 1, "", "register_module"], [72, 1, 1, "", "register_parameter"], [72, 1, 1, "", "register_state_dict_pre_hook"], [72, 1, 1, "", "requires_grad_"], [72, 1, 1, "", "reset"], [72, 3, 1, "", "reward_key"], [72, 3, 1, "", "reward_spec"], [72, 1, 1, "", "rollout"], [72, 1, 1, "", "set_extra_state"], [72, 1, 1, "", "set_seed"], [72, 1, 1, "", "share_memory"], [72, 3, 1, "", "specs"], [72, 1, 1, "", "state_dict"], [72, 1, 1, "", "step"], [72, 1, 1, "", "to"], [72, 1, 1, "", "to_empty"], [72, 1, 1, "", "train"], [72, 1, 1, "", "type"], [72, 1, 1, "", "update_kwargs"], [72, 1, 1, "", "xpu"], [72, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[73, 3, 1, "", "action_key"], [73, 3, 1, "", "action_spec"], [73, 1, 1, "", "add_module"], [73, 1, 1, "", "apply"], [73, 3, 1, "", "batch_locked"], [73, 1, 1, "", "bfloat16"], [73, 1, 1, "", "buffers"], [73, 1, 1, "", "children"], [73, 1, 1, "", "compile"], [73, 1, 1, "", "cpu"], [73, 1, 1, "", "cuda"], [73, 3, 1, "", "done_key"], [73, 3, 1, "", "done_spec"], [73, 1, 1, "", "double"], [73, 1, 1, "", "eval"], [73, 1, 1, "", "extra_repr"], [73, 1, 1, "", "fake_tensordict"], [73, 1, 1, "", "float"], [73, 1, 1, "", "forward"], [73, 1, 1, "", "get_buffer"], [73, 1, 1, "", "get_extra_state"], [73, 1, 1, "", "get_parameter"], [73, 1, 1, "", "get_submodule"], [73, 1, 1, "", "half"], [73, 1, 1, "", "ipu"], [73, 1, 1, "", "load_state_dict"], [73, 1, 1, "", "modules"], [73, 1, 1, "", "named_buffers"], [73, 1, 1, "", "named_children"], [73, 1, 1, "", "named_modules"], [73, 1, 1, "", "named_parameters"], [73, 1, 1, "", "parameters"], [73, 1, 1, "", "rand_action"], [73, 1, 1, "", "rand_step"], [73, 1, 1, "", "register_backward_hook"], [73, 1, 1, "", "register_buffer"], [73, 1, 1, "", "register_forward_hook"], [73, 1, 1, "", "register_forward_pre_hook"], [73, 1, 1, "", "register_full_backward_hook"], [73, 1, 1, "", "register_full_backward_pre_hook"], [73, 1, 1, "", "register_load_state_dict_post_hook"], [73, 1, 1, "", "register_module"], [73, 1, 1, "", "register_parameter"], [73, 1, 1, "", "register_state_dict_pre_hook"], [73, 1, 1, "", "requires_grad_"], [73, 1, 1, "", "reset"], [73, 3, 1, "", "reward_key"], [73, 3, 1, "", "reward_spec"], [73, 1, 1, "", "rollout"], [73, 1, 1, "", "set_extra_state"], [73, 1, 1, "", "set_seed"], [73, 1, 1, "", "share_memory"], [73, 3, 1, "", "specs"], [73, 1, 1, "", "state_dict"], [73, 1, 1, "", "step"], [73, 1, 1, "", "to"], [73, 1, 1, "", "to_empty"], [73, 1, 1, "", "train"], [73, 1, 1, "", "type"], [73, 1, 1, "", "update_kwargs"], [73, 1, 1, "", "xpu"], [73, 1, 1, "", "zero_grad"]], "torchrl.envs.libs.brax": [[74, 2, 1, "", "BraxEnv"], [75, 2, 1, "", "BraxWrapper"]], "torchrl.envs.libs.dm_control": [[76, 2, 1, "", "DMControlEnv"], [77, 2, 1, "", "DMControlWrapper"]], "torchrl.envs.libs.gym": [[78, 2, 1, "", "GymEnv"], [79, 2, 1, "", "GymWrapper"], [80, 2, 1, "", "MOGymEnv"], [81, 2, 1, "", "MOGymWrapper"], [82, 2, 1, "", "gym_backend"], [83, 2, 1, "", "set_gym_backend"]], "torchrl.envs.libs.habitat": [[84, 2, 1, "", "HabitatEnv"]], "torchrl.envs.libs.jumanji": [[85, 2, 1, "", "JumanjiEnv"], [86, 2, 1, "", "JumanjiWrapper"]], "torchrl.envs.libs.openml": [[87, 2, 1, "", "OpenMLEnv"]], "torchrl.envs.libs.vmas": [[88, 2, 1, "", "VmasEnv"], [89, 2, 1, "", "VmasWrapper"]], "torchrl.envs.model_based.dreamer": [[90, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[91, 0, 1, "", "BinarizeReward"], [92, 0, 1, "", "CatFrames"], [93, 0, 1, "", "CatTensors"], [94, 0, 1, "", "CenterCrop"], [95, 0, 1, "", "Compose"], [96, 0, 1, "", "DiscreteActionProjection"], [97, 0, 1, "", "DoubleToFloat"], [98, 0, 1, "", "ExcludeTransform"], [99, 0, 1, "", "FiniteTensorDictCheck"], [100, 0, 1, "", "FlattenObservation"], [101, 0, 1, "", "FrameSkipTransform"], [102, 0, 1, "", "GrayScale"], [103, 0, 1, "", "InitTracker"], [104, 0, 1, "", "KLRewardTransform"], [105, 0, 1, "", "NoopResetEnv"], [106, 0, 1, "", "ObservationNorm"], [107, 0, 1, "", "ObservationTransform"], [108, 0, 1, "", "PinMemoryTransform"], [109, 0, 1, "", "R3MTransform"], [110, 0, 1, "", "RandomCropTensorDict"], [111, 0, 1, "", "RenameTransform"], [112, 0, 1, "", "Resize"], [113, 0, 1, "", "Reward2GoTransform"], [114, 0, 1, "", "RewardClipping"], [115, 0, 1, "", "RewardScaling"], [116, 0, 1, "", "RewardSum"], [117, 0, 1, "", "SelectTransform"], [118, 0, 1, "", "SqueezeTransform"], [119, 0, 1, "", "StepCounter"], [120, 0, 1, "", "TargetReturn"], [121, 0, 1, "", "TensorDictPrimer"], [122, 0, 1, "", "TimeMaxPool"], [123, 0, 1, "", "ToTensorImage"], [124, 0, 1, "", "Transform"], [125, 0, 1, "", "TransformedEnv"], [126, 0, 1, "", "UnsqueezeTransform"], [127, 0, 1, "", "VC1Transform"], [128, 0, 1, "", "VIPRewardTransform"], [129, 0, 1, "", "VIPTransform"], [130, 0, 1, "", "VecNorm"], [131, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.BinarizeReward": [[91, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[92, 1, 1, "", "forward"], [92, 1, 1, "", "reset"], [92, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[93, 1, 1, "", "forward"], [93, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[94, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Compose": [[95, 1, 1, "", "forward"], [95, 1, 1, "", "reset"], [95, 1, 1, "", "to"], [95, 1, 1, "", "transform_input_spec"], [95, 1, 1, "", "transform_observation_spec"], [95, 1, 1, "", "transform_output_spec"], [95, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[96, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.DoubleToFloat": [[97, 1, 1, "", "transform_input_spec"], [97, 1, 1, "", "transform_observation_spec"], [97, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[98, 1, 1, "", "forward"], [98, 1, 1, "", "reset"], [98, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[99, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[100, 1, 1, "", "forward"], [100, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[101, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[102, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[103, 1, 1, "", "forward"], [103, 1, 1, "", "reset"], [103, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[104, 1, 1, "", "forward"], [104, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.NoopResetEnv": [[105, 1, 1, "", "reset"]], "torchrl.envs.transforms.ObservationNorm": [[106, 1, 1, "", "init_stats"], [106, 1, 1, "", "transform_input_spec"], [106, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[108, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[109, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[110, 1, 1, "", "forward"]], "torchrl.envs.transforms.RenameTransform": [[111, 1, 1, "", "forward"], [111, 1, 1, "", "transform_input_spec"], [111, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[112, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[113, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[114, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[115, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[116, 1, 1, "", "forward"], [116, 1, 1, "", "reset"], [116, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[117, 1, 1, "", "forward"], [117, 1, 1, "", "reset"], [117, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.StepCounter": [[119, 1, 1, "", "forward"], [119, 1, 1, "", "reset"], [119, 1, 1, "", "transform_input_spec"], [119, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TargetReturn": [[120, 1, 1, "", "forward"], [120, 1, 1, "", "reset"], [120, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[121, 1, 1, "", "forward"], [121, 1, 1, "", "reset"], [121, 1, 1, "", "to"], [121, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[122, 1, 1, "", "forward"], [122, 1, 1, "", "reset"], [122, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[123, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[124, 1, 1, "", "forward"], [124, 1, 1, "", "reset"], [124, 1, 1, "", "to"], [124, 1, 1, "", "transform_done_spec"], [124, 1, 1, "", "transform_input_spec"], [124, 1, 1, "", "transform_observation_spec"], [124, 1, 1, "", "transform_output_spec"], [124, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[125, 3, 1, "", "action_spec"], [125, 3, 1, "", "batch_locked"], [125, 3, 1, "", "done_spec"], [125, 1, 1, "", "eval"], [125, 3, 1, "", "input_spec"], [125, 1, 1, "", "load_state_dict"], [125, 3, 1, "", "observation_spec"], [125, 3, 1, "", "output_spec"], [125, 3, 1, "", "reward_spec"], [125, 1, 1, "", "set_missing_tolerance"], [125, 1, 1, "", "set_seed"], [125, 1, 1, "", "state_dict"], [125, 3, 1, "", "state_spec"], [125, 1, 1, "", "to"], [125, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[126, 1, 1, "", "transform_input_spec"], [126, 1, 1, "", "transform_observation_spec"], [126, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[127, 1, 1, "", "forward"], [127, 1, 1, "", "make_noload_model"], [127, 1, 1, "", "to"], [127, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[128, 1, 1, "", "forward"], [128, 1, 1, "", "reset"]], "torchrl.envs.transforms.VIPTransform": [[129, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[130, 1, 1, "", "build_td_for_shared_vecnorm"], [130, 1, 1, "", "forward"], [130, 1, 1, "", "get_extra_state"], [130, 1, 1, "", "set_extra_state"], [130, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[132, 2, 1, "", "check_env_specs"], [133, 2, 1, "", "exploration_mode"], [134, 2, 1, "", "exploration_type"], [135, 2, 1, "", "get_available_libraries"], [136, 2, 1, "", "make_composite_from_td"], [137, 2, 1, "", "set_exploration_mode"], [138, 2, 1, "", "set_exploration_type"], [139, 2, 1, "", "step_mdp"]], "torchrl.modules": [[140, 0, 1, "", "CEMPlanner"], [141, 0, 1, "", "ConvNet"], [142, 0, 1, "", "DdpgCnnActor"], [143, 0, 1, "", "DdpgCnnQNet"], [144, 0, 1, "", "DdpgMlpActor"], [145, 0, 1, "", "DdpgMlpQNet"], [146, 0, 1, "", "Delta"], [147, 0, 1, "", "DistributionalDQNnet"], [148, 0, 1, "", "DistributionalQValueHook"], [149, 0, 1, "", "DreamerActor"], [150, 0, 1, "", "DuelingCnnDQNet"], [151, 0, 1, "", "IndependentNormal"], [152, 0, 1, "", "LSTMModule"], [153, 0, 1, "", "LSTMNet"], [154, 0, 1, "", "MLP"], [155, 0, 1, "", "MPCPlannerBase"], [156, 0, 1, "", "MPPIPlanner"], [157, 0, 1, "", "MaskedCategorical"], [158, 0, 1, "", "MultiAgentMLP"], [159, 0, 1, "", "NoisyLazyLinear"], [160, 0, 1, "", "NoisyLinear"], [161, 0, 1, "", "NormalParamWrapper"], [162, 0, 1, "", "ObsDecoder"], [163, 0, 1, "", "ObsEncoder"], [164, 0, 1, "", "OneHotCategorical"], [165, 0, 1, "", "QMixer"], [166, 0, 1, "", "QValueHook"], [167, 0, 1, "", "RSSMPosterior"], [168, 0, 1, "", "RSSMPrior"], [169, 0, 1, "", "Squeeze2dLayer"], [170, 0, 1, "", "SqueezeLayer"], [171, 0, 1, "", "TanhDelta"], [172, 0, 1, "", "TanhNormal"], [173, 0, 1, "", "TruncatedNormal"], [174, 0, 1, "", "VDNMixer"], [175, 0, 1, "", "VmapModule"], [176, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[140, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[141, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[142, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[143, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[144, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[145, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[146, 1, 1, "", "log_prob"], [146, 3, 1, "", "mean"], [146, 3, 1, "", "mode"], [146, 1, 1, "", "rsample"], [146, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[147, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[149, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[150, 1, 1, "", "forward"]], "torchrl.modules.IndependentNormal": [[151, 3, 1, "", "mode"]], "torchrl.modules.LSTMModule": [[152, 1, 1, "", "forward"], [152, 1, 1, "", "set_recurrent_mode"], [152, 1, 1, "", "set_temporal_mode"]], "torchrl.modules.LSTMNet": [[153, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[154, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[155, 1, 1, "", "forward"], [155, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[156, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[157, 1, 1, "", "log_prob"], [157, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentMLP": [[158, 1, 1, "", "forward"]], "torchrl.modules.NoisyLazyLinear": [[159, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[161, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[162, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[163, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[164, 1, 1, "", "log_prob"], [164, 3, 1, "", "mode"], [164, 1, 1, "", "rsample"], [164, 1, 1, "", "sample"]], "torchrl.modules.QMixer": [[165, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[167, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[168, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[170, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[171, 3, 1, "", "mean"], [171, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[172, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[173, 1, 1, "", "log_prob"], [173, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[174, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[175, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[177, 0, 1, "", "Actor"], [178, 0, 1, "", "ActorCriticOperator"], [179, 0, 1, "", "ActorCriticWrapper"], [180, 0, 1, "", "ActorValueOperator"], [181, 0, 1, "", "AdditiveGaussianWrapper"], [182, 0, 1, "", "DistributionalQValueActor"], [183, 0, 1, "", "DistributionalQValueModule"], [184, 0, 1, "", "EGreedyWrapper"], [185, 0, 1, "", "LMHeadActorValueOperator"], [186, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [187, 0, 1, "", "ProbabilisticActor"], [188, 0, 1, "", "QValueActor"], [189, 0, 1, "", "QValueModule"], [190, 0, 1, "", "SafeModule"], [191, 0, 1, "", "SafeProbabilisticModule"], [192, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [193, 0, 1, "", "SafeSequential"], [194, 0, 1, "", "TanhModule"], [195, 0, 1, "", "ValueOperator"], [196, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[178, 1, 1, "", "get_critic_operator"], [178, 1, 1, "", "get_policy_head"], [178, 1, 1, "", "get_value_head"], [178, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[179, 1, 1, "", "get_policy_head"], [179, 1, 1, "", "get_policy_operator"], [179, 1, 1, "", "get_value_head"], [179, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[180, 1, 1, "", "get_policy_head"], [180, 1, 1, "", "get_policy_operator"], [180, 1, 1, "", "get_value_head"], [180, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[181, 1, 1, "", "forward"], [181, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[183, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[184, 1, 1, "", "forward"], [184, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[186, 1, 1, "", "forward"], [186, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[189, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[190, 1, 1, "", "random"], [190, 1, 1, "", "random_sample"], [190, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[191, 1, 1, "", "random"], [191, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[194, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[196, 1, 1, "", "get_reward_operator"], [196, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[197, 0, 1, "", "biased_softplus"], [198, 0, 1, "", "inv_softplus"], [199, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[197, 1, 1, "", "forward"]], "torchrl.objectives": [[200, 0, 1, "", "A2CLoss"], [201, 0, 1, "", "CQLLoss"], [202, 0, 1, "", "ClipPPOLoss"], [203, 0, 1, "", "DDPGLoss"], [204, 0, 1, "", "DQNLoss"], [205, 0, 1, "", "DiscreteSACLoss"], [206, 0, 1, "", "DistributionalDQNLoss"], [207, 0, 1, "", "DreamerActorLoss"], [208, 0, 1, "", "DreamerModelLoss"], [209, 0, 1, "", "DreamerValueLoss"], [210, 0, 1, "", "HardUpdate"], [211, 0, 1, "", "IQLLoss"], [212, 0, 1, "", "KLPENPPOLoss"], [213, 0, 1, "", "LossModule"], [214, 0, 1, "", "PPOLoss"], [215, 0, 1, "", "REDQLoss"], [216, 0, 1, "", "ReinforceLoss"], [217, 0, 1, "", "SACLoss"], [218, 0, 1, "", "SoftUpdate"], [219, 0, 1, "", "TD3Loss"], [220, 0, 1, "", "ValueEstimators"], [221, 0, 1, "", "default_value_kwargs"], [222, 0, 1, "", "distance_loss"], [223, 0, 1, "", "hold_out_net"], [224, 0, 1, "", "hold_out_params"], [226, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[200, 1, 1, "", "forward"], [200, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[201, 1, 1, "", "forward"], [201, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[202, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[203, 1, 1, "", "forward"], [203, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[204, 1, 1, "", "forward"], [204, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteSACLoss": [[205, 1, 1, "", "forward"], [205, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[206, 1, 1, "", "forward"], [206, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[207, 1, 1, "", "forward"], [207, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[208, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[209, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[211, 1, 1, "", "forward"], [211, 1, 1, "", "loss_value_diff"], [211, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[212, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[213, 1, 1, "", "convert_to_functional"], [213, 1, 1, "", "cpu"], [213, 1, 1, "", "cuda"], [213, 1, 1, "", "double"], [213, 1, 1, "", "float"], [213, 1, 1, "", "forward"], [213, 1, 1, "", "half"], [213, 1, 1, "", "make_value_estimator"], [213, 1, 1, "", "named_parameters"], [213, 1, 1, "", "parameters"], [213, 1, 1, "", "register_buffer"], [213, 1, 1, "", "set_keys"], [213, 1, 1, "", "to"], [213, 3, 1, "", "value_estimator"]], "torchrl.objectives.PPOLoss": [[214, 1, 1, "", "forward"], [214, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[215, 1, 1, "", "forward"], [215, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[216, 1, 1, "", "forward"], [216, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[217, 1, 1, "", "forward"], [217, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.TD3Loss": [[219, 1, 1, "", "forward"], [219, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[225, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[225, 1, 1, "", "forward"], [225, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[227, 0, 1, "", "GAE"], [228, 0, 1, "", "TD0Estimator"], [229, 0, 1, "", "TD1Estimator"], [230, 0, 1, "", "TDLambdaEstimator"], [231, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[229, 1, 1, "", "forward"], [229, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[230, 1, 1, "", "forward"], [230, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[231, 1, 1, "", "forward"], [231, 1, 1, "", "set_keys"], [231, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[232, 0, 1, "", "generalized_advantage_estimate"], [233, 0, 1, "", "reward2go"], [234, 0, 1, "", "td0_advantage_estimate"], [235, 0, 1, "", "td0_return_estimate"], [236, 0, 1, "", "td1_advantage_estimate"], [237, 0, 1, "", "td1_return_estimate"], [238, 0, 1, "", "td_lambda_advantage_estimate"], [239, 0, 1, "", "td_lambda_return_estimate"], [240, 0, 1, "", "vec_generalized_advantage_estimate"], [241, 0, 1, "", "vec_td1_advantage_estimate"], [242, 0, 1, "", "vec_td1_return_estimate"], [243, 0, 1, "", "vec_td_lambda_advantage_estimate"], [244, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[245, 2, 1, "", "TensorDictRecorder"], [246, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[247, 2, 1, "", "Logger"], [249, 2, 1, "", "generate_exp_name"], [250, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[248, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[251, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[252, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[253, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[254, 0, 1, "", "BatchSubSampler"], [255, 0, 1, "", "ClearCudaCache"], [256, 0, 1, "", "CountFramesLog"], [257, 0, 1, "", "LogReward"], [258, 0, 1, "", "OptimizerHook"], [259, 0, 1, "", "Recorder"], [260, 0, 1, "", "ReplayBufferTrainer"], [261, 0, 1, "", "RewardNormalizer"], [262, 0, 1, "", "SelectKeys"], [263, 0, 1, "", "Trainer"], [264, 0, 1, "", "TrainerHookBase"], [265, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[254, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[255, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[256, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[257, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[258, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[259, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[260, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[261, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[262, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[264, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[265, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[266, 2, 1, "", "correct_for_frame_skip"], [267, 2, 1, "", "get_stats_random_rollout"], [268, 2, 1, "", "make_collector_offpolicy"], [269, 2, 1, "", "make_collector_onpolicy"], [270, 2, 1, "", "make_dqn_loss"], [271, 2, 1, "", "make_redq_loss"], [272, 2, 1, "", "make_redq_model"], [273, 2, 1, "", "make_replay_buffer"], [274, 2, 1, "", "make_target_updater"], [275, 2, 1, "", "make_trainer"], [276, 2, 1, "", "parallel_env_constructor"], [277, 2, 1, "", "sync_async_collector"], [278, 2, 1, "", "sync_sync_collector"], [279, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 283, 284, 285, 286, 287, 288, 289, 293, 294, 298, 299], "tutori": [0, 289, 293], "basic": [0, 296], "intermedi": [0, 8], "advanc": 0, "refer": [0, 281], "knowledg": [0, 282], "base": [0, 7, 282], "indic": 0, "tabl": 0, "collector": [1, 287, 288, 289, 290, 293, 298], "packag": [1, 2, 3, 283, 284, 285, 286], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 287, 288, 289, 293, 298], "distribut": [1, 283], "helper": [1, 3], "function": [1, 4, 284, 288, 289, 293, 298], "replai": [2, 287, 288, 289, 290, 293, 296, 298], "buffer": [2, 287, 288, 289, 290, 293, 296, 298], "compos": [2, 95], "store": [2, 288], "trajectori": 2, "dataset": 2, "tensorspec": [2, 44], "reinforc": [2, 284, 289, 293], "learn": [2, 4, 289, 293], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 283, 284, 285], "env": [3, 294, 298, 299], "vector": [3, 298], "multi": [3, 283, 284, 292, 293], "agent": [3, 4, 283, 284, 293], "environ": [3, 4, 6, 7, 287, 288, 289, 290, 292, 293, 294, 298, 299], "transform": [3, 124, 287, 289, 293, 294, 296, 298, 299], "clone": [3, 7], "record": [3, 259, 285, 287], "domain": [3, 283], "specif": [3, 283, 292], "librari": [3, 298], "thing": [4, 287, 294], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 298], "gener": [4, 283], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 287, 294], "algorithm": [4, 283], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 287, 288], "return": [4, 284], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 287, 289, 290, 292, 293, 294], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 298], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "action": [4, 290, 294], "magnitud": 4, "task": [4, 292], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 287, 288, 289], "standard": 4, "explor": [4, 283, 287, 288], "valu": [4, 283, 284, 287, 289, 290], "loss": [4, 287, 288, 289, 290, 293], "earli": 4, "train": [4, 8, 284, 287, 289, 290, 293, 294], "roughli": 4, "uniformli": 4, "random": [4, 293], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 288], "increas": 4, "an": [4, 289, 290, 294], "dynam": [4, 296], "can": 4, "low": 4, "forward": [4, 287], "model": [4, 283, 287, 288, 290, 295, 298], "also": 4, "us": [4, 6, 9, 290, 295, 296, 298], "offlin": 4, "observ": [4, 287], "space": 4, "effect": [4, 294], "dramat": 4, "dure": [4, 7], "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 299], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 298], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 293, 299], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 287], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 294], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "randompolici": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "discretetensorspec": 27, "lazystackedcompositespec": 28, "lazystackedtensorspec": 29, "multidiscretetensorspec": 30, "multionehotdiscretetensorspec": 31, "multistep": 32, "onehotdiscretetensorspec": 33, "pairwisedataset": 34, "prioritizedreplaybuff": 35, "promptdata": 36, "prompttensordicttoken": 37, "replaybuff": 38, "rewarddata": 39, "rolloutfrommodel": 40, "tensordictprioritizedreplaybuff": 41, "tensordictreplaybuff": 42, "tensordicttoken": 43, "tokenizeddatasetload": 45, "unboundedcontinuoustensorspec": 46, "unboundeddiscretetensorspec": 47, "check_no_exclusive_kei": 48, "consolidate_spec": 49, "create_infinite_iter": 50, "d4rlexperiencereplai": 51, "openmlexperiencereplai": 52, "get_dataload": 53, "lazymemmapstorag": 54, "lazytensorstorag": 55, "liststorag": 56, "prioritizedsampl": 57, "randomsampl": 58, "roundrobinwrit": 59, "sampler": 60, "samplerwithoutreplac": 61, "storag": [62, 287, 296], "tensordictroundrobinwrit": 63, "tensorstorag": 64, "writer": 65, "envbas": [66, 294], "envcreat": 67, "envmetadata": 68, "gymlikeenv": 69, "modelbasedenvbas": 70, "multithreadedenv": 71, "parallelenv": 72, "serialenv": 73, "braxenv": 74, "braxwrapp": 75, "dmcontrolenv": 76, "dmcontrolwrapp": 77, "gymenv": 78, "gymwrapp": 79, "mogymenv": 80, "mogymwrapp": 81, "gym_backend": 82, "set_gym_backend": 83, "habitatenv": 84, "jumanjienv": 85, "jumanjiwrapp": 86, "openmlenv": 87, "vmasenv": 88, "vmaswrapp": 89, "dreamerenv": 90, "binarizereward": 91, "catfram": [92, 296], "cattensor": 93, "centercrop": 94, "discreteactionproject": 96, "doubletofloat": 97, "excludetransform": 98, "finitetensordictcheck": 99, "flattenobserv": 100, "frameskiptransform": 101, "grayscal": 102, "inittrack": 103, "klrewardtransform": 104, "noopresetenv": 105, "observationnorm": 106, "observationtransform": 107, "pinmemorytransform": 108, "r3mtransform": 109, "randomcroptensordict": 110, "renametransform": 111, "resiz": 112, "reward2gotransform": 113, "rewardclip": 114, "rewardsc": 115, "rewardsum": 116, "selecttransform": 117, "squeezetransform": 118, "stepcount": 119, "targetreturn": 120, "tensordictprim": 121, "timemaxpool": 122, "totensorimag": 123, "transformedenv": 125, "unsqueezetransform": 126, "vc1transform": 127, "viprewardtransform": 128, "viptransform": 129, "vecnorm": [130, 299], "gsdenois": 131, "check_env_spec": 132, "exploration_mod": 133, "exploration_typ": 134, "get_available_librari": 135, "make_composite_from_td": 136, "set_exploration_mod": 137, "set_exploration_typ": 138, "step_mdp": 139, "cemplann": 140, "convnet": 141, "ddpgcnnactor": 142, "ddpgcnnqnet": 143, "ddpgmlpactor": 144, "ddpgmlpqnet": 145, "delta": 146, "distributionaldqnnet": 147, "distributionalqvaluehook": 148, "dreameractor": 149, "duelingcnndqnet": 150, "independentnorm": 151, "lstmmodul": 152, "lstmnet": 153, "mlp": [154, 290], "mpcplannerbas": 155, "mppiplann": 156, "maskedcategor": 157, "multiagentmlp": 158, "noisylazylinear": 159, "noisylinear": 160, "normalparamwrapp": 161, "obsdecod": 162, "obsencod": 163, "onehotcategor": 164, "qmixer": [165, 284], "qvaluehook": 166, "rssmposterior": 167, "rssmprior": 168, "squeeze2dlay": 169, "squeezelay": 170, "tanhdelta": 171, "tanhnorm": 172, "truncatednorm": 173, "vdnmixer": 174, "vmapmodul": 175, "reset_nois": 176, "actor": [177, 283, 287], "actorcriticoper": 178, "actorcriticwrapp": 179, "actorvalueoper": 180, "additivegaussianwrapp": 181, "distributionalqvalueactor": 182, "distributionalqvaluemodul": 183, "egreedywrapp": 184, "lmheadactorvalueoper": 185, "ornsteinuhlenbeckprocesswrapp": 186, "probabilisticactor": 187, "qvalueactor": 188, "qvaluemodul": 189, "safemodul": [190, 283], "safeprobabilisticmodul": 191, "safeprobabilistictensordictsequenti": 192, "safesequenti": 193, "tanhmodul": 194, "valueoper": 195, "worldmodelwrapp": 196, "biased_softplu": 197, "inv_softplu": 198, "map": 199, "a2closs": 200, "cqlloss": 201, "clipppoloss": 202, "ddpgloss": 203, "dqnloss": 204, "discretesacloss": 205, "distributionaldqnloss": 206, "dreameractorloss": 207, "dreamermodelloss": 208, "dreamervalueloss": 209, "hardupd": 210, "iqlloss": 211, "klpenppoloss": 212, "lossmodul": [213, 287], "ppoloss": 214, "redqloss": 215, "reinforceloss": 216, "sacloss": 217, "softupd": 218, "td3loss": 219, "valueestim": 220, "default_value_kwarg": 221, "distance_loss": 222, "hold_out_net": 223, "hold_out_param": 224, "qmixerloss": 225, "next_state_valu": 226, "gae": 227, "td0estim": 228, "td1estim": 229, "tdlambdaestim": 230, "valueestimatorbas": 231, "generalized_advantage_estim": 232, "reward2go": 233, "td0_advantage_estim": 234, "td0_return_estim": 235, "td1_advantage_estim": 236, "td1_return_estim": 237, "td_lambda_advantage_estim": 238, "td_lambda_return_estim": 239, "vec_generalized_advantage_estim": 240, "vec_td1_advantage_estim": 241, "vec_td1_return_estim": 242, "vec_td_lambda_advantage_estim": 243, "vec_td_lambda_return_estim": 244, "tensordictrecord": 245, "videorecord": 246, "logger": [247, 285], "csvlogger": 248, "generate_exp_nam": 249, "get_logg": 250, "mlflowlogg": 251, "tensorboardlogg": 252, "wandblogg": 253, "batchsubsampl": 254, "clearcudacach": 255, "countframeslog": 256, "logreward": 257, "optimizerhook": 258, "replaybuffertrain": 260, "rewardnorm": 261, "selectkei": 262, "trainer": [263, 285, 288], "trainerhookbas": 264, "updateweight": 265, "correct_for_frame_skip": 266, "get_stats_random_rollout": 267, "make_collector_offpolici": 268, "make_collector_onpolici": 269, "make_dqn_loss": 270, "make_redq_loss": 271, "make_redq_model": 272, "make_replay_buff": 273, "make_target_updat": 274, "make_train": 275, "parallel_env_constructor": 276, "sync_async_collector": 277, "sync_sync_collector": 278, "transformed_env_constructor": 279, "readm": [280, 291], "tuto": [280, 291], "api": 281, "contribut": [282, 298], "content": 282, "modul": [283, 287, 290, 298], "tensordict": [283, 296, 298], "wrapper": 283, "probabilist": 283, "q": [283, 288, 290], "oper": 283, "join": 283, "hook": [283, 285, 288], "regular": 283, "planner": 283, "object": [284, 287, 298], "dqn": [284, 288, 290], "ddpg": [284, 287], "sac": 284, "redq": 284, "iql": 284, "cql": 284, "td3": 284, "ppo": [284, 289, 293], "a2c": 284, "dreamer": 284, "checkpoint": 285, "builder": 285, "_util": 286, "code": [287, 294], "setup": [287, 290], "The": 287, "__init__": 287, "method": 287, "estim": 287, "put": 287, "togeth": [287, 294], "call": 287, "parallel": [287, 292, 299], "execut": [287, 292, 294], "stat": 287, "build": [287, 288, 296], "evalu": 287, "batch": [287, 294, 296], "size": [287, 296], "construct": 287, "target": [287, 288], "network": [287, 288, 289, 290, 293], "updat": 287, "time": [287, 297], "experi": [287, 294], "result": [287, 289, 293], "conclus": [287, 288, 289, 290, 293, 294, 296], "A": [288, 296], "exampl": [288, 296], "comput": [288, 294, 297], "deep": 288, "collect": [288, 289], "paramet": [288, 289], "hyperparamet": [288, 289, 293], "regist": 288, "possibl": 288, "improv": 288, "defin": [289, 293], "loop": [289, 290, 293, 294], "next": [289, 293], "step": [289, 293, 299], "recurr": 290, "convolut": 290, "lstm": 290, "select": 290, "divers": 292, "rollout": [292, 293, 294, 299], "critic": 293, "pendulum": 294, "write": 294, "_step": 294, "reset": [294, 299], "simul": 294, "_reset": 294, "metadata": 294, "_spec": 294, "spec": [294, 299], "shape": 294, "seed": [294, 299], "wrap": 294, "class": [294, 298], "test": 294, "our": 294, "custom": [294, 296], "simpl": 294, "pretrain": 295, "vanilla": 296, "integr": 296, "tensorclass": 296, "sampl": 296, "iter": 296, "over": 296, "fix": 296, "priorit": 296, "save": 296, "raw": 296, "imag": 296, "more": 296, "complex": 296, "introduct": 298, "config": 298, "tensordictmodul": 298, "sequenc": 298, "program": 298, "ensembl": 298, "meta": 298, "special": 298, "state": 298, "frame_skip": 299, "deepmind": 299, "control": 299, "devic": 299, "run": 299, "close": 299, "access": 299, "attribut": 299, "kwarg": 299}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})